{"componentChunkName":"component---src-templates-blog-post-js","path":"/react/기능구현/vite로env파일이용하기/","result":{"data":{"site":{"siteMetadata":{"title":"GPT 하수인의 개발자 이야기"}},"mdx":{"id":"24536afc-7823-5374-aaa1-00e7441c3707","excerpt":"","body":"\r\n<section>\r\n\r\n<h3>env 파일은 왜 쓰나요?</h3>\r\n\r\n<p>외부 api 요청을 할 때에, 종종 api 키가 필요한 경우가 있다. 이러한 키는 개개인마다 고유한 값이 부여되므로, 외부에 유출되지 않는 편이 좋다. 따라서 .env 라는 파일에\r\n해당 값을 저장해 두고, git에 업로드 할 때는 env 파일을 제외시킨다. 이러한 방법을 통해 보안성을 높일 수 있다.</p>\r\n\r\n<h3>create-react-app과 create vite로 만든 프로젝트는 env 사용법이 다른가요?</h3>\r\n\r\n<p>vite로 생성한 프로젝트의 경우, 변수 명을 'VITE_APP_'으로 시작하게 해야 한다. 또한 변수를 불러올 때에도 process.env가 아닌 'import.meta.env.VITE_APP_'로 불러와야 한다. \r\n이러한 차이점이 발생하는 이유는 vite는 ES모듈 기반으로 작동하고, nodejs는 CommonJS 모듈을 사용하기 때문이라고 한다.</p>\r\n\r\n<h3>ES모듈과 CommonJS 모듈이 뭔가요?</h3>\r\n\r\n<p>\r\nES 모듈 <br />\r\nES6 시점에 새롭게 도입되 모듈 시스템으로, import/export 문을 사용하여 모듈을 로드한다. ES6 모듈의 특징은 build를 할 때에, 미리 해당 모듈에 대한 코드를 분석하여,\r\n모듈을 불러올 시점에 이미 모듈에 대한 값이 캐시에 저장되어 있다는 것이다. 예를 들자면, 사전 리허설을 진행하였기 때문에, 이미 어떤 내용인지 알고 있다라고 생각할 수 있다. \r\n다만 모든 모듈을 미리 분석하고 번들링함에 따라 build 시간이 길어질 수 있다.\r\n<br />\r\n<br />\r\nCommonJS 모듈 <br />\r\nES 모듈과 달리 코드를 동적으로 실행한다. 즉, 코드에 대한 사전 리허설을 거치지 않았기 때문에, 모듈이 로드될 때에야, 비로소 모듈의 내용을 파악하기 시작한다. 이러한 방식은 ES 모듈과\r\n비교해 당장에 필요한 모듈만 로드하기 때문에, 메모리 사용량을 줄이고, 모듈 로딩 시간을 단축시킬 수 있는 이점이 있다.\r\n</p>\r\n\r\n<h3>코드로 적용해보자</h3>\r\n\r\n<p>변수 명을 'VITE_APP_'으로 작성</p>\r\n\r\n<Highlighter code='//.env\r\nVITE_APP_TEST=TEST'></Highlighter>\r\n\r\n<p>'import.meta.env.VITE_APP_' 형식으로 값을 불러 옴</p>\r\n\r\n<Highlighter code='function App() {\r\n  return (\r\n    <div className=\"App\">\r\n      {import.meta.env.VITE_APP_TEST}\r\n      <div>test</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n'></Highlighter>\r\n\r\n<h3>실제 구현된 코드로 보기</h3>\r\n\r\n<Codesandbox url='https://codesandbox.io/p/sandbox/env-prac-6odfm7?file=%2Fsrc%2FApp.tsx&selection=%5B%7B%22endColumn%22%3A1%2C%22endLineNumber%22%3A8%2C%22startColumn%22%3A1%2C%22startLineNumber%22%3A8%7D%5D' title='env_prac'></Codesandbox>\r\n\r\n</section>","frontmatter":{"title":"[react, 기능구현] vite로 env 파일 이용하기","date":"April 16, 2023","description":"vite로 생성한 react 프로젝트에서 env 파일을 이용해 보자."}}},"pageContext":{"id":"24536afc-7823-5374-aaa1-00e7441c3707"}},"staticQueryHashes":["2811435942","2841359383","3235552843","3257411868"],"slicesMap":{}}