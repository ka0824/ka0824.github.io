{"version":3,"file":"component---src-templates-blog-post-js-4f4990aa3bb9c7dff902.js","mappings":"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SfE,GAA0B,CACrCC,SAAU,CACRP,kBAAmBQ,GACnBP,kBAAmBO,IAErBC,OAAQ,CACN,CAACpF,UAAW,IAAKqF,YAAa,CAAC,aAC/B,CAACnf,SAAS,EAAM8Z,UAAW,OA0B/B,SAAS6E,GAAkBhkB,GACzB,MAAM1pB,EAAQwB,KAAKmhC,SAGbmD,EAASpc,EAAMoc,OACftmC,EACJgC,KAAK2nB,KAAKO,GAEZlqB,EAAKQ,MAAQA,EAET8lC,IACFtmC,EAAK0jB,KAAO,CAAC4iB,UAEjB,CAMA,SAAS8H,GAAsBlkB,GAC7BloB,KAAKm8B,OAAO3U,MAAM9F,KAAKvjB,KAAK6B,KAAMkoB,GAClCloB,KAAKm8B,OAAOxU,KAAKjG,KAAKvjB,KAAK6B,KAAMkoB,EACnC,CAMA,SAASskB,GAAoBxuC,GAE3B,MAAO,KADOA,EAAKQ,OAAS,IACP,GACvB,CC9FO,SAASmuC,GAAOnuC,EAAO6oC,GAC5B,MAAM9oB,EAASzZ,OAAOtG,GAEtB,GAAyB,iBAAd6oC,EACT,MAAM,IAAI3qB,UAAU,sBAGtB,IAAIlX,EAAQ,EACR3F,EAAQ0e,EAAOnd,QAAQimC,GAE3B,MAAkB,IAAXxnC,GACL2F,IACA3F,EAAQ0e,EAAOnd,QAAQimC,EAAWxnC,EAAQwnC,EAAUznC,QAGtD,OAAO4F,CACT,CCrBO,MAAMonC,GAA0B,CACrC,QACA,MACA,SACA,QACA,SACA,QACA,SACA,OACA,OACA,SACA,MACA,SACA,QACA,SACA,OACA,KACA,SACA,QACA,SACA,OACA,KACA,SACA,SACA,QACA,SACA,SACA,SACA,OACA,OACA,MACA,QACA,SACA,QACA,SACA,OACA,SACA,SACA,QACA,QACA,QACA,SACA,MACA,QACA,SACA,OACA,SACA,SACA,QACA,OACA,OACA,SACA,MACA,SACA,SACA,QACA,SACA,MACA,OACA,SACA,SACA,SACA,KACA,SACA,QACA,QACA,SACA,SACA,OACA,QACA,KACA,OACA,QACA,SACA,OACA,MACA,SACA,SACA,QACA,SACA,OACA,OACA,SACA,SACA,OACA,OACA,SACA,QACA,OAC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","sources":["webpack://gatsby-starter-blog/./node_modules/@mapbox/hast-util-table-cell-style/index.js","webpack://gatsby-starter-blog/./node_modules/@mapbox/hast-util-table-cell-style/node_modules/unist-util-is/convert.js","webpack://gatsby-starter-blog/./node_modules/@mapbox/hast-util-table-cell-style/node_modules/unist-util-visit-parents/index.js","webpack://gatsby-starter-blog/./node_modules/@mapbox/hast-util-table-cell-style/node_modules/unist-util-visit/index.js","webpack://gatsby-starter-blog/./node_modules/acorn-jsx/index.js","webpack://gatsby-starter-blog/./node_modules/acorn-jsx/xhtml.js","webpack://gatsby-starter-blog/./node_modules/extend/index.js","webpack://gatsby-starter-blog/./src/components/seo.js","webpack://gatsby-starter-blog/./node_modules/@mdx-js/react/lib/index.js","webpack://gatsby-starter-blog/./node_modules/bail/index.js","webpack://gatsby-starter-blog/./node_modules/is-plain-obj/index.js","webpack://gatsby-starter-blog/./node_modules/trough/index.js","webpack://gatsby-starter-blog/./node_modules/unified/node_modules/unist-util-stringify-position/lib/index.js","webpack://gatsby-starter-blog/./node_modules/unified/node_modules/vfile-message/lib/index.js","webpack://gatsby-starter-blog/./node_modules/unified/node_modules/vfile/lib/minpath.browser.js","webpack://gatsby-starter-blog/./node_modules/unified/node_modules/vfile/lib/minproc.browser.js","webpack://gatsby-starter-blog/./node_modules/unified/node_modules/vfile/lib/minurl.shared.js","webpack://gatsby-starter-blog/./node_modules/unified/node_modules/vfile/lib/minurl.browser.js","webpack://gatsby-starter-blog/./node_modules/unified/node_modules/vfile/lib/index.js","webpack://gatsby-starter-blog/./node_modules/unified/lib/index.js","webpack://gatsby-starter-blog/./node_modules/mdast-util-from-markdown/node_modules/mdast-util-to-string/lib/index.js","webpack://gatsby-starter-blog/./node_modules/micromark-util-chunked/index.js","webpack://gatsby-starter-blog/./node_modules/micromark-util-combine-extensions/index.js","webpack://gatsby-starter-blog/./node_modules/micromark-util-character/lib/unicode-punctuation-regex.js","webpack://gatsby-starter-blog/./node_modules/micromark-util-character/index.js","webpack://gatsby-starter-blog/./node_modules/micromark-factory-space/index.js","webpack://gatsby-starter-blog/./node_modules/mdast-util-from-markdown/node_modules/micromark/lib/initialize/content.js","webpack://gatsby-starter-blog/./node_modules/mdast-util-from-markdown/node_modules/micromark/lib/initialize/document.js","webpack://gatsby-starter-blog/./node_modules/micromark-core-commonmark/lib/blank-line.js","webpack://gatsby-starter-blog/./node_modules/micromark-util-subtokenize/index.js","webpack://gatsby-starter-blog/./node_modules/micromark-core-commonmark/lib/content.js","webpack://gatsby-starter-blog/./node_modules/mdast-util-from-markdown/node_modules/micromark/lib/initialize/flow.js","webpack://gatsby-starter-blog/./node_modules/mdast-util-from-markdown/node_modules/micromark/lib/initialize/text.js","webpack://gatsby-starter-blog/./node_modules/micromark-util-resolve-all/index.js","webpack://gatsby-starter-blog/./node_modules/mdast-util-from-markdown/node_modules/micromark/lib/create-tokenizer.js","webpack://gatsby-starter-blog/./node_modules/micromark-core-commonmark/lib/thematic-break.js","webpack://gatsby-starter-blog/./node_modules/micromark-core-commonmark/lib/list.js","webpack://gatsby-starter-blog/./node_modules/micromark-core-commonmark/lib/block-quote.js","webpack://gatsby-starter-blog/./node_modules/micromark-factory-destination/index.js","webpack://gatsby-starter-blog/./node_modules/micromark-factory-label/index.js","webpack://gatsby-starter-blog/./node_modules/micromark-factory-title/index.js","webpack://gatsby-starter-blog/./node_modules/micromark-factory-whitespace/index.js","webpack://gatsby-starter-blog/./node_modules/micromark-util-normalize-identifier/index.js","webpack://gatsby-starter-blog/./node_modules/micromark-core-commonmark/lib/definition.js","webpack://gatsby-starter-blog/./node_modules/micromark-core-commonmark/lib/code-indented.js","webpack://gatsby-starter-blog/./node_modules/micromark-core-commonmark/lib/heading-atx.js","webpack://gatsby-starter-blog/./node_modules/micromark-core-commonmark/lib/setext-underline.js","webpack://gatsby-starter-blog/./node_modules/micromark-util-html-tag-name/index.js","webpack://gatsby-starter-blog/./node_modules/micromark-core-commonmark/lib/html-flow.js","webpack://gatsby-starter-blog/./node_modules/micromark-core-commonmark/lib/code-fenced.js","webpack://gatsby-starter-blog/./node_modules/decode-named-character-reference/index.dom.js","webpack://gatsby-starter-blog/./node_modules/micromark-core-commonmark/lib/character-reference.js","webpack://gatsby-starter-blog/./node_modules/micromark-core-commonmark/lib/character-escape.js","webpack://gatsby-starter-blog/./node_modules/micromark-core-commonmark/lib/line-ending.js","webpack://gatsby-starter-blog/./node_modules/micromark-core-commonmark/lib/label-end.js","webpack://gatsby-starter-blog/./node_modules/micromark-core-commonmark/lib/label-start-image.js","webpack://gatsby-starter-blog/./node_modules/micromark-util-classify-character/index.js","webpack://gatsby-starter-blog/./node_modules/micromark-core-commonmark/lib/attention.js","webpack://gatsby-starter-blog/./node_modules/micromark-core-commonmark/lib/autolink.js","webpack://gatsby-starter-blog/./node_modules/micromark-core-commonmark/lib/html-text.js","webpack://gatsby-starter-blog/./node_modules/micromark-core-commonmark/lib/label-start-link.js","webpack://gatsby-starter-blog/./node_modules/micromark-core-commonmark/lib/hard-break-escape.js","webpack://gatsby-starter-blog/./node_modules/micromark-core-commonmark/lib/code-text.js","webpack://gatsby-starter-blog/./node_modules/mdast-util-from-markdown/node_modules/micromark/lib/constructs.js","webpack://gatsby-starter-blog/./node_modules/mdast-util-from-markdown/node_modules/micromark/lib/preprocess.js","webpack://gatsby-starter-blog/./node_modules/micromark-util-decode-numeric-character-reference/index.js","webpack://gatsby-starter-blog/./node_modules/micromark-util-decode-string/index.js","webpack://gatsby-starter-blog/./node_modules/mdast-util-from-markdown/node_modules/unist-util-stringify-position/lib/index.js","webpack://gatsby-starter-blog/./node_modules/mdast-util-from-markdown/lib/index.js","webpack://gatsby-starter-blog/./node_modules/mdast-util-from-markdown/node_modules/micromark/lib/postprocess.js","webpack://gatsby-starter-blog/./node_modules/mdast-util-from-markdown/node_modules/micromark/lib/parse.js","webpack://gatsby-starter-blog/./node_modules/remark-parse/index.js","webpack://gatsby-starter-blog/./node_modules/remark-parse/lib/index.js","webpack://gatsby-starter-blog/./node_modules/unist-util-position-from-estree/lib/index.js","webpack://gatsby-starter-blog/./node_modules/micromark-factory-mdx-expression/node_modules/unist-util-stringify-position/lib/index.js","webpack://gatsby-starter-blog/./node_modules/micromark-factory-mdx-expression/node_modules/vfile-message/lib/index.js","webpack://gatsby-starter-blog/./node_modules/estree-util-visit/lib/index.js","webpack://gatsby-starter-blog/./node_modules/micromark-util-events-to-acorn/node_modules/unist-util-stringify-position/lib/index.js","webpack://gatsby-starter-blog/./node_modules/micromark-util-events-to-acorn/node_modules/vfile-message/lib/index.js","webpack://gatsby-starter-blog/./node_modules/micromark-util-events-to-acorn/index.js","webpack://gatsby-starter-blog/./node_modules/micromark-util-events-to-acorn/node_modules/vfile-location/lib/index.js","webpack://gatsby-starter-blog/./node_modules/micromark-factory-mdx-expression/index.js","webpack://gatsby-starter-blog/./node_modules/micromark-extension-mdx-expression/lib/syntax.js","webpack://gatsby-starter-blog/./node_modules/estree-util-is-identifier-name/lib/regex.js","webpack://gatsby-starter-blog/./node_modules/estree-util-is-identifier-name/lib/index.js","webpack://gatsby-starter-blog/./node_modules/micromark-extension-mdx-jsx/node_modules/unist-util-stringify-position/lib/index.js","webpack://gatsby-starter-blog/./node_modules/micromark-extension-mdx-jsx/node_modules/vfile-message/lib/index.js","webpack://gatsby-starter-blog/./node_modules/micromark-extension-mdx-jsx/lib/factory-tag.js","webpack://gatsby-starter-blog/./node_modules/micromark-extension-mdx-jsx/lib/jsx-text.js","webpack://gatsby-starter-blog/./node_modules/micromark-extension-mdx-jsx/lib/jsx-flow.js","webpack://gatsby-starter-blog/./node_modules/micromark-extension-mdx-jsx/lib/syntax.js","webpack://gatsby-starter-blog/./node_modules/micromark-extension-mdx-md/index.js","webpack://gatsby-starter-blog/./node_modules/micromark-extension-mdxjs-esm/node_modules/unist-util-stringify-position/lib/index.js","webpack://gatsby-starter-blog/./node_modules/micromark-extension-mdxjs-esm/node_modules/vfile-message/lib/index.js","webpack://gatsby-starter-blog/./node_modules/micromark-extension-mdxjs-esm/lib/syntax.js","webpack://gatsby-starter-blog/./node_modules/mdast-util-mdx-expression/lib/index.js","webpack://gatsby-starter-blog/./node_modules/mdast-util-mdx-jsx/node_modules/ccount/index.js","webpack://gatsby-starter-blog/./node_modules/mdast-util-mdx-jsx/node_modules/character-entities-legacy/index.js","webpack://gatsby-starter-blog/./node_modules/mdast-util-mdx-jsx/node_modules/character-reference-invalid/index.js","webpack://gatsby-starter-blog/./node_modules/mdast-util-mdx-jsx/node_modules/is-decimal/index.js","webpack://gatsby-starter-blog/./node_modules/mdast-util-mdx-jsx/node_modules/is-hexadecimal/index.js","webpack://gatsby-starter-blog/./node_modules/mdast-util-mdx-jsx/node_modules/is-alphanumerical/index.js","webpack://gatsby-starter-blog/./node_modules/mdast-util-mdx-jsx/node_modules/is-alphabetical/index.js","webpack://gatsby-starter-blog/./node_modules/mdast-util-mdx-jsx/node_modules/parse-entities/lib/index.js","webpack://gatsby-starter-blog/./node_modules/mdast-util-mdx-jsx/node_modules/unist-util-stringify-position/lib/index.js","webpack://gatsby-starter-blog/./node_modules/mdast-util-mdx-jsx/node_modules/vfile-message/lib/index.js","webpack://gatsby-starter-blog/./node_modules/mdast-util-mdx-jsx/node_modules/stringify-entities/lib/core.js","webpack://gatsby-starter-blog/./node_modules/mdast-util-mdx-jsx/node_modules/stringify-entities/lib/util/format-basic.js","webpack://gatsby-starter-blog/./node_modules/mdast-util-mdx-jsx/node_modules/stringify-entities/lib/index.js","webpack://gatsby-starter-blog/./node_modules/mdast-util-mdx-jsx/node_modules/mdast-util-to-markdown/lib/util/container-flow.js","webpack://gatsby-starter-blog/./node_modules/mdast-util-mdx-jsx/node_modules/mdast-util-to-markdown/lib/util/indent-lines.js","webpack://gatsby-starter-blog/./node_modules/mdast-util-mdx-jsx/lib/index.js","webpack://gatsby-starter-blog/./node_modules/mdast-util-mdx-jsx/node_modules/mdast-util-to-markdown/lib/util/track.js","webpack://gatsby-starter-blog/./node_modules/mdast-util-mdx-jsx/node_modules/mdast-util-to-markdown/lib/util/container-phrasing.js","webpack://gatsby-starter-blog/./node_modules/mdast-util-mdxjs-esm/lib/index.js","webpack://gatsby-starter-blog/./node_modules/remark-mdx/index.js","webpack://gatsby-starter-blog/./node_modules/micromark-extension-mdxjs/index.js","webpack://gatsby-starter-blog/./node_modules/mdast-util-mdx/index.js","webpack://gatsby-starter-blog/./node_modules/micromark-util-sanitize-uri/index.js","webpack://gatsby-starter-blog/./node_modules/remark-rehype/node_modules/unist-util-is/lib/index.js","webpack://gatsby-starter-blog/./node_modules/remark-rehype/node_modules/unist-util-visit-parents/lib/index.js","webpack://gatsby-starter-blog/./node_modules/remark-rehype/node_modules/unist-util-visit/lib/index.js","webpack://gatsby-starter-blog/./node_modules/remark-rehype/node_modules/unist-util-position/lib/index.js","webpack://gatsby-starter-blog/./node_modules/remark-rehype/node_modules/mdast-util-definitions/lib/index.js","webpack://gatsby-starter-blog/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","webpack://gatsby-starter-blog/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/revert.js","webpack://gatsby-starter-blog/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/list-item.js","webpack://gatsby-starter-blog/./node_modules/trim-lines/index.js","webpack://gatsby-starter-blog/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/index.js","webpack://gatsby-starter-blog/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","webpack://gatsby-starter-blog/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/break.js","webpack://gatsby-starter-blog/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/code.js","webpack://gatsby-starter-blog/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/delete.js","webpack://gatsby-starter-blog/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","webpack://gatsby-starter-blog/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/footnote.js","webpack://gatsby-starter-blog/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/heading.js","webpack://gatsby-starter-blog/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/html.js","webpack://gatsby-starter-blog/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","webpack://gatsby-starter-blog/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/image.js","webpack://gatsby-starter-blog/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","webpack://gatsby-starter-blog/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","webpack://gatsby-starter-blog/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/link.js","webpack://gatsby-starter-blog/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/list.js","webpack://gatsby-starter-blog/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","webpack://gatsby-starter-blog/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/root.js","webpack://gatsby-starter-blog/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/strong.js","webpack://gatsby-starter-blog/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/table.js","webpack://gatsby-starter-blog/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/table-cell.js","webpack://gatsby-starter-blog/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/table-row.js","webpack://gatsby-starter-blog/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/text.js","webpack://gatsby-starter-blog/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","webpack://gatsby-starter-blog/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/state.js","webpack://gatsby-starter-blog/./node_modules/remark-rehype/node_modules/unist-util-generated/lib/index.js","webpack://gatsby-starter-blog/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/index.js","webpack://gatsby-starter-blog/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/footer.js","webpack://gatsby-starter-blog/./node_modules/remark-rehype/lib/index.js","webpack://gatsby-starter-blog/./node_modules/rehype-react/node_modules/property-information/lib/util/schema.js","webpack://gatsby-starter-blog/./node_modules/rehype-react/node_modules/property-information/lib/util/merge.js","webpack://gatsby-starter-blog/./node_modules/rehype-react/node_modules/property-information/lib/normalize.js","webpack://gatsby-starter-blog/./node_modules/rehype-react/node_modules/property-information/lib/util/info.js","webpack://gatsby-starter-blog/./node_modules/rehype-react/node_modules/property-information/lib/util/types.js","webpack://gatsby-starter-blog/./node_modules/rehype-react/node_modules/property-information/lib/util/defined-info.js","webpack://gatsby-starter-blog/./node_modules/rehype-react/node_modules/property-information/lib/util/create.js","webpack://gatsby-starter-blog/./node_modules/rehype-react/node_modules/property-information/lib/xlink.js","webpack://gatsby-starter-blog/./node_modules/rehype-react/node_modules/property-information/lib/xml.js","webpack://gatsby-starter-blog/./node_modules/rehype-react/node_modules/property-information/lib/util/case-sensitive-transform.js","webpack://gatsby-starter-blog/./node_modules/rehype-react/node_modules/property-information/lib/util/case-insensitive-transform.js","webpack://gatsby-starter-blog/./node_modules/rehype-react/node_modules/property-information/lib/xmlns.js","webpack://gatsby-starter-blog/./node_modules/rehype-react/node_modules/property-information/lib/aria.js","webpack://gatsby-starter-blog/./node_modules/rehype-react/node_modules/property-information/lib/html.js","webpack://gatsby-starter-blog/./node_modules/rehype-react/node_modules/property-information/lib/svg.js","webpack://gatsby-starter-blog/./node_modules/rehype-react/node_modules/property-information/index.js","webpack://gatsby-starter-blog/./node_modules/rehype-react/node_modules/property-information/lib/find.js","webpack://gatsby-starter-blog/./node_modules/rehype-react/node_modules/property-information/lib/hast-to-react.js","webpack://gatsby-starter-blog/./node_modules/rehype-react/node_modules/style-to-object/index.mjs","webpack://gatsby-starter-blog/./node_modules/rehype-react/node_modules/web-namespaces/index.js","webpack://gatsby-starter-blog/./node_modules/rehype-react/node_modules/hast-to-hyperscript/lib/index.js","webpack://gatsby-starter-blog/./node_modules/rehype-react/node_modules/comma-separated-tokens/index.js","webpack://gatsby-starter-blog/./node_modules/rehype-react/node_modules/space-separated-tokens/index.js","webpack://gatsby-starter-blog/./node_modules/rehype-react/lib/index.js","webpack://gatsby-starter-blog/./node_modules/rehype-react/node_modules/hast-util-whitespace/index.js","webpack://gatsby-starter-blog/./src/components/comments.js","webpack://gatsby-starter-blog/./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteralLoose.js","webpack://gatsby-starter-blog/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://gatsby-starter-blog/./node_modules/@emotion/memoize/dist/emotion-memoize.esm.js","webpack://gatsby-starter-blog/./node_modules/@emotion/is-prop-valid/dist/emotion-is-prop-valid.esm.js","webpack://gatsby-starter-blog/./node_modules/@emotion/sheet/dist/emotion-sheet.browser.esm.js","webpack://gatsby-starter-blog/./node_modules/stylis/src/Utility.js","webpack://gatsby-starter-blog/./node_modules/stylis/src/Tokenizer.js","webpack://gatsby-starter-blog/./node_modules/stylis/src/Enum.js","webpack://gatsby-starter-blog/./node_modules/stylis/src/Serializer.js","webpack://gatsby-starter-blog/./node_modules/stylis/src/Parser.js","webpack://gatsby-starter-blog/./node_modules/@emotion/cache/dist/emotion-cache.browser.esm.js","webpack://gatsby-starter-blog/./node_modules/stylis/src/Middleware.js","webpack://gatsby-starter-blog/./node_modules/@emotion/hash/dist/emotion-hash.esm.js","webpack://gatsby-starter-blog/./node_modules/@emotion/unitless/dist/emotion-unitless.esm.js","webpack://gatsby-starter-blog/./node_modules/@emotion/serialize/dist/emotion-serialize.browser.esm.js","webpack://gatsby-starter-blog/./node_modules/@emotion/use-insertion-effect-with-fallbacks/dist/emotion-use-insertion-effect-with-fallbacks.browser.esm.js","webpack://gatsby-starter-blog/./node_modules/@emotion/react/dist/emotion-element-6a883da9.browser.esm.js","webpack://gatsby-starter-blog/./node_modules/@emotion/utils/dist/emotion-utils.browser.esm.js","webpack://gatsby-starter-blog/./node_modules/@emotion/styled/base/dist/emotion-styled-base.browser.esm.js","webpack://gatsby-starter-blog/./node_modules/@emotion/styled/dist/emotion-styled.browser.esm.js","webpack://gatsby-starter-blog/./src/components/qna.js","webpack://gatsby-starter-blog/./src/templates/blog-post.js","webpack://gatsby-starter-blog/./node_modules/inline-style-parser/index.js","webpack://gatsby-starter-blog/./node_modules/is-buffer/index.js","webpack://gatsby-starter-blog/./node_modules/rehype-react/node_modules/style-to-object/index.js","webpack://gatsby-starter-blog/./node_modules/@babel/runtime/helpers/extends.js"],"sourcesContent":["'use strict';\n\nvar visit = require('unist-util-visit');\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar hastCssPropertyMap = {\n  align: 'text-align',\n  valign: 'vertical-align',\n  height: 'height',\n  width: 'width',\n};\n\nmodule.exports = function tableCellStyle(node) {\n  visit(node, 'element', visitor);\n  return node;\n};\n\nfunction visitor(node) {\n  if (node.tagName !== 'tr' && node.tagName !== 'td' && node.tagName !== 'th') {\n    return;\n  }\n\n  var hastName;\n  var cssName;\n  for (hastName in hastCssPropertyMap) {\n    if (\n      !hasOwnProperty.call(hastCssPropertyMap, hastName) ||\n      node.properties[hastName] === undefined\n    ) {\n      continue;\n    }\n    cssName = hastCssPropertyMap[hastName];\n    appendStyle(node, cssName, node.properties[hastName]);\n    delete node.properties[hastName];\n  }\n}\n\nfunction appendStyle(node, property, value) {\n  var prevStyle = (node.properties.style || '').trim();\n  if (prevStyle && !/;\\s*/.test(prevStyle)) {\n    prevStyle += ';';\n  }\n  if (prevStyle) {\n    prevStyle += ' ';\n  }\n  var nextStyle = prevStyle + property + ': ' + value + ';';\n  node.properties.style = nextStyle;\n}\n","'use strict'\n\nmodule.exports = convert\n\nfunction convert(test) {\n  if (typeof test === 'string') {\n    return typeFactory(test)\n  }\n\n  if (test === null || test === undefined) {\n    return ok\n  }\n\n  if (typeof test === 'object') {\n    return ('length' in test ? anyFactory : matchesFactory)(test)\n  }\n\n  if (typeof test === 'function') {\n    return test\n  }\n\n  throw new Error('Expected function, string, or object as test')\n}\n\nfunction convertAll(tests) {\n  var results = []\n  var length = tests.length\n  var index = -1\n\n  while (++index < length) {\n    results[index] = convert(tests[index])\n  }\n\n  return results\n}\n\n// Utility assert each property in `test` is represented in `node`, and each\n// values are strictly equal.\nfunction matchesFactory(test) {\n  return matches\n\n  function matches(node) {\n    var key\n\n    for (key in test) {\n      if (node[key] !== test[key]) {\n        return false\n      }\n    }\n\n    return true\n  }\n}\n\nfunction anyFactory(tests) {\n  var checks = convertAll(tests)\n  var length = checks.length\n\n  return matches\n\n  function matches() {\n    var index = -1\n\n    while (++index < length) {\n      if (checks[index].apply(this, arguments)) {\n        return true\n      }\n    }\n\n    return false\n  }\n}\n\n// Utility to convert a string into a function which checks a given node’s type\n// for said string.\nfunction typeFactory(test) {\n  return type\n\n  function type(node) {\n    return Boolean(node && node.type === test)\n  }\n}\n\n// Utility to return true.\nfunction ok() {\n  return true\n}\n","'use strict'\n\nmodule.exports = visitParents\n\nvar convert = require('unist-util-is/convert')\n\nvar CONTINUE = true\nvar SKIP = 'skip'\nvar EXIT = false\n\nvisitParents.CONTINUE = CONTINUE\nvisitParents.SKIP = SKIP\nvisitParents.EXIT = EXIT\n\nfunction visitParents(tree, test, visitor, reverse) {\n  var is\n\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    visitor = test\n    test = null\n  }\n\n  is = convert(test)\n\n  one(tree, null, [])\n\n  // Visit a single node.\n  function one(node, index, parents) {\n    var result = []\n    var subresult\n\n    if (!test || is(node, index, parents[parents.length - 1] || null)) {\n      result = toResult(visitor(node, parents))\n\n      if (result[0] === EXIT) {\n        return result\n      }\n    }\n\n    if (node.children && result[0] !== SKIP) {\n      subresult = toResult(all(node.children, parents.concat(node)))\n      return subresult[0] === EXIT ? subresult : result\n    }\n\n    return result\n  }\n\n  // Visit children in `parent`.\n  function all(children, parents) {\n    var min = -1\n    var step = reverse ? -1 : 1\n    var index = (reverse ? children.length : min) + step\n    var result\n\n    while (index > min && index < children.length) {\n      result = one(children[index], index, parents)\n\n      if (result[0] === EXIT) {\n        return result\n      }\n\n      index = typeof result[1] === 'number' ? result[1] : index + step\n    }\n  }\n}\n\nfunction toResult(value) {\n  if (value !== null && typeof value === 'object' && 'length' in value) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","'use strict'\n\nmodule.exports = visit\n\nvar visitParents = require('unist-util-visit-parents')\n\nvar CONTINUE = visitParents.CONTINUE\nvar SKIP = visitParents.SKIP\nvar EXIT = visitParents.EXIT\n\nvisit.CONTINUE = CONTINUE\nvisit.SKIP = SKIP\nvisit.EXIT = EXIT\n\nfunction visit(tree, test, visitor, reverse) {\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    visitor = test\n    test = null\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  function overload(node, parents) {\n    var parent = parents[parents.length - 1]\n    var index = parent ? parent.children.indexOf(node) : null\n    return visitor(node, index, parent)\n  }\n}\n","'use strict';\n\nconst XHTMLEntities = require('./xhtml');\n\nconst hexNumber = /^[\\da-fA-F]+$/;\nconst decimalNumber = /^\\d+$/;\n\n// The map to `acorn-jsx` tokens from `acorn` namespace objects.\nconst acornJsxMap = new WeakMap();\n\n// Get the original tokens for the given `acorn` namespace object.\nfunction getJsxTokens(acorn) {\n  acorn = acorn.Parser.acorn || acorn;\n  let acornJsx = acornJsxMap.get(acorn);\n  if (!acornJsx) {\n    const tt = acorn.tokTypes;\n    const TokContext = acorn.TokContext;\n    const TokenType = acorn.TokenType;\n    const tc_oTag = new TokContext('<tag', false);\n    const tc_cTag = new TokContext('</tag', false);\n    const tc_expr = new TokContext('<tag>...</tag>', true, true);\n    const tokContexts = {\n      tc_oTag: tc_oTag,\n      tc_cTag: tc_cTag,\n      tc_expr: tc_expr\n    };\n    const tokTypes = {\n      jsxName: new TokenType('jsxName'),\n      jsxText: new TokenType('jsxText', {beforeExpr: true}),\n      jsxTagStart: new TokenType('jsxTagStart', {startsExpr: true}),\n      jsxTagEnd: new TokenType('jsxTagEnd')\n    };\n\n    tokTypes.jsxTagStart.updateContext = function() {\n      this.context.push(tc_expr); // treat as beginning of JSX expression\n      this.context.push(tc_oTag); // start opening tag context\n      this.exprAllowed = false;\n    };\n    tokTypes.jsxTagEnd.updateContext = function(prevType) {\n      let out = this.context.pop();\n      if (out === tc_oTag && prevType === tt.slash || out === tc_cTag) {\n        this.context.pop();\n        this.exprAllowed = this.curContext() === tc_expr;\n      } else {\n        this.exprAllowed = true;\n      }\n    };\n\n    acornJsx = { tokContexts: tokContexts, tokTypes: tokTypes };\n    acornJsxMap.set(acorn, acornJsx);\n  }\n\n  return acornJsx;\n}\n\n// Transforms JSX element name to string.\n\nfunction getQualifiedJSXName(object) {\n  if (!object)\n    return object;\n\n  if (object.type === 'JSXIdentifier')\n    return object.name;\n\n  if (object.type === 'JSXNamespacedName')\n    return object.namespace.name + ':' + object.name.name;\n\n  if (object.type === 'JSXMemberExpression')\n    return getQualifiedJSXName(object.object) + '.' +\n    getQualifiedJSXName(object.property);\n}\n\nmodule.exports = function(options) {\n  options = options || {};\n  return function(Parser) {\n    return plugin({\n      allowNamespaces: options.allowNamespaces !== false,\n      allowNamespacedObjects: !!options.allowNamespacedObjects\n    }, Parser);\n  };\n};\n\n// This is `tokTypes` of the peer dep.\n// This can be different instances from the actual `tokTypes` this plugin uses.\nObject.defineProperty(module.exports, \"tokTypes\", {\n  get: function get_tokTypes() {\n    return getJsxTokens(require(\"acorn\")).tokTypes;\n  },\n  configurable: true,\n  enumerable: true\n});\n\nfunction plugin(options, Parser) {\n  const acorn = Parser.acorn || require(\"acorn\");\n  const acornJsx = getJsxTokens(acorn);\n  const tt = acorn.tokTypes;\n  const tok = acornJsx.tokTypes;\n  const tokContexts = acorn.tokContexts;\n  const tc_oTag = acornJsx.tokContexts.tc_oTag;\n  const tc_cTag = acornJsx.tokContexts.tc_cTag;\n  const tc_expr = acornJsx.tokContexts.tc_expr;\n  const isNewLine = acorn.isNewLine;\n  const isIdentifierStart = acorn.isIdentifierStart;\n  const isIdentifierChar = acorn.isIdentifierChar;\n\n  return class extends Parser {\n    // Expose actual `tokTypes` and `tokContexts` to other plugins.\n    static get acornJsx() {\n      return acornJsx;\n    }\n\n    // Reads inline JSX contents token.\n    jsx_readToken() {\n      let out = '', chunkStart = this.pos;\n      for (;;) {\n        if (this.pos >= this.input.length)\n          this.raise(this.start, 'Unterminated JSX contents');\n        let ch = this.input.charCodeAt(this.pos);\n\n        switch (ch) {\n        case 60: // '<'\n        case 123: // '{'\n          if (this.pos === this.start) {\n            if (ch === 60 && this.exprAllowed) {\n              ++this.pos;\n              return this.finishToken(tok.jsxTagStart);\n            }\n            return this.getTokenFromCode(ch);\n          }\n          out += this.input.slice(chunkStart, this.pos);\n          return this.finishToken(tok.jsxText, out);\n\n        case 38: // '&'\n          out += this.input.slice(chunkStart, this.pos);\n          out += this.jsx_readEntity();\n          chunkStart = this.pos;\n          break;\n\n        case 62: // '>'\n        case 125: // '}'\n          this.raise(\n            this.pos,\n            \"Unexpected token `\" + this.input[this.pos] + \"`. Did you mean `\" +\n              (ch === 62 ? \"&gt;\" : \"&rbrace;\") + \"` or \" + \"`{\\\"\" + this.input[this.pos] + \"\\\"}\" + \"`?\"\n          );\n\n        default:\n          if (isNewLine(ch)) {\n            out += this.input.slice(chunkStart, this.pos);\n            out += this.jsx_readNewLine(true);\n            chunkStart = this.pos;\n          } else {\n            ++this.pos;\n          }\n        }\n      }\n    }\n\n    jsx_readNewLine(normalizeCRLF) {\n      let ch = this.input.charCodeAt(this.pos);\n      let out;\n      ++this.pos;\n      if (ch === 13 && this.input.charCodeAt(this.pos) === 10) {\n        ++this.pos;\n        out = normalizeCRLF ? '\\n' : '\\r\\n';\n      } else {\n        out = String.fromCharCode(ch);\n      }\n      if (this.options.locations) {\n        ++this.curLine;\n        this.lineStart = this.pos;\n      }\n\n      return out;\n    }\n\n    jsx_readString(quote) {\n      let out = '', chunkStart = ++this.pos;\n      for (;;) {\n        if (this.pos >= this.input.length)\n          this.raise(this.start, 'Unterminated string constant');\n        let ch = this.input.charCodeAt(this.pos);\n        if (ch === quote) break;\n        if (ch === 38) { // '&'\n          out += this.input.slice(chunkStart, this.pos);\n          out += this.jsx_readEntity();\n          chunkStart = this.pos;\n        } else if (isNewLine(ch)) {\n          out += this.input.slice(chunkStart, this.pos);\n          out += this.jsx_readNewLine(false);\n          chunkStart = this.pos;\n        } else {\n          ++this.pos;\n        }\n      }\n      out += this.input.slice(chunkStart, this.pos++);\n      return this.finishToken(tt.string, out);\n    }\n\n    jsx_readEntity() {\n      let str = '', count = 0, entity;\n      let ch = this.input[this.pos];\n      if (ch !== '&')\n        this.raise(this.pos, 'Entity must start with an ampersand');\n      let startPos = ++this.pos;\n      while (this.pos < this.input.length && count++ < 10) {\n        ch = this.input[this.pos++];\n        if (ch === ';') {\n          if (str[0] === '#') {\n            if (str[1] === 'x') {\n              str = str.substr(2);\n              if (hexNumber.test(str))\n                entity = String.fromCharCode(parseInt(str, 16));\n            } else {\n              str = str.substr(1);\n              if (decimalNumber.test(str))\n                entity = String.fromCharCode(parseInt(str, 10));\n            }\n          } else {\n            entity = XHTMLEntities[str];\n          }\n          break;\n        }\n        str += ch;\n      }\n      if (!entity) {\n        this.pos = startPos;\n        return '&';\n      }\n      return entity;\n    }\n\n    // Read a JSX identifier (valid tag or attribute name).\n    //\n    // Optimized version since JSX identifiers can't contain\n    // escape characters and so can be read as single slice.\n    // Also assumes that first character was already checked\n    // by isIdentifierStart in readToken.\n\n    jsx_readWord() {\n      let ch, start = this.pos;\n      do {\n        ch = this.input.charCodeAt(++this.pos);\n      } while (isIdentifierChar(ch) || ch === 45); // '-'\n      return this.finishToken(tok.jsxName, this.input.slice(start, this.pos));\n    }\n\n    // Parse next token as JSX identifier\n\n    jsx_parseIdentifier() {\n      let node = this.startNode();\n      if (this.type === tok.jsxName)\n        node.name = this.value;\n      else if (this.type.keyword)\n        node.name = this.type.keyword;\n      else\n        this.unexpected();\n      this.next();\n      return this.finishNode(node, 'JSXIdentifier');\n    }\n\n    // Parse namespaced identifier.\n\n    jsx_parseNamespacedName() {\n      let startPos = this.start, startLoc = this.startLoc;\n      let name = this.jsx_parseIdentifier();\n      if (!options.allowNamespaces || !this.eat(tt.colon)) return name;\n      var node = this.startNodeAt(startPos, startLoc);\n      node.namespace = name;\n      node.name = this.jsx_parseIdentifier();\n      return this.finishNode(node, 'JSXNamespacedName');\n    }\n\n    // Parses element name in any form - namespaced, member\n    // or single identifier.\n\n    jsx_parseElementName() {\n      if (this.type === tok.jsxTagEnd) return '';\n      let startPos = this.start, startLoc = this.startLoc;\n      let node = this.jsx_parseNamespacedName();\n      if (this.type === tt.dot && node.type === 'JSXNamespacedName' && !options.allowNamespacedObjects) {\n        this.unexpected();\n      }\n      while (this.eat(tt.dot)) {\n        let newNode = this.startNodeAt(startPos, startLoc);\n        newNode.object = node;\n        newNode.property = this.jsx_parseIdentifier();\n        node = this.finishNode(newNode, 'JSXMemberExpression');\n      }\n      return node;\n    }\n\n    // Parses any type of JSX attribute value.\n\n    jsx_parseAttributeValue() {\n      switch (this.type) {\n      case tt.braceL:\n        let node = this.jsx_parseExpressionContainer();\n        if (node.expression.type === 'JSXEmptyExpression')\n          this.raise(node.start, 'JSX attributes must only be assigned a non-empty expression');\n        return node;\n\n      case tok.jsxTagStart:\n      case tt.string:\n        return this.parseExprAtom();\n\n      default:\n        this.raise(this.start, 'JSX value should be either an expression or a quoted JSX text');\n      }\n    }\n\n    // JSXEmptyExpression is unique type since it doesn't actually parse anything,\n    // and so it should start at the end of last read token (left brace) and finish\n    // at the beginning of the next one (right brace).\n\n    jsx_parseEmptyExpression() {\n      let node = this.startNodeAt(this.lastTokEnd, this.lastTokEndLoc);\n      return this.finishNodeAt(node, 'JSXEmptyExpression', this.start, this.startLoc);\n    }\n\n    // Parses JSX expression enclosed into curly brackets.\n\n    jsx_parseExpressionContainer() {\n      let node = this.startNode();\n      this.next();\n      node.expression = this.type === tt.braceR\n        ? this.jsx_parseEmptyExpression()\n        : this.parseExpression();\n      this.expect(tt.braceR);\n      return this.finishNode(node, 'JSXExpressionContainer');\n    }\n\n    // Parses following JSX attribute name-value pair.\n\n    jsx_parseAttribute() {\n      let node = this.startNode();\n      if (this.eat(tt.braceL)) {\n        this.expect(tt.ellipsis);\n        node.argument = this.parseMaybeAssign();\n        this.expect(tt.braceR);\n        return this.finishNode(node, 'JSXSpreadAttribute');\n      }\n      node.name = this.jsx_parseNamespacedName();\n      node.value = this.eat(tt.eq) ? this.jsx_parseAttributeValue() : null;\n      return this.finishNode(node, 'JSXAttribute');\n    }\n\n    // Parses JSX opening tag starting after '<'.\n\n    jsx_parseOpeningElementAt(startPos, startLoc) {\n      let node = this.startNodeAt(startPos, startLoc);\n      node.attributes = [];\n      let nodeName = this.jsx_parseElementName();\n      if (nodeName) node.name = nodeName;\n      while (this.type !== tt.slash && this.type !== tok.jsxTagEnd)\n        node.attributes.push(this.jsx_parseAttribute());\n      node.selfClosing = this.eat(tt.slash);\n      this.expect(tok.jsxTagEnd);\n      return this.finishNode(node, nodeName ? 'JSXOpeningElement' : 'JSXOpeningFragment');\n    }\n\n    // Parses JSX closing tag starting after '</'.\n\n    jsx_parseClosingElementAt(startPos, startLoc) {\n      let node = this.startNodeAt(startPos, startLoc);\n      let nodeName = this.jsx_parseElementName();\n      if (nodeName) node.name = nodeName;\n      this.expect(tok.jsxTagEnd);\n      return this.finishNode(node, nodeName ? 'JSXClosingElement' : 'JSXClosingFragment');\n    }\n\n    // Parses entire JSX element, including it's opening tag\n    // (starting after '<'), attributes, contents and closing tag.\n\n    jsx_parseElementAt(startPos, startLoc) {\n      let node = this.startNodeAt(startPos, startLoc);\n      let children = [];\n      let openingElement = this.jsx_parseOpeningElementAt(startPos, startLoc);\n      let closingElement = null;\n\n      if (!openingElement.selfClosing) {\n        contents: for (;;) {\n          switch (this.type) {\n          case tok.jsxTagStart:\n            startPos = this.start; startLoc = this.startLoc;\n            this.next();\n            if (this.eat(tt.slash)) {\n              closingElement = this.jsx_parseClosingElementAt(startPos, startLoc);\n              break contents;\n            }\n            children.push(this.jsx_parseElementAt(startPos, startLoc));\n            break;\n\n          case tok.jsxText:\n            children.push(this.parseExprAtom());\n            break;\n\n          case tt.braceL:\n            children.push(this.jsx_parseExpressionContainer());\n            break;\n\n          default:\n            this.unexpected();\n          }\n        }\n        if (getQualifiedJSXName(closingElement.name) !== getQualifiedJSXName(openingElement.name)) {\n          this.raise(\n            closingElement.start,\n            'Expected corresponding JSX closing tag for <' + getQualifiedJSXName(openingElement.name) + '>');\n        }\n      }\n      let fragmentOrElement = openingElement.name ? 'Element' : 'Fragment';\n\n      node['opening' + fragmentOrElement] = openingElement;\n      node['closing' + fragmentOrElement] = closingElement;\n      node.children = children;\n      if (this.type === tt.relational && this.value === \"<\") {\n        this.raise(this.start, \"Adjacent JSX elements must be wrapped in an enclosing tag\");\n      }\n      return this.finishNode(node, 'JSX' + fragmentOrElement);\n    }\n\n    // Parse JSX text\n\n    jsx_parseText() {\n      let node = this.parseLiteral(this.value);\n      node.type = \"JSXText\";\n      return node;\n    }\n\n    // Parses entire JSX element from current position.\n\n    jsx_parseElement() {\n      let startPos = this.start, startLoc = this.startLoc;\n      this.next();\n      return this.jsx_parseElementAt(startPos, startLoc);\n    }\n\n    parseExprAtom(refShortHandDefaultPos) {\n      if (this.type === tok.jsxText)\n        return this.jsx_parseText();\n      else if (this.type === tok.jsxTagStart)\n        return this.jsx_parseElement();\n      else\n        return super.parseExprAtom(refShortHandDefaultPos);\n    }\n\n    readToken(code) {\n      let context = this.curContext();\n\n      if (context === tc_expr) return this.jsx_readToken();\n\n      if (context === tc_oTag || context === tc_cTag) {\n        if (isIdentifierStart(code)) return this.jsx_readWord();\n\n        if (code == 62) {\n          ++this.pos;\n          return this.finishToken(tok.jsxTagEnd);\n        }\n\n        if ((code === 34 || code === 39) && context == tc_oTag)\n          return this.jsx_readString(code);\n      }\n\n      if (code === 60 && this.exprAllowed && this.input.charCodeAt(this.pos + 1) !== 33) {\n        ++this.pos;\n        return this.finishToken(tok.jsxTagStart);\n      }\n      return super.readToken(code);\n    }\n\n    updateContext(prevType) {\n      if (this.type == tt.braceL) {\n        var curContext = this.curContext();\n        if (curContext == tc_oTag) this.context.push(tokContexts.b_expr);\n        else if (curContext == tc_expr) this.context.push(tokContexts.b_tmpl);\n        else super.updateContext(prevType);\n        this.exprAllowed = true;\n      } else if (this.type === tt.slash && prevType === tok.jsxTagStart) {\n        this.context.length -= 2; // do not consider JSX expr -> JSX open tag -> ... anymore\n        this.context.push(tc_cTag); // reconsider as closing tag context\n        this.exprAllowed = false;\n      } else {\n        return super.updateContext(prevType);\n      }\n    }\n  };\n}\n","module.exports = {\n  quot: '\\u0022',\n  amp: '&',\n  apos: '\\u0027',\n  lt: '<',\n  gt: '>',\n  nbsp: '\\u00A0',\n  iexcl: '\\u00A1',\n  cent: '\\u00A2',\n  pound: '\\u00A3',\n  curren: '\\u00A4',\n  yen: '\\u00A5',\n  brvbar: '\\u00A6',\n  sect: '\\u00A7',\n  uml: '\\u00A8',\n  copy: '\\u00A9',\n  ordf: '\\u00AA',\n  laquo: '\\u00AB',\n  not: '\\u00AC',\n  shy: '\\u00AD',\n  reg: '\\u00AE',\n  macr: '\\u00AF',\n  deg: '\\u00B0',\n  plusmn: '\\u00B1',\n  sup2: '\\u00B2',\n  sup3: '\\u00B3',\n  acute: '\\u00B4',\n  micro: '\\u00B5',\n  para: '\\u00B6',\n  middot: '\\u00B7',\n  cedil: '\\u00B8',\n  sup1: '\\u00B9',\n  ordm: '\\u00BA',\n  raquo: '\\u00BB',\n  frac14: '\\u00BC',\n  frac12: '\\u00BD',\n  frac34: '\\u00BE',\n  iquest: '\\u00BF',\n  Agrave: '\\u00C0',\n  Aacute: '\\u00C1',\n  Acirc: '\\u00C2',\n  Atilde: '\\u00C3',\n  Auml: '\\u00C4',\n  Aring: '\\u00C5',\n  AElig: '\\u00C6',\n  Ccedil: '\\u00C7',\n  Egrave: '\\u00C8',\n  Eacute: '\\u00C9',\n  Ecirc: '\\u00CA',\n  Euml: '\\u00CB',\n  Igrave: '\\u00CC',\n  Iacute: '\\u00CD',\n  Icirc: '\\u00CE',\n  Iuml: '\\u00CF',\n  ETH: '\\u00D0',\n  Ntilde: '\\u00D1',\n  Ograve: '\\u00D2',\n  Oacute: '\\u00D3',\n  Ocirc: '\\u00D4',\n  Otilde: '\\u00D5',\n  Ouml: '\\u00D6',\n  times: '\\u00D7',\n  Oslash: '\\u00D8',\n  Ugrave: '\\u00D9',\n  Uacute: '\\u00DA',\n  Ucirc: '\\u00DB',\n  Uuml: '\\u00DC',\n  Yacute: '\\u00DD',\n  THORN: '\\u00DE',\n  szlig: '\\u00DF',\n  agrave: '\\u00E0',\n  aacute: '\\u00E1',\n  acirc: '\\u00E2',\n  atilde: '\\u00E3',\n  auml: '\\u00E4',\n  aring: '\\u00E5',\n  aelig: '\\u00E6',\n  ccedil: '\\u00E7',\n  egrave: '\\u00E8',\n  eacute: '\\u00E9',\n  ecirc: '\\u00EA',\n  euml: '\\u00EB',\n  igrave: '\\u00EC',\n  iacute: '\\u00ED',\n  icirc: '\\u00EE',\n  iuml: '\\u00EF',\n  eth: '\\u00F0',\n  ntilde: '\\u00F1',\n  ograve: '\\u00F2',\n  oacute: '\\u00F3',\n  ocirc: '\\u00F4',\n  otilde: '\\u00F5',\n  ouml: '\\u00F6',\n  divide: '\\u00F7',\n  oslash: '\\u00F8',\n  ugrave: '\\u00F9',\n  uacute: '\\u00FA',\n  ucirc: '\\u00FB',\n  uuml: '\\u00FC',\n  yacute: '\\u00FD',\n  thorn: '\\u00FE',\n  yuml: '\\u00FF',\n  OElig: '\\u0152',\n  oelig: '\\u0153',\n  Scaron: '\\u0160',\n  scaron: '\\u0161',\n  Yuml: '\\u0178',\n  fnof: '\\u0192',\n  circ: '\\u02C6',\n  tilde: '\\u02DC',\n  Alpha: '\\u0391',\n  Beta: '\\u0392',\n  Gamma: '\\u0393',\n  Delta: '\\u0394',\n  Epsilon: '\\u0395',\n  Zeta: '\\u0396',\n  Eta: '\\u0397',\n  Theta: '\\u0398',\n  Iota: '\\u0399',\n  Kappa: '\\u039A',\n  Lambda: '\\u039B',\n  Mu: '\\u039C',\n  Nu: '\\u039D',\n  Xi: '\\u039E',\n  Omicron: '\\u039F',\n  Pi: '\\u03A0',\n  Rho: '\\u03A1',\n  Sigma: '\\u03A3',\n  Tau: '\\u03A4',\n  Upsilon: '\\u03A5',\n  Phi: '\\u03A6',\n  Chi: '\\u03A7',\n  Psi: '\\u03A8',\n  Omega: '\\u03A9',\n  alpha: '\\u03B1',\n  beta: '\\u03B2',\n  gamma: '\\u03B3',\n  delta: '\\u03B4',\n  epsilon: '\\u03B5',\n  zeta: '\\u03B6',\n  eta: '\\u03B7',\n  theta: '\\u03B8',\n  iota: '\\u03B9',\n  kappa: '\\u03BA',\n  lambda: '\\u03BB',\n  mu: '\\u03BC',\n  nu: '\\u03BD',\n  xi: '\\u03BE',\n  omicron: '\\u03BF',\n  pi: '\\u03C0',\n  rho: '\\u03C1',\n  sigmaf: '\\u03C2',\n  sigma: '\\u03C3',\n  tau: '\\u03C4',\n  upsilon: '\\u03C5',\n  phi: '\\u03C6',\n  chi: '\\u03C7',\n  psi: '\\u03C8',\n  omega: '\\u03C9',\n  thetasym: '\\u03D1',\n  upsih: '\\u03D2',\n  piv: '\\u03D6',\n  ensp: '\\u2002',\n  emsp: '\\u2003',\n  thinsp: '\\u2009',\n  zwnj: '\\u200C',\n  zwj: '\\u200D',\n  lrm: '\\u200E',\n  rlm: '\\u200F',\n  ndash: '\\u2013',\n  mdash: '\\u2014',\n  lsquo: '\\u2018',\n  rsquo: '\\u2019',\n  sbquo: '\\u201A',\n  ldquo: '\\u201C',\n  rdquo: '\\u201D',\n  bdquo: '\\u201E',\n  dagger: '\\u2020',\n  Dagger: '\\u2021',\n  bull: '\\u2022',\n  hellip: '\\u2026',\n  permil: '\\u2030',\n  prime: '\\u2032',\n  Prime: '\\u2033',\n  lsaquo: '\\u2039',\n  rsaquo: '\\u203A',\n  oline: '\\u203E',\n  frasl: '\\u2044',\n  euro: '\\u20AC',\n  image: '\\u2111',\n  weierp: '\\u2118',\n  real: '\\u211C',\n  trade: '\\u2122',\n  alefsym: '\\u2135',\n  larr: '\\u2190',\n  uarr: '\\u2191',\n  rarr: '\\u2192',\n  darr: '\\u2193',\n  harr: '\\u2194',\n  crarr: '\\u21B5',\n  lArr: '\\u21D0',\n  uArr: '\\u21D1',\n  rArr: '\\u21D2',\n  dArr: '\\u21D3',\n  hArr: '\\u21D4',\n  forall: '\\u2200',\n  part: '\\u2202',\n  exist: '\\u2203',\n  empty: '\\u2205',\n  nabla: '\\u2207',\n  isin: '\\u2208',\n  notin: '\\u2209',\n  ni: '\\u220B',\n  prod: '\\u220F',\n  sum: '\\u2211',\n  minus: '\\u2212',\n  lowast: '\\u2217',\n  radic: '\\u221A',\n  prop: '\\u221D',\n  infin: '\\u221E',\n  ang: '\\u2220',\n  and: '\\u2227',\n  or: '\\u2228',\n  cap: '\\u2229',\n  cup: '\\u222A',\n  'int': '\\u222B',\n  there4: '\\u2234',\n  sim: '\\u223C',\n  cong: '\\u2245',\n  asymp: '\\u2248',\n  ne: '\\u2260',\n  equiv: '\\u2261',\n  le: '\\u2264',\n  ge: '\\u2265',\n  sub: '\\u2282',\n  sup: '\\u2283',\n  nsub: '\\u2284',\n  sube: '\\u2286',\n  supe: '\\u2287',\n  oplus: '\\u2295',\n  otimes: '\\u2297',\n  perp: '\\u22A5',\n  sdot: '\\u22C5',\n  lceil: '\\u2308',\n  rceil: '\\u2309',\n  lfloor: '\\u230A',\n  rfloor: '\\u230B',\n  lang: '\\u2329',\n  rang: '\\u232A',\n  loz: '\\u25CA',\n  spades: '\\u2660',\n  clubs: '\\u2663',\n  hearts: '\\u2665',\n  diams: '\\u2666'\n};\n","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","/**\r\n * SEO component that queries for data with\r\n * Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst Seo = ({ description, title, children }) => {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            social {\r\n              twitter\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n  const defaultTitle = site.siteMetadata?.title\r\n\r\n  return (\r\n    <>\r\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\r\n      <meta name=\"description\" content={metaDescription} />\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:description\" content={metaDescription} />\r\n      <meta property=\"og:type\" content=\"website\" />\r\n      <meta name=\"twitter:card\" content=\"summary\" />\r\n      <meta\r\n        name=\"twitter:creator\"\r\n        content={site.siteMetadata?.social?.twitter || ``}\r\n      />\r\n      <meta name=\"twitter:title\" content={title} />\r\n      <meta name=\"twitter:description\" content={metaDescription} />\r\n      {children}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Seo\r\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","/**\n * @typedef {(error?: Error|null|undefined, ...output: Array<any>) => void} Callback\n * @typedef {(...input: Array<any>) => any} Middleware\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add `fn` (middleware) to the list.\n * @typedef {{run: Run, use: Use}} Pipeline\n *   Middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error|null|undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware`.\n * Can be sync or async; return a promise, receive a callback, or return new\n * values and errors.\n *\n * @param {Middleware} middleware\n * @param {Callback} callback\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result instanceof Promise) {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Position | PositionLike | Point | PointLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason` at `place` from `origin`.\n   *\n   * When an error is passed in as `reason`, the `stack` is copied.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   *\n   *   > 👉 **Note**: you should use markdown.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // To do: next major: expose `undefined` everywhere instead of `null`.\n  constructor(reason, place, origin) {\n    /** @type {[string | null, string | null]} */\n    const parts = [null, null]\n    /** @type {Position} */\n    let position = {\n      // @ts-expect-error: we always follows the structure of `position`.\n      start: {line: null, column: null},\n      // @ts-expect-error: \"\n      end: {line: null, column: null}\n    }\n\n    super()\n\n    if (typeof place === 'string') {\n      origin = place\n      place = undefined\n    }\n\n    if (typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        parts[1] = origin\n      } else {\n        parts[0] = origin.slice(0, index)\n        parts[1] = origin.slice(index + 1)\n      }\n    }\n\n    if (place) {\n      // Node.\n      if ('type' in place || 'position' in place) {\n        if (place.position) {\n          // To do: next major: deep clone.\n          // @ts-expect-error: looks like a position.\n          position = place.position\n        }\n      }\n      // Position.\n      else if ('start' in place || 'end' in place) {\n        // @ts-expect-error: looks like a position.\n        // To do: next major: deep clone.\n        position = place\n      }\n      // Point.\n      else if ('line' in place || 'column' in place) {\n        // To do: next major: deep clone.\n        position.start = place\n      }\n    }\n\n    // Fields from `Error`.\n    /**\n     * Serialized positional info of error.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(place) || '1:1'\n\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = typeof reason === 'object' ? reason.message : reason\n\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack = ''\n\n    if (typeof reason === 'object' && reason.stack) {\n      this.stack = reason.stack\n    }\n\n    /**\n     * Reason for message.\n     *\n     * > 👉 **Note**: you should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * State of problem.\n     *\n     * * `true` — marks associated file as no longer processable (error)\n     * * `false` — necessitates a (potential) change (warning)\n     * * `null | undefined` — for things that might not need changing (info)\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | null}\n     */\n    this.line = position.start.line\n\n    /**\n     * Starting column of error.\n     *\n     * @type {number | null}\n     */\n    this.column = position.start.column\n\n    /**\n     * Full unist position.\n     *\n     * @type {Position | null}\n     */\n    this.position = position\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | null}\n     */\n    this.source = parts[0]\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | null}\n     */\n    this.ruleId = parts[1]\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | null}\n     */\n    this.file\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | null}\n     */\n    this.actual\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | null}\n     */\n    this.expected\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | null}\n     */\n    this.url\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | null}\n     */\n    this.note\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.fatal = null\nVFileMessage.prototype.column = null\nVFileMessage.prototype.line = null\nVFileMessage.prototype.source = null\nVFileMessage.prototype.ruleId = null\nVFileMessage.prototype.position = null\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * Get the basename from a path.\n *\n * @param {string} path\n *   File path.\n * @param {string | undefined} [ext]\n *   Extension to strip.\n * @returns {string}\n *   Stem or basename.\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.charCodeAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.charCodeAt(index) === ext.charCodeAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * Get the dirname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.charCodeAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.charCodeAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * Get an extname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   Extname.\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.charCodeAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * Join segments from a path.\n *\n * @param {Array<string>} segments\n *   Path segments.\n * @returns {string}\n *   File path.\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string | undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Normalize a basic file path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\n// Note: `normalize` is not exposed as `path.normalize`, so some code is\n// manually removed from it.\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.charCodeAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.charCodeAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n *   File path.\n * @param {boolean} allowAboveRoot\n *   Whether `..` can move above root.\n * @returns {string}\n *   File path.\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number | undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.charCodeAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.charCodeAt(result.length - 1) !== 46 /* `.` */ ||\n          result.charCodeAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * Make sure `path` is a string.\n *\n * @param {string} path\n *   File path.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * @typedef URL\n * @property {string} hash\n * @property {string} host\n * @property {string} hostname\n * @property {string} href\n * @property {string} origin\n * @property {string} password\n * @property {string} pathname\n * @property {string} port\n * @property {string} protocol\n * @property {string} search\n * @property {any} searchParams\n * @property {string} username\n * @property {() => string} toString\n * @property {() => string} toJSON\n */\n\n/**\n * Check if `fileUrlOrPath` looks like a URL.\n *\n * @param {unknown} fileUrlOrPath\n *   File path or URL.\n * @returns {fileUrlOrPath is URL}\n *   Whether it’s a URL.\n */\n// From: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js#L1501>\nexport function isUrl(fileUrlOrPath) {\n  return (\n    fileUrlOrPath !== null &&\n    typeof fileUrlOrPath === 'object' &&\n    // @ts-expect-error: indexable.\n    fileUrlOrPath.href &&\n    // @ts-expect-error: indexable.\n    fileUrlOrPath.origin\n  )\n}\n","/// <reference lib=\"dom\" />\n\nimport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js>\n\n/**\n * @param {string | URL} path\n *   File URL.\n * @returns {string}\n *   File URL.\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * Get a path from a POSIX URL.\n *\n * @param {URL} url\n *   URL.\n * @returns {string}\n *   File path.\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.charCodeAt(index) === 37 /* `%` */ &&\n      pathname.charCodeAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.charCodeAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n\nexport {isUrl} from './minurl.shared.js'\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {import('./minurl.shared.js').URL} URL\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n */\n\n/**\n * @typedef {Record<string, unknown> & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef {'ascii' | 'utf8' | 'utf-8' | 'utf16le' | 'ucs2' | 'ucs-2' | 'base64' | 'base64url' | 'latin1' | 'binary' | 'hex'} BufferEncoding\n *   Encodings supported by the buffer class.\n *\n *   This is a copy of the types from Node, copied to prevent Node globals from\n *   being needed.\n *   Copied from: <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/90a4ec8/types/node/buffer.d.ts#L170>\n *\n * @typedef {Options | URL | Value | VFile} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n *   Set multiple values.\n * @property {Value | null | undefined} [value]\n *   Set `value`.\n * @property {string | null | undefined} [cwd]\n *   Set `cwd`.\n * @property {Array<string> | null | undefined} [history]\n *   Set `history`.\n * @property {URL | string | null | undefined} [path]\n *   Set `path`.\n * @property {string | null | undefined} [basename]\n *   Set `basename`.\n * @property {string | null | undefined} [stem]\n *   Set `stem`.\n * @property {string | null | undefined} [extname]\n *   Set `extname`.\n * @property {string | null | undefined} [dirname]\n *   Set `dirname`.\n * @property {Data | null | undefined} [data]\n *   Set `data`.\n *\n * @typedef Map\n *   Raw source map.\n *\n *   See:\n *   <https://github.com/mozilla/source-map/blob/58819f0/source-map.d.ts#L15-L23>.\n * @property {number} version\n *   Which version of the source map spec this map is following.\n * @property {Array<string>} sources\n *   An array of URLs to the original source files.\n * @property {Array<string>} names\n *   An array of identifiers which can be referenced by individual mappings.\n * @property {string | undefined} [sourceRoot]\n *   The URL root from which all sources are relative.\n * @property {Array<string> | undefined} [sourcesContent]\n *   An array of contents of the original source files.\n * @property {string} mappings\n *   A string of base64 VLQs which contain the actual mappings.\n * @property {string} file\n *   The generated file this source map is associated with.\n *\n * @typedef {{[key: string]: unknown} & VFileCoreOptions} Options\n *   Configuration.\n *\n *   A bunch of keys that will be shallow copied over to the new file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n *   Configuration for reporters.\n */\n\n/**\n * @template {ReporterSettings} Settings\n *   Options type.\n * @callback Reporter\n *   Type for a reporter.\n * @param {Array<VFile>} files\n *   Files to report.\n * @param {Settings} options\n *   Configuration.\n * @returns {string}\n *   Report.\n */\n\nimport bufferLike from 'is-buffer'\nimport {VFileMessage} from 'vfile-message'\nimport {path} from './minpath.js'\nimport {proc} from './minproc.js'\nimport {urlToPath, isUrl} from './minurl.js'\n\n/**\n * Order of setting (least specific to most), we need this because otherwise\n * `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n * stem can be set.\n *\n * @type {Array<'basename' | 'dirname' | 'extname' | 'history' | 'path' | 'stem'>}\n */\nconst order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname']\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * `options` is treated as:\n   *\n   * *   `string` or `Buffer` — `{value: options}`\n   * *   `URL` — `{path: options}`\n   * *   `VFile` — shallow copies its data over to the new file\n   * *   `object` — all fields are shallow copied over to the new file\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * You cannot set `dirname` or `extname` without setting either `history`,\n   * `path`, `basename`, or `stem` too.\n   *\n   * @param {Compatible | null | undefined} [value]\n   *   File value.\n   * @returns\n   *   New instance.\n   */\n  constructor(value) {\n    /** @type {Options | VFile} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (typeof value === 'string' || buffer(value)) {\n      options = {value}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else {\n      options = value\n    }\n\n    /**\n     * Place to store custom information (default: `{}`).\n     *\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     *\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of messages associated with the file.\n     *\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * List of filepaths the file moved between.\n     *\n     * The first is the original path and the last is the current path.\n     *\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     *\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Raw value.\n     *\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n\n    /**\n     * Whether a file was saved to disk.\n     *\n     * This is used by vfile reporters.\n     *\n     * @type {boolean}\n     */\n    this.stored\n\n    /**\n     * Custom, non-string, compiled, representation.\n     *\n     * This is used by unified to store non-string results.\n     * One example is when turning markdown into React nodes.\n     *\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Source map.\n     *\n     * This type is equivalent to the `RawSourceMap` type from the `source-map`\n     * module.\n     *\n     * @type {Map | null | undefined}\n     */\n    this.map\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (\n        prop in options &&\n        options[prop] !== undefined &&\n        options[prop] !== null\n      ) {\n        // @ts-expect-error: TS doesn’t understand basic reality.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) {\n        // @ts-expect-error: fine to set other things.\n        this[prop] = options[prop]\n      }\n    }\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   *\n   * @returns {string}\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   *\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   *\n   * @param {string | URL} path\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   *\n   * Cannot be set if there’s no `path` yet.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.charCodeAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * @param {BufferEncoding | null | undefined} [encoding='utf8']\n   *   Character encoding to understand `value` as when it’s a `Buffer`\n   *   (default: `'utf8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    return (this.value || '').toString(encoding || undefined)\n  }\n\n  /**\n   * Create a warning message associated with the file.\n   *\n   * Its `fatal` is set to `false` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(reason, place, origin) {\n    const message = new VFileMessage(reason, place, origin)\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Create an info message associated with the file.\n   *\n   * Its `fatal` is set to `null` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = null\n\n    return message\n  }\n\n  /**\n   * Create a fatal error associated with the file.\n   *\n   * Its `fatal` is set to `true` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * > 👉 **Note**: a fatal error means that a file is no longer processable.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {never}\n   *   Message.\n   * @throws {VFileMessage}\n   *   Message.\n   */\n  fail(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string | null | undefined} part\n *   File path part.\n * @param {string} name\n *   Part name.\n * @returns {void}\n *   Nothing.\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string | undefined} part\n *   Thing.\n * @param {string} name\n *   Part name.\n * @returns {asserts part is string}\n *   Nothing.\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string | undefined} path\n *   Path.\n * @param {string} name\n *   Dependency name.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n\n/**\n * Assert `value` is a buffer.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Buffer}\n *   Whether `value` is a Node.js buffer.\n */\nfunction buffer(value) {\n  return bufferLike(value)\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('vfile').VFileCompatible} VFileCompatible\n * @typedef {import('vfile').VFileValue} VFileValue\n * @typedef {import('..').Processor} Processor\n * @typedef {import('..').Plugin} Plugin\n * @typedef {import('..').Preset} Preset\n * @typedef {import('..').Pluggable} Pluggable\n * @typedef {import('..').PluggableList} PluggableList\n * @typedef {import('..').Transformer} Transformer\n * @typedef {import('..').Parser} Parser\n * @typedef {import('..').Compiler} Compiler\n * @typedef {import('..').RunCallback} RunCallback\n * @typedef {import('..').ProcessCallback} ProcessCallback\n *\n * @typedef Context\n * @property {Node} tree\n * @property {VFile} file\n */\n\nimport {bail} from 'bail'\nimport isBuffer from 'is-buffer'\nimport extend from 'extend'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\n\n// Expose a frozen processor.\nexport const unified = base().freeze()\n\nconst own = {}.hasOwnProperty\n\n// Function to create the first processor.\n/**\n * @returns {Processor}\n */\nfunction base() {\n  const transformers = trough()\n  /** @type {Processor['attachers']} */\n  const attachers = []\n  /** @type {Record<string, unknown>} */\n  let namespace = {}\n  /** @type {boolean|undefined} */\n  let frozen\n  let freezeIndex = -1\n\n  // Data management.\n  // @ts-expect-error: overloads are handled.\n  processor.data = data\n  processor.Parser = undefined\n  processor.Compiler = undefined\n\n  // Lock.\n  processor.freeze = freeze\n\n  // Plugins.\n  processor.attachers = attachers\n  // @ts-expect-error: overloads are handled.\n  processor.use = use\n\n  // API.\n  processor.parse = parse\n  processor.stringify = stringify\n  // @ts-expect-error: overloads are handled.\n  processor.run = run\n  processor.runSync = runSync\n  // @ts-expect-error: overloads are handled.\n  processor.process = process\n  processor.processSync = processSync\n\n  // Expose.\n  return processor\n\n  // Create a new processor based on the processor in the current scope.\n  /** @type {Processor} */\n  function processor() {\n    const destination = base()\n    let index = -1\n\n    while (++index < attachers.length) {\n      destination.use(...attachers[index])\n    }\n\n    destination.data(extend(true, {}, namespace))\n\n    return destination\n  }\n\n  /**\n   * @param {string|Record<string, unknown>} [key]\n   * @param {unknown} [value]\n   * @returns {unknown}\n   */\n  function data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen)\n        namespace[key] = value\n        return processor\n      }\n\n      // Get `key`.\n      return (own.call(namespace, key) && namespace[key]) || null\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', frozen)\n      namespace = key\n      return processor\n    }\n\n    // Get space.\n    return namespace\n  }\n\n  /** @type {Processor['freeze']} */\n  function freeze() {\n    if (frozen) {\n      return processor\n    }\n\n    while (++freezeIndex < attachers.length) {\n      const [attacher, ...options] = attachers[freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      /** @type {Transformer|void} */\n      const transformer = attacher.call(processor, ...options)\n\n      if (typeof transformer === 'function') {\n        transformers.use(transformer)\n      }\n    }\n\n    frozen = true\n    freezeIndex = Number.POSITIVE_INFINITY\n\n    return processor\n  }\n\n  /**\n   * @param {Pluggable|null|undefined} [value]\n   * @param {...unknown} options\n   * @returns {Processor}\n   */\n  function use(value, ...options) {\n    /** @type {Record<string, unknown>|undefined} */\n    let settings\n\n    assertUnfrozen('use', frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, ...options)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    if (settings) {\n      namespace.settings = Object.assign(namespace.settings || {}, settings)\n    }\n\n    return processor\n\n    /**\n     * @param {import('..').Pluggable<unknown[]>} value\n     * @returns {void}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value)\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...options] = value\n          addPlugin(plugin, ...options)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {void}\n     */\n    function addPreset(result) {\n      addList(result.plugins)\n\n      if (result.settings) {\n        settings = Object.assign(settings || {}, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList|null|undefined} [plugins]\n     * @returns {void}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {...unknown} [value]\n     * @returns {void}\n     */\n    function addPlugin(plugin, value) {\n      let index = -1\n      /** @type {Processor['attachers'][number]|undefined} */\n      let entry\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entry = attachers[index]\n          break\n        }\n      }\n\n      if (entry) {\n        if (isPlainObj(entry[1]) && isPlainObj(value)) {\n          value = extend(true, entry[1], value)\n        }\n\n        entry[1] = value\n      } else {\n        // @ts-expect-error: fine.\n        attachers.push([...arguments])\n      }\n    }\n  }\n\n  /** @type {Processor['parse']} */\n  function parse(doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Parser = processor.Parser\n    assertParser('parse', Parser)\n\n    if (newable(Parser, 'parse')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Parser(String(file), file).parse()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Parser(String(file), file) // eslint-disable-line new-cap\n  }\n\n  /** @type {Processor['stringify']} */\n  function stringify(node, doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Compiler = processor.Compiler\n    assertCompiler('stringify', Compiler)\n    assertNode(node)\n\n    if (newable(Compiler, 'compile')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Compiler(node, file).compile()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Compiler(node, file) // eslint-disable-line new-cap\n  }\n\n  /**\n   * @param {Node} node\n   * @param {VFileCompatible|RunCallback} [doc]\n   * @param {RunCallback} [callback]\n   * @returns {Promise<Node>|void}\n   */\n  function run(node, doc, callback) {\n    assertNode(node)\n    processor.freeze()\n\n    if (!callback && typeof doc === 'function') {\n      callback = doc\n      doc = undefined\n    }\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((node: Node) => void)} resolve\n     * @param {(error: Error) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      // @ts-expect-error: `doc` can’t be a callback anymore, we checked.\n      transformers.run(node, vfile(doc), done)\n\n      /**\n       * @param {Error|null} error\n       * @param {Node} tree\n       * @param {VFile} file\n       * @returns {void}\n       */\n      function done(error, tree, file) {\n        tree = tree || node\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(tree)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, tree, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['runSync']} */\n  function runSync(node, file) {\n    /** @type {Node|undefined} */\n    let result\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.run(node, file, done)\n\n    assertDone('runSync', 'run', complete)\n\n    // @ts-expect-error: we either bailed on an error or have a tree.\n    return result\n\n    /**\n     * @param {Error|null} [error]\n     * @param {Node} [tree]\n     * @returns {void}\n     */\n    function done(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * @param {VFileCompatible} doc\n   * @param {ProcessCallback} [callback]\n   * @returns {Promise<VFile>|undefined}\n   */\n  function process(doc, callback) {\n    processor.freeze()\n    assertParser('process', processor.Parser)\n    assertCompiler('process', processor.Compiler)\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((file: VFile) => void)} resolve\n     * @param {(error?: Error|null|undefined) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      const file = vfile(doc)\n\n      processor.run(processor.parse(file), file, (error, tree, file) => {\n        if (error || !tree || !file) {\n          done(error)\n        } else {\n          /** @type {unknown} */\n          const result = processor.stringify(tree, file)\n\n          if (result === undefined || result === null) {\n            // Empty.\n          } else if (looksLikeAVFileValue(result)) {\n            file.value = result\n          } else {\n            file.result = result\n          }\n\n          done(error, file)\n        }\n      })\n\n      /**\n       * @param {Error|null|undefined} [error]\n       * @param {VFile|undefined} [file]\n       * @returns {void}\n       */\n      function done(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['processSync']} */\n  function processSync(doc) {\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.freeze()\n    assertParser('processSync', processor.Parser)\n    assertCompiler('processSync', processor.Compiler)\n\n    const file = vfile(doc)\n\n    processor.process(file, done)\n\n    assertDone('processSync', 'process', complete)\n\n    return file\n\n    /**\n     * @param {Error|null|undefined} [error]\n     * @returns {void}\n     */\n    function done(error) {\n      complete = true\n      bail(error)\n    }\n  }\n}\n\n/**\n * Check if `value` is a constructor.\n *\n * @param {unknown} value\n * @param {string} name\n * @returns {boolean}\n */\nfunction newable(value, name) {\n  return (\n    typeof value === 'function' &&\n    // Prototypes do exist.\n    // type-coverage:ignore-next-line\n    value.prototype &&\n    // A function with keys in its prototype is probably a constructor.\n    // Classes’ prototype methods are not enumerable, so we check if some value\n    // exists in the prototype.\n    // type-coverage:ignore-next-line\n    (keys(value.prototype) || name in value.prototype)\n  )\n}\n\n/**\n * Check if `value` is an object with keys.\n *\n * @param {Record<string, unknown>} value\n * @returns {boolean}\n */\nfunction keys(value) {\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is VFileValue}\n */\nfunction looksLikeAVFileValue(value) {\n  return typeof value === 'string' || isBuffer(value)\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s.\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML.\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} value\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Node}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {number} start\n * @param {number} remove\n * @param {T[]} items\n * @returns {void}\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {unknown[]} */\n\n  let parameters // Make start between zero and `end` (included).\n\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0 // No need to chunk the items if there’s only a couple (10k) items.\n\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove) // @ts-expect-error Hush, it’s fine.\n    ;[].splice.apply(list, parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) [].splice.apply(list, [start, remove]) // Insert the items in chunks to not cause stack overflows.\n\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0) // @ts-expect-error Hush, it’s fine.\n      ;[].splice.apply(list, parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {T[]} items\n * @returns {T[]}\n */\n\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine several syntax extensions into one.\n *\n * @param {Extension[]} extensions List of syntax extensions.\n * @returns {NormalizedExtension} A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all Extension to merge into.\n * @param {Extension} extension Extension to merge.\n * @returns {void}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    for (code in right) {\n      if (!hasOwnProperty.call(left, code)) left[code] = []\n      const value = right[code]\n      constructs(\n        // @ts-expect-error Looks like a list.\n        left[code],\n        Array.isArray(value) ? value : value ? [value] : []\n      )\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {unknown[]} existing\n * @param {unknown[]} list\n * @returns {void}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {unknown[]} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine several HTML extensions into one.\n *\n * @param {HtmlExtension[]} htmlExtensions List of HTML extensions.\n * @returns {HtmlExtension} A single combined extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all Extension to merge into.\n * @param {HtmlExtension} extension Extension to merge.\n * @returns {void}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\nexport const unicodePunctuationRegex =\n  /[!-/:-@[-`{-~\\u00A1\\u00A7\\u00AB\\u00B6\\u00B7\\u00BB\\u00BF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n */\n\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n */\n\nexport const asciiDigit = regexCheck(/\\d/)\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n */\n\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n */\n\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n */\n\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n */\n\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n\nexport const unicodeWhitespace = regexCheck(/\\s/)\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => code is number}\n */\n\nfunction regexCheck(regex) {\n  return check\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code Character code\n   * @returns {code is number} Whether the character code matches the bound regex\n   */\n\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownSpace} from 'micromark-util-character'\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {string} type\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n/** @type {Initializer} */\n\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n\n  let previous\n  return contentStart\n  /** @type {State} */\n\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n  /** @type {State} */\n\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n\n    if (previous) {\n      previous.next = token\n    }\n\n    previous = token\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Point} Point\n */\n\n/**\n * @typedef {Record<string, unknown>} StackState\n * @typedef {[Construct, StackState]} StackItem\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\n\nexport const document = {\n  tokenize: initializeDocument\n}\n/** @type {Construct} */\n\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n/** @type {Initializer} */\n\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {Array<StackItem>} */\n\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext|undefined} */\n\n  let childFlow\n  /** @type {Token|undefined} */\n\n  let childToken\n  /** @type {number} */\n\n  let lineStartOffset\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    } // Done.\n\n    return checkNewContainers(code)\n  }\n  /** @type {State} */\n\n  function documentContinue(code) {\n    continued++ // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n\n      if (childFlow) {\n        closeFlow()\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point|undefined} */\n\n      let point // Find the flow chunk.\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      let index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n\n    return start(code)\n  }\n  /** @type {State} */\n\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      } // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      } // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    } // Check if there is a new container.\n\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n  /** @type {State} */\n\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n  /** @type {State} */\n\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n  /** @type {State} */\n\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState]) // Try another.\n\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n  /** @type {State} */\n\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow')) // Get ready for the next line.\n\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n\n    effects.consume(code)\n    return flowContinue\n  }\n  /**\n   * @param {Token} token\n   * @param {boolean} [eof]\n   * @returns {void}\n   */\n\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream) // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset && // …and either is not ended yet…\n          (!childFlow.events[index][1].end || // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean|undefined} */\n\n      let seen\n      /** @type {Point|undefined} */\n\n      let point // Find the previous chunk (the one before the lazy line).\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n\n          seen = true\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n    }\n  }\n  /**\n   * @param {number} size\n   * @returns {void}\n   */\n\n  function exitContainers(size) {\n    let index = stack.length // Exit open containers.\n\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n\n    stack.length = size\n  }\n\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContainer(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return factorySpace(effects, afterWhitespace, 'linePrefix')\n  /** @type {State} */\n\n  function afterWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {splice} from 'micromark-util-chunked'\n\n/**\n * Tokenize subcontent.\n *\n * @param {Event[]} events\n * @returns {boolean}\n */\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n\n  let event\n  /** @type {number|undefined} */\n\n  let lineIndex\n  /** @type {number} */\n\n  let otherIndex\n  /** @type {Event} */\n\n  let otherEvent\n  /** @type {Event[]} */\n\n  let parameters\n  /** @type {Event[]} */\n\n  let subevents\n  /** @type {boolean|undefined} */\n\n  let more\n\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n\n    event = events[index] // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    } // Enter.\n\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    } // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start) // Switch container exit w/ line endings.\n\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n\n  return !more\n}\n/**\n * Tokenize embedded tokens.\n *\n * @param {Event[]} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\n\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {number[]} */\n\n  const startPositions = []\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {[number, number][]} */\n\n  const jumps = []\n  /** @type {Record<string, number>} */\n\n  const gaps = {}\n  /** @type {Chunk[]} */\n\n  let stream\n  /** @type {Token|undefined} */\n\n  let previous\n  let index = -1\n  /** @type {Token|undefined} */\n\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start] // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n\n    startPositions.push(startPosition)\n\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n\n      if (!current.next) {\n        stream.push(null)\n      }\n\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n\n      tokenizer.write(stream)\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    } // Unravel the next token.\n\n    previous = current\n    current = current.next\n  } // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n\n  current = token\n\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      start = index + 1\n      breaks.push(start) // Help GC.\n\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  } // Help GC.\n\n  tokenizer.events = [] // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n  } else {\n    breaks.pop()\n  } // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n\n  index = breaks.length\n\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n\n  index = -1\n\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n\n  return gaps\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n}\n/** @type {Construct} */\n\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n}\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\n\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token} */\n  let previous\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n  /** @type {State} */\n\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous\n    })\n    previous = previous.next\n    return data\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n  return startLookahead\n  /** @type {State} */\n\n  function startLookahead(code) {\n    effects.exit('chunkContent')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    const tail = self.events[self.events.length - 1]\n\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n    ) {\n      return ok(code)\n    }\n\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n/** @type {Initializer} */\n\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding, // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n  /** @type {State} */\n\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n  /** @type {State} */\n\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n/**\n * @param {'string'|'text'} field\n * @returns {InitialConstruct}\n */\n\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n  /** @type {Initializer} */\n\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n    /** @type {State} */\n\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n    /** @type {State} */\n\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      } // Data.\n\n      effects.consume(code)\n      return data\n    }\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n\n      const list = constructs[code]\n      let index = -1\n\n      if (list) {\n        while (++index < list.length) {\n          const item = list[index]\n\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n\n      return false\n    }\n  }\n}\n/**\n * @param {Resolver} [extraResolver]\n * @returns {Resolver}\n */\n\nfunction createResolver(extraResolver) {\n  return resolveAllText\n  /** @type {Resolver} */\n\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number|undefined} */\n\n    let enter // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n\n        enter = undefined\n      }\n    }\n\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\n\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean|undefined} */\n\n      let tabs\n\n      while (index--) {\n        const chunk = chunks[index]\n\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n\n          if (bufferIndex) break\n          bufferIndex = -1\n        } // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n\n      eventIndex++\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {{resolveAll?: Resolver}[]} constructs\n * @param {Event[]} events\n * @param {TokenizeContext} context\n * @returns {Event[]}\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Resolver[]} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n */\n\n/**\n * @typedef Info\n * @property {() => void} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {void}\n */\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_index'|'_bufferIndex'>} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n\n  const columnStart = {}\n  /** @type {Array<Construct>} */\n\n  const resolveAllConstructs = []\n  /** @type {Array<Chunk>} */\n\n  let chunks = []\n  /** @type {Array<Token>} */\n\n  let stack = []\n  /** @type {boolean|undefined} */\n\n  let consumed = true\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n  /**\n   * The state function.\n   *\n   * @type {State|void}\n   */\n\n  let state = initialize.tokenize.call(context, effects)\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n\n  let expectedCode\n\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n\n  return context\n  /** @type {TokenizeContext['write']} */\n\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main() // Exit if we’re not done, resolve might change stuff.\n\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n\n    addResult(initialize, 0) // Otherwise, resolve, and exit.\n\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  } //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n  /** @type {TokenizeContext['sliceStream']} */\n\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n  /** @type {TokenizeContext['now']} */\n\n  function now() {\n    return Object.assign({}, point)\n  }\n  /** @type {TokenizeContext['defineSkip']} */\n\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  } //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {void}\n   */\n\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index] // If we’re in a buffer chunk, loop through it.\n\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {void}\n   */\n\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n  /** @type {Effects['consume']} */\n\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    } // Not in a string chunk.\n\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++ // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    } // Expose the previous character.\n\n    context.previous = code // Mark as consumed.\n\n    consumed = true\n  }\n  /** @type {Effects['enter']} */\n\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n  /** @type {Effects['exit']} */\n\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {Record<string, unknown>} [fields]\n   */\n\n  function constructFactory(onreturn, fields) {\n    return hook\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Construct|Array<Construct>|ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State} [bogusState]\n     * @returns {State}\n     */\n\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Array<Construct>} */\n      let listOfConstructs\n      /** @type {number} */\n\n      let constructIndex\n      /** @type {Construct} */\n\n      let currentConstruct\n      /** @type {Info} */\n\n      let info\n      return Array.isArray(constructs)\n        ? /* c8 ignore next 1 */\n          handleListOfConstructs(constructs)\n        : 'tokenize' in constructs // @ts-expect-error Looks like a construct.\n        ? handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n\n      function handleMapOfConstructs(map) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Array<Construct>} list\n       * @returns {State}\n       */\n\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n\n        if (list.length === 0) {\n          return bogusState\n        }\n\n        return handleConstruct(list[constructIndex])\n      }\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n\n      function handleConstruct(construct) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n      /** @type {State} */\n\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n      /** @type {State} */\n\n      function nok(code) {\n        consumed = true\n        info.restore()\n\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n\n        return bogusState\n      }\n    }\n  }\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {void}\n   */\n\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n    /**\n     * Restore state.\n     *\n     * @returns {void}\n     */\n\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {void}\n   */\n\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Array<Chunk>} chunks\n * @param {Pick<Token, 'start'|'end'>} token\n * @returns {Array<Chunk>}\n */\n\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Array<Chunk>} */\n\n  let view\n\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n\n    if (startBufferIndex > -1) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view[0] = view[0].slice(startBufferIndex)\n    }\n\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n\n  return view\n}\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Array<Chunk>} chunks\n * @param {boolean} [expandTabs=false]\n * @returns {string}\n */\n\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {Array<string>} */\n\n  const result = []\n  /** @type {boolean|undefined} */\n\n  let atTab\n\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n\n    let value\n\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n\n        case -4: {\n          value = '\\n'\n          break\n        }\n\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n\n    atTab = chunk === -2\n    result.push(value)\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('thematicBreak')\n    marker = code\n    return atBreak(code)\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    if (size < 3 || (code !== null && !markdownLineEnding(code))) {\n      return nok(code)\n    }\n\n    effects.exit('thematicBreak')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n\n    effects.exit('thematicBreakSequence')\n    return atBreak(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @typedef {Record<string, unknown> & {marker: Code, type: string, size: number}} ListContainerState\n * @typedef {TokenizeContext & {containerState: ListContainerState}} TokenizeContextWithState\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n/** @type {Construct} */\n\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\n/** @type {Construct} */\n\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n/** @type {Construct} */\n\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    const kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n\n    return nok(code)\n  }\n  /**\n   * @type {State}\n   **/\n\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine, // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n  /** @type {State} */\n\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit('listItemPrefix'), true).length\n    return ok(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(blankLine, onBlank, notBlank)\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine // We have a blank line.\n    // Still, try to consume at most the items size.\n\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n  /** @type {State} */\n\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n  /** @type {State} */\n\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true // As we’re closing flow, we’re no longer interrupting.\n\n    self.interrupt = undefined\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'listItemIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n/**\n * @type {Exiter}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : 4 + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === 'listItemPrefixWhitespace'\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState\n\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        state.open = true\n      }\n\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(blockQuote, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n/** @type {Exiter} */\n\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} literalType\n * @param {string} literalMarkerType\n * @param {string} rawType\n * @param {string} stringType\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return destinationEnclosedBefore\n    }\n\n    if (code === null || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationRaw(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return destinationEnclosedBefore(code)\n    }\n\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? destinationEnclosedEscape : destinationEnclosed\n  }\n  /** @type {State} */\n\n  function destinationEnclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return destinationEnclosed\n    }\n\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationRaw(code) {\n    if (code === 40) {\n      if (++balance > limit) return nok(code)\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === 41) {\n      if (!balance--) {\n        effects.exit('chunkString')\n        effects.exit(stringType)\n        effects.exit(rawType)\n        effects.exit(type)\n        return ok(code)\n      }\n\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      if (balance) return nok(code)\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n\n    if (asciiControl(code)) return nok(code)\n    effects.consume(code)\n    return code === 92 ? destinationRawEscape : destinationRaw\n  }\n  /** @type {State} */\n\n  function destinationRawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    return destinationRaw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @this {TokenizeContext}\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      (code === 93 && !data) ||\n      /* To do: remove in the future once we’ve switched from\n       * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n       * which doesn’t need this */\n\n      /* Hidden footnotes hook */\n\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs) ||\n      size > 999\n    ) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return label(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    data = data || !markdownSpace(code)\n    return code === 92 ? labelEscape : label\n  }\n  /** @type {State} */\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    marker = code === 40 ? 41 : code\n    return atFirstTitleBreak\n  }\n  /** @type {State} */\n\n  function atFirstTitleBreak(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    return atTitleBreak(code)\n  }\n  /** @type {State} */\n\n  function atTitleBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return atFirstTitleBreak(marker)\n    }\n\n    if (code === null) {\n      return nok(code)\n    } // Note: blank lines can’t exist in content.\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atTitleBreak, 'linePrefix')\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return title(code)\n  }\n  /** @type {State} */\n\n  function title(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atTitleBreak(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? titleEscape : title\n  }\n  /** @type {State} */\n\n  function titleEscape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return title\n    }\n\n    return title(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n\n    return ok(code)\n  }\n}\n","/**\n * Normalize an identifier (such as used in definitions).\n *\n * @param {string} value\n * @returns {string}\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value // Collapse Markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ') // Trim.\n      .replace(/^ | $/g, '') // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\n/** @type {Construct} */\n\nconst titleConstruct = {\n  tokenize: tokenizeTitle,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n\n  let identifier\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('definition')\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Note: blank lines can’t exist in content.\n\n      return factoryWhitespace(\n        effects,\n        factoryDestination(\n          effects,\n          effects.attempt(\n            titleConstruct,\n            factorySpace(effects, after, 'whitespace'),\n            factorySpace(effects, after, 'whitespace')\n          ),\n          nok,\n          'definitionDestination',\n          'definitionDestinationLiteral',\n          'definitionDestinationLiteralMarker',\n          'definitionDestinationRaw',\n          'definitionDestinationString'\n        )\n      )\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      if (!self.parser.defined.includes(identifier)) {\n        self.parser.defined.push(identifier)\n      }\n\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTitle(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, before)(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function before(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factorySpace(effects, after, 'whitespace'),\n        nok,\n        'definitionTitle',\n        'definitionTitleMarker',\n        'definitionTitleString'\n      )(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n/** @type {Construct} */\n\nconst indentedContent = {\n  tokenize: tokenizeIndentedContent,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeIndented')\n    return factorySpace(effects, afterStartPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterStartPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? afterPrefix(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(indentedContent, afterPrefix, after)(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return content(code)\n  }\n  /** @type {State} */\n\n  function content(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return afterPrefix(code)\n    }\n\n    effects.consume(code)\n    return content\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeIndented')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeIndentedContent(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return start\n    }\n\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? start(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n/** @type {Resolver} */\n\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n\n  let content\n  /** @type {Token} */\n\n  let text // Prefix whitespace, part of the opening.\n\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  } // Suffix whitespace, part of the closing.\n\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      // @ts-expect-error Constants are fine to assign.\n      contentType: 'text'\n    }\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  const self = this\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('atxHeading')\n    effects.enter('atxHeadingSequence')\n    return fenceOpenInside(code)\n  }\n  /** @type {State} */\n\n  function fenceOpenInside(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return fenceOpenInside\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return self.interrupt ? ok(code) : headingBreak(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function headingBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequence(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      return ok(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headingBreak, 'whitespace')(code)\n    }\n\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequence\n    }\n\n    effects.exit('atxHeadingSequence')\n    return headingBreak(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return headingBreak(code)\n    }\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n/** @type {Resolver} */\n\nfunction resolveToSetextUnderline(events, context) {\n  let index = events.length\n  /** @type {number|undefined} */\n\n  let content\n  /** @type {number|undefined} */\n\n  let text\n  /** @type {number|undefined} */\n\n  let definition // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    } // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n\n  const heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  } // Change the paragraph to setext heading text.\n\n  events[text][1].type = 'setextHeadingText' // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  } // Add the heading exit at the end.\n\n  events.push(['exit', heading, context])\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  /** @type {boolean} */\n\n  let paragraph // Find an opening.\n\n  while (index--) {\n    // Skip enter/exit of line ending, line prefix, and content.\n    // We can now either have a definition or a paragraph.\n    if (\n      self.events[index][1].type !== 'lineEnding' &&\n      self.events[index][1].type !== 'linePrefix' &&\n      self.events[index][1].type !== 'content'\n    ) {\n      paragraph = self.events[index][1].type === 'paragraph'\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      effects.enter('setextHeadingLineSequence')\n      marker = code\n      return closingSequence(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function closingSequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return closingSequence\n    }\n\n    effects.exit('setextHeadingLineSequence')\n    return factorySpace(effects, closingSequenceEnd, 'lineSuffix')(code)\n  }\n  /** @type {State} */\n\n  function closingSequenceEnd(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result\n * in more relaxed rules (condition 6): because they are known blocks, the\n * HTML-like syntax doesn’t have to be strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result in\n * HTML that can include lines w/o exiting, until a closing tag also in this\n * list is found (condition 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * Note that `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n/** @type {Construct} */\n\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n/** @type {Construct} */\n\nconst nextBlankConstruct = {\n  tokenize: tokenizeNextBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start // Add the prefix start to the HTML line token.\n\n    events[index + 1][1].start = events[index - 2][1].start // Remove the line prefix.\n\n    events.splice(index - 2, 2)\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n\n  let kind\n  /** @type {boolean} */\n\n  let startTag\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {Code} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationStart\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      kind = 3 // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      startTag = true\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationStart(code) {\n    if (code === 45) {\n      effects.consume(code)\n      kind = 2\n      return commentOpenInside\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      kind = 5\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpenInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      kind = 4\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdataOpenInside(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length\n        ? self.interrupt\n          ? ok\n          : continuation\n        : cdataOpenInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      if (\n        code !== 47 &&\n        startTag &&\n        htmlRawNames.includes(buffer.toLowerCase())\n      ) {\n        kind = 1\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        kind = 6\n\n        if (code === 47) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      kind = 7 // Do not support complete HTML when interrupting\n\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : startTag\n        ? completeAttributeNameBefore(code)\n        : completeClosingTagAfter(code)\n    }\n\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuation\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    return completeAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n\n    return completeAttributeNameBefore(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return completeAttributeValueQuoted\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    marker = null\n    return completeAttributeValueUnquoted(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuoted(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    if (code === marker) {\n      effects.consume(code)\n      return completeAttributeValueQuotedAfter\n    }\n\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return code === null || markdownLineEnding(code)\n      ? continuation(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function continuation(code) {\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n\n    if (code === 60 && kind === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n\n    if (code === 62 && kind === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (code === 63 && kind === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    if (code === 93 && kind === 5) {\n      effects.consume(code)\n      return continuationCharacterDataInside\n    }\n\n    if (markdownLineEnding(code) && (kind === 6 || kind === 7)) {\n      return effects.check(\n        nextBlankConstruct,\n        continuationClose,\n        continuationAtLineEnding\n      )(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return continuationAtLineEnding(code)\n    }\n\n    effects.consume(code)\n    return continuation\n  }\n  /** @type {State} */\n\n  function continuationAtLineEnding(code) {\n    effects.exit('htmlFlowData')\n    return htmlContinueStart(code)\n  }\n  /** @type {State} */\n\n  function htmlContinueStart(code) {\n    if (code === null) {\n      return done(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        {\n          tokenize: htmlLineEnd,\n          partial: true\n        },\n        htmlContinueStart,\n        done\n      )(code)\n    }\n\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n  /** @type {Tokenizer} */\n\n  function htmlLineEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {State} */\n\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawEndTag(code) {\n    if (code === 62 && htmlRawNames.includes(buffer.toLowerCase())) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationCharacterDataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    } // More dashes.\n\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return done(code)\n    }\n\n    effects.consume(code)\n    return continuationClose\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('htmlFlow')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextBlank(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.exit('htmlFlowData')\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n\n  const closingFenceConstruct = {\n    tokenize: tokenizeClosingFence,\n    partial: true\n  }\n  /** @type {Construct} */\n\n  const nonLazyLine = {\n    tokenize: tokenizeNonLazyLine,\n    partial: true\n  }\n  const tail = this.events[this.events.length - 1]\n  const initialPrefix =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    marker = code\n    return sequenceOpen(code)\n  }\n  /** @type {State} */\n\n  function sequenceOpen(code) {\n    if (code === marker) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n\n    effects.exit('codeFencedFenceSequence')\n    return sizeOpen < 3\n      ? nok(code)\n      : factorySpace(effects, infoOpen, 'whitespace')(code)\n  }\n  /** @type {State} */\n\n  function infoOpen(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n  /** @type {State} */\n\n  function info(code) {\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, infoAfter, 'whitespace')(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return info\n  }\n  /** @type {State} */\n\n  function infoAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n  /** @type {State} */\n\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return openAfter(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return meta\n  }\n  /** @type {State} */\n\n  function openAfter(code) {\n    effects.exit('codeFencedFence')\n    return self.interrupt ? ok(code) : contentStart(code)\n  }\n  /** @type {State} */\n\n  function contentStart(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        nonLazyLine,\n        effects.attempt(\n          closingFenceConstruct,\n          after,\n          initialPrefix\n            ? factorySpace(\n                effects,\n                contentStart,\n                'linePrefix',\n                initialPrefix + 1\n              )\n            : contentStart\n        ),\n        after\n      )(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return contentContinue(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return contentStart(code)\n    }\n\n    effects.consume(code)\n    return contentContinue\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeNonLazyLine(effects, ok, nok) {\n    const self = this\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeClosingFence(effects, ok, nok) {\n    let size = 0\n    return factorySpace(\n      effects,\n      closingSequenceStart,\n      'linePrefix',\n      this.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n    /** @type {State} */\n\n    function closingSequenceStart(code) {\n      effects.enter('codeFencedFence')\n      effects.enter('codeFencedFenceSequence')\n      return closingSequence(code)\n    }\n    /** @type {State} */\n\n    function closingSequence(code) {\n      if (code === marker) {\n        effects.consume(code)\n        size++\n        return closingSequence\n      }\n\n      if (size < sizeOpen) return nok(code)\n      effects.exit('codeFencedFenceSequence')\n      return factorySpace(effects, closingSequenceEnd, 'whitespace')(code)\n    }\n    /** @type {State} */\n\n    function closingSequenceEnd(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n\n      return nok(code)\n    }\n  }\n}\n","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n\n  let max\n  /** @type {(code: Code) => code is number} */\n\n  let test\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n  /** @type {State} */\n\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n  /** @type {State} */\n\n  function value(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === 59 && size) {\n      token = effects.exit('characterReferenceValue')\n\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {asciiPunctuation} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n/** @type {Construct} */\n\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\n\nconst fullReferenceConstruct = {\n  tokenize: tokenizeFullReference\n}\n/** @type {Construct} */\n\nconst collapsedReferenceConstruct = {\n  tokenize: tokenizeCollapsedReference\n}\n/** @type {Resolver} */\n\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  /** @type {Token} */\n\n  let token\n\n  while (++index < events.length) {\n    token = events[index][1]\n\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n\n  return events\n}\n/** @type {Resolver} */\n\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n\n  let token\n  /** @type {number|undefined} */\n\n  let open\n  /** @type {number|undefined} */\n\n  let close\n  /** @type {Event[]} */\n\n  let media // Find an opening.\n\n  while (index--) {\n    token = events[index][1]\n\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      } // Mark other link openings as inactive, as we can’t have links in\n      // links.\n\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ] // Opening marker.\n\n  media = push(media, events.slice(open + 1, open + offset + 3)) // Text open.\n\n  media = push(media, [['enter', text, context]]) // Between.\n\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  ) // Text close, marker close, label close.\n\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ]) // Reference, resource, or so.\n\n  media = push(media, events.slice(close + 1)) // Media close.\n\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n\n  let labelStart\n  /** @type {boolean} */\n\n  let defined // Find an opening.\n\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!labelStart) {\n      return nok(code)\n    } // It’s a balanced bracket, but contains a link.\n\n    if (labelStart._inactive) return balanced(code)\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return afterLabelEnd\n  }\n  /** @type {State} */\n\n  function afterLabelEnd(code) {\n    // Resource: `[asd](fgh)`.\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        ok,\n        defined ? ok : balanced\n      )(code)\n    } // Collapsed (`[asd][]`) or full (`[asd][fgh]`) reference?\n\n    if (code === 91) {\n      return effects.attempt(\n        fullReferenceConstruct,\n        ok,\n        defined\n          ? effects.attempt(collapsedReferenceConstruct, ok, balanced)\n          : balanced\n      )(code)\n    } // Shortcut reference: `[asd]`?\n\n    return defined ? ok(code) : balanced(code)\n  }\n  /** @type {State} */\n\n  function balanced(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeResource(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return factoryWhitespace(effects, open)\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 41) {\n      return end(code)\n    }\n\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      nok,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      32\n    )(code)\n  }\n  /** @type {State} */\n\n  function destinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, between)(code)\n      : end(code)\n  }\n  /** @type {State} */\n\n  function between(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factoryWhitespace(effects, end),\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeFullReference(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      afterLabel,\n      nok,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function afterLabel(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCollapsedReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n\n/**\n * Classify whether a character code represents whitespace, punctuation, or\n * something else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * Note that eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n * @returns {number|undefined}\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Point} Point\n */\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n\n  let open\n  /** @type {Token} */\n\n  let group\n  /** @type {Token} */\n\n  let text\n  /** @type {Token} */\n\n  let openingSequence\n  /** @type {Token} */\n\n  let closingSequence\n  /** @type {number} */\n\n  let use\n  /** @type {Event[]} */\n\n  let nextEvents\n  /** @type {number} */\n\n  let offset // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index // Now walk back to find an opener.\n\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open && // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          } // Number of markers to use from the sequence.\n\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n          nextEvents = [] // If there are more markers in the opening, add them before.\n\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          } // Opening.\n\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ]) // Between.\n\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          ) // Closing.\n\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ]) // If there are more markers in the closing, add them after.\n\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n\n          splice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  } // Remove remaining sequences.\n\n  index = -1\n\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('attentionSequence')\n    marker = code\n    return sequence(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return sequence\n    }\n\n    const token = effects.exit('attentionSequence')\n    const after = classifyCharacter(code)\n    const open =\n      !after || (after === 2 && before) || attentionMarkers.includes(code)\n    const close =\n      !before || (before === 2 && after) || attentionMarkers.includes(previous)\n    token._open = Boolean(marker === 42 ? open : open && (before || !close))\n    token._close = Boolean(marker === 42 ? close : close && (after || !open))\n    return ok(code)\n  }\n}\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {void}\n */\n\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 1\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n\n    return asciiAtext(code) ? emailAtext(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function schemeOrEmailAtext(code) {\n    return code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)\n      ? schemeInsideOrEmailAtext(code)\n      : emailAtext(code)\n  }\n  /** @type {State} */\n\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return urlInside\n    }\n\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n\n    return emailAtext(code)\n  }\n  /** @type {State} */\n\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      return end(code)\n    }\n\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return urlInside\n  }\n  /** @type {State} */\n\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (code === 62) {\n      // Exit, then change the type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      return end(code)\n    }\n\n    return emailValue(code)\n  }\n  /** @type {State} */\n\n  function emailValue(code) {\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      effects.consume(code)\n      return code === 45 ? emailValue : emailLabel\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.exit('autolink')\n    return ok\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>|undefined} */\n\n  let marker\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {State} */\n\n  let returnState\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpen\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpen\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentStart\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentStart(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentStartDash\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function commentStartDash(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return comment\n  }\n  /** @type {State} */\n\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return end\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function cdataOpen(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length ? cdata : cdataOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return cdata\n  }\n  /** @type {State} */\n\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return declaration\n  }\n  /** @type {State} */\n\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return instruction\n  }\n  /** @type {State} */\n\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagClose(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return tagCloseBetween(code)\n  }\n  /** @type {State} */\n\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpen(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    return tagOpenAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n\n    return tagOpenBetween(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    effects.consume(code)\n    marker = undefined\n    return tagOpenAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return tagOpenAttributeValueQuotedAfter\n    }\n\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 62 || code === 47 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  } // We can’t have blank lines in content, so no need to worry about empty\n  // tokens.\n\n  /** @type {State} */\n\n  function atLineEnding(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(\n      effects,\n      afterPrefix,\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook. */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('escapeMarker')\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n}\n/** @type {Resolver} */\n\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n\n  let index\n  /** @type {number|undefined} */\n\n  let enter // If we start and end with an EOL or a space.\n\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex // And we have data.\n\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding'\n        events[tailExitIndex][1].type = 'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  } // Merge adjacent spaces and data.\n\n  index = headEnterIndex - 1\n  tailExitIndex++\n\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n\n      enter = undefined\n    }\n  }\n\n  return events\n}\n/** @type {Previous} */\n\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n\n  let size\n  /** @type {Token} */\n\n  let token\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return openingSequence(code)\n  }\n  /** @type {State} */\n\n  function openingSequence(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return openingSequence\n    }\n\n    effects.exit('codeTextSequence')\n    return gap(code)\n  }\n  /** @type {State} */\n\n  function gap(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    } // Closing fence?\n    // Could also be data.\n\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return closingSequence(code)\n    } // Tabs don’t work, and virtual spaces don’t make sense.\n\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return gap\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return gap\n    } // Data.\n\n    effects.enter('codeTextData')\n    return data(code)\n  } // In code.\n\n  /** @type {State} */\n\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return gap(code)\n    }\n\n    effects.consume(code)\n    return data\n  } // Closing fence.\n\n  /** @type {State} */\n\n  function closingSequence(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return closingSequence\n    } // Done!\n\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    } // More or less accents: mark as data.\n\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n/** @type {Extension['document']} */\n\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n/** @type {Extension['contentInitial']} */\n\nexport const contentInitial = {\n  [91]: definition\n}\n/** @type {Extension['flowInitial']} */\n\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n/** @type {Extension['flow']} */\n\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n/** @type {Extension['string']} */\n\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n/** @type {Extension['text']} */\n\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n/** @type {Extension['insideSpan']} */\n\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n/** @type {Extension['attentionMarkers']} */\n\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n/** @type {Extension['disable']} */\n\nexport const disable = {\n  null: []\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding} [encoding]\n * @param {boolean} [end=false]\n * @returns {Array<Chunk>}\n */\nconst search = /[\\0\\t\\n\\r]/g\n/**\n * @returns {Preprocessor}\n */\n\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean|undefined} */\n\n  let start = true\n  /** @type {boolean|undefined} */\n\n  let atCarriageReturn\n  return preprocessor\n  /** @type {Preprocessor} */\n\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = []\n    /** @type {RegExpMatchArray|null} */\n\n    let match\n    /** @type {number} */\n\n    let next\n    /** @type {number} */\n\n    let startPosition\n    /** @type {number} */\n\n    let endPosition\n    /** @type {Code} */\n\n    let code // @ts-expect-error `Buffer` does allow an encoding.\n\n    value = buffer + value.toString(encoding)\n    startPosition = 0\n    buffer = ''\n\n    if (start) {\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n\n      start = undefined\n    }\n\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n\n            while (column++ < next) chunks.push(-1)\n\n            break\n          }\n\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n\n      startPosition = endPosition + 1\n    }\n\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n\n    return chunks\n  }\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base)\n\n  if (\n    // C0 except for HT, LF, FF, CR, space\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) || // Control character (DEL) of the basic block and C1 controls.\n    (code > 126 && code < 160) || // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) || // Noncharacters.\n    (code > 64975 && code < 65008) ||\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 || // Out of range\n    code > 1114111\n  ) {\n    return '\\uFFFD'\n  }\n\n  return String.fromCharCode(code)\n}\n","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n/**\n * Utility to decode markdown strings (which occur in places such as fenced\n * code info strings, destinations, labels, and titles).\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\n\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  } // Reference.\n\n  const head = $2.charCodeAt(0)\n\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Position | PositionLike | Point | PointLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n *\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist').Point} Point\n *\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').StaticPhrasingContent} StaticPhrasingContent\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('mdast').ReferenceType} ReferenceType\n * @typedef {import('../index.js').CompileData} CompileData\n */\n\n/**\n * @typedef {Root | Content} Node\n * @typedef {Extract<Node, UnistParent>} Parent\n *\n * @typedef {Omit<UnistParent, 'type' | 'children'> & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @callback Transform\n *   Extra transform, to change the AST afterwards.\n * @param {Root} tree\n *   Tree to transform.\n * @returns {Root | undefined | null | void}\n *   New tree or nothing (in which case the current tree is used).\n *\n * @callback Handle\n *   Handle a token.\n * @param {CompileContext} this\n *   Context.\n * @param {Token} token\n *   Current token.\n * @returns {void}\n *   Nothing.\n *\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n *\n * @callback OnEnterError\n *   Handle the case where the `right` token is open, but it is closed (by the\n *   `left` token) or because we reached the end of the document.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token | undefined} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {void}\n *   Nothing.\n *\n * @callback OnExitError\n *   Handle the case where the `right` token is open but it is closed by\n *   exiting the `left` token.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {void}\n *   Nothing.\n *\n * @typedef {[Token, OnEnterError | undefined]} TokenTuple\n *   Open token on the stack, with an optional error handler for when\n *   that token isn’t closed properly.\n */\n\n/**\n * @typedef Config\n *   Configuration.\n *\n *   We have our defaults, but extensions will add more.\n * @property {Array<string>} canContainEols\n *   Token types where line endings are used.\n * @property {Handles} enter\n *   Opening handles.\n * @property {Handles} exit\n *   Closing handles.\n * @property {Array<Transform>} transforms\n *   Tree transforms.\n *\n * @typedef {Partial<Config>} Extension\n *   Change how markdown tokens from micromark are turned into mdast.\n *\n * @typedef CompileContext\n *   mdast compiler context.\n * @property {Array<Node | Fragment>} stack\n *   Stack of nodes.\n * @property {Array<TokenTuple>} tokenStack\n *   Stack of tokens.\n * @property {<Key extends keyof CompileData>(key: Key) => CompileData[Key]} getData\n *   Get data from the key/value store.\n * @property {<Key extends keyof CompileData>(key: Key, value?: CompileData[Key]) => void} setData\n *   Set data into the key/value store.\n * @property {(this: CompileContext) => void} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {<Kind extends Node>(this: CompileContext, node: Kind, token: Token, onError?: OnEnterError) => Kind} enter\n *   Enter a token.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => Node} exit\n *   Exit a token.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {Config} config\n *   Configuration.\n *\n * @typedef FromMarkdownOptions\n *   Configuration for how to build mdast.\n * @property {Array<Extension | Array<Extension>> | null | undefined} [mdastExtensions]\n *   Extensions for this utility to change how tokens are turned into a tree.\n *\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n *   Configuration.\n */\n\n// To do: micromark: create a registry of tokens?\n// To do: next major: don’t return given `Node` from `enter`.\n// To do: next major: remove setter/getter.\n\nimport {toString} from 'mdast-util-to-string'\nimport {parse} from 'micromark/lib/parse.js'\nimport {preprocess} from 'micromark/lib/preprocess.js'\nimport {postprocess} from 'micromark/lib/postprocess.js'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nconst own = {}.hasOwnProperty\n\n/**\n * @param value\n *   Markdown to parse.\n * @param encoding\n *   Character encoding for when `value` is `Buffer`.\n * @param options\n *   Configuration.\n * @returns\n *   mdast tree.\n */\nexport const fromMarkdown =\n  /**\n   * @type {(\n   *   ((value: Value, encoding: Encoding, options?: Options | null | undefined) => Root) &\n   *   ((value: Value, options?: Options | null | undefined) => Root)\n   * )}\n   */\n\n  /**\n   * @param {Value} value\n   * @param {Encoding | Options | null | undefined} [encoding]\n   * @param {Options | null | undefined} [options]\n   * @returns {Root}\n   */\n  function (value, encoding, options) {\n    if (typeof encoding !== 'string') {\n      options = encoding\n      encoding = undefined\n    }\n    return compiler(options)(\n      postprocess(\n        // @ts-expect-error: micromark types need to accept `null`.\n        parse(options).document().write(preprocess()(value, encoding, true))\n      )\n    )\n  }\n\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options | null | undefined} [options]\n */\nfunction compiler(options) {\n  /** @type {Config} */\n  const config = {\n    transforms: [],\n    canContainEols: ['emphasis', 'fragment', 'heading', 'paragraph', 'strong'],\n    enter: {\n      autolink: opener(link),\n      autolinkProtocol: onenterdata,\n      autolinkEmail: onenterdata,\n      atxHeading: opener(heading),\n      blockQuote: opener(blockQuote),\n      characterEscape: onenterdata,\n      characterReference: onenterdata,\n      codeFenced: opener(codeFlow),\n      codeFencedFenceInfo: buffer,\n      codeFencedFenceMeta: buffer,\n      codeIndented: opener(codeFlow, buffer),\n      codeText: opener(codeText, buffer),\n      codeTextData: onenterdata,\n      data: onenterdata,\n      codeFlowValue: onenterdata,\n      definition: opener(definition),\n      definitionDestinationString: buffer,\n      definitionLabelString: buffer,\n      definitionTitleString: buffer,\n      emphasis: opener(emphasis),\n      hardBreakEscape: opener(hardBreak),\n      hardBreakTrailing: opener(hardBreak),\n      htmlFlow: opener(html, buffer),\n      htmlFlowData: onenterdata,\n      htmlText: opener(html, buffer),\n      htmlTextData: onenterdata,\n      image: opener(image),\n      label: buffer,\n      link: opener(link),\n      listItem: opener(listItem),\n      listItemValue: onenterlistitemvalue,\n      listOrdered: opener(list, onenterlistordered),\n      listUnordered: opener(list),\n      paragraph: opener(paragraph),\n      reference: onenterreference,\n      referenceString: buffer,\n      resourceDestinationString: buffer,\n      resourceTitleString: buffer,\n      setextHeading: opener(heading),\n      strong: opener(strong),\n      thematicBreak: opener(thematicBreak)\n    },\n    exit: {\n      atxHeading: closer(),\n      atxHeadingSequence: onexitatxheadingsequence,\n      autolink: closer(),\n      autolinkEmail: onexitautolinkemail,\n      autolinkProtocol: onexitautolinkprotocol,\n      blockQuote: closer(),\n      characterEscapeValue: onexitdata,\n      characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n      characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n      characterReferenceValue: onexitcharacterreferencevalue,\n      codeFenced: closer(onexitcodefenced),\n      codeFencedFence: onexitcodefencedfence,\n      codeFencedFenceInfo: onexitcodefencedfenceinfo,\n      codeFencedFenceMeta: onexitcodefencedfencemeta,\n      codeFlowValue: onexitdata,\n      codeIndented: closer(onexitcodeindented),\n      codeText: closer(onexitcodetext),\n      codeTextData: onexitdata,\n      data: onexitdata,\n      definition: closer(),\n      definitionDestinationString: onexitdefinitiondestinationstring,\n      definitionLabelString: onexitdefinitionlabelstring,\n      definitionTitleString: onexitdefinitiontitlestring,\n      emphasis: closer(),\n      hardBreakEscape: closer(onexithardbreak),\n      hardBreakTrailing: closer(onexithardbreak),\n      htmlFlow: closer(onexithtmlflow),\n      htmlFlowData: onexitdata,\n      htmlText: closer(onexithtmltext),\n      htmlTextData: onexitdata,\n      image: closer(onexitimage),\n      label: onexitlabel,\n      labelText: onexitlabeltext,\n      lineEnding: onexitlineending,\n      link: closer(onexitlink),\n      listItem: closer(),\n      listOrdered: closer(),\n      listUnordered: closer(),\n      paragraph: closer(),\n      referenceString: onexitreferencestring,\n      resourceDestinationString: onexitresourcedestinationstring,\n      resourceTitleString: onexitresourcetitlestring,\n      resource: onexitresource,\n      setextHeading: closer(onexitsetextheading),\n      setextHeadingLineSequence: onexitsetextheadinglinesequence,\n      setextHeadingText: onexitsetextheadingtext,\n      strong: closer(),\n      thematicBreak: closer()\n    }\n  }\n  configure(config, (options || {}).mdastExtensions || [])\n\n  /** @type {CompileData} */\n  const data = {}\n  return compile\n\n  /**\n   * Turn micromark events into an mdast tree.\n   *\n   * @param {Array<Event>} events\n   *   Events.\n   * @returns {Root}\n   *   mdast tree.\n   */\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    }\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n    const context = {\n      stack: [tree],\n      tokenStack: [],\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      setData,\n      getData\n    }\n    /** @type {Array<number>} */\n    const listStack = []\n    let index = -1\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n    index = -1\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {\n              sliceSerialize: events[index][2].sliceSerialize\n            },\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    // Handle tokens still being open.\n    if (context.tokenStack.length > 0) {\n      const tail = context.tokenStack[context.tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    }\n\n    // Figure out `root` position.\n    tree.position = {\n      start: point(\n        events.length > 0\n          ? events[0][1].start\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      )\n    }\n\n    // Call transforms.\n    index = -1\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n    return tree\n  }\n\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token | undefined} */\n    let listItem\n    /** @type {number | undefined} */\n    let lineIndex\n    /** @type {number | undefined} */\n    let firstBlankLineIndex\n    /** @type {boolean | undefined} */\n    let atMarker\n    while (++index <= length) {\n      const event = events[index]\n      if (\n        event[1].type === 'listUnordered' ||\n        event[1].type === 'listOrdered' ||\n        event[1].type === 'blockQuote'\n      ) {\n        if (event[0] === 'enter') {\n          containerBalance++\n        } else {\n          containerBalance--\n        }\n        atMarker = undefined\n      } else if (event[1].type === 'lineEndingBlank') {\n        if (event[0] === 'enter') {\n          if (\n            listItem &&\n            !atMarker &&\n            !containerBalance &&\n            !firstBlankLineIndex\n          ) {\n            firstBlankLineIndex = index\n          }\n          atMarker = undefined\n        }\n      } else if (\n        event[1].type === 'linePrefix' ||\n        event[1].type === 'listItemValue' ||\n        event[1].type === 'listItemMarker' ||\n        event[1].type === 'listItemPrefix' ||\n        event[1].type === 'listItemPrefixWhitespace'\n      ) {\n        // Empty.\n      } else {\n        atMarker = undefined\n      }\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            // @ts-expect-error Patched.\n            listItem._spread = true\n          }\n\n          // Fix position.\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        }\n\n        // Create a new list item.\n        if (event[1].type === 'listItemPrefix') {\n          listItem = {\n            type: 'listItem',\n            // @ts-expect-error Patched\n            _spread: false,\n            start: Object.assign({}, event[1].start)\n          }\n          // @ts-expect-error: `listItem` is most definitely defined, TS...\n          events.splice(index, 0, ['enter', listItem, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    }\n\n    // @ts-expect-error Patched.\n    events[start][1]._spread = listSpread\n    return length\n  }\n\n  /**\n   * Set data.\n   *\n   * @template {keyof CompileData} Key\n   *   Field type.\n   * @param {Key} key\n   *   Key of field.\n   * @param {CompileData[Key]} [value]\n   *   New value.\n   * @returns {void}\n   *   Nothing.\n   */\n  function setData(key, value) {\n    data[key] = value\n  }\n\n  /**\n   * Get data.\n   *\n   * @template {keyof CompileData} Key\n   *   Field type.\n   * @param {Key} key\n   *   Key of field.\n   * @returns {CompileData[Key]}\n   *   Value.\n   */\n  function getData(key) {\n    return data[key]\n  }\n\n  /**\n   * Create an opener handle.\n   *\n   * @param {(token: Token) => Node} create\n   *   Create a node.\n   * @param {Handle} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function opener(create, and) {\n    return open\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {void}\n   */\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    })\n  }\n\n  /**\n   * @template {Node} Kind\n   *   Node type.\n   * @this {CompileContext}\n   *   Context.\n   * @param {Kind} node\n   *   Node to enter.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnEnterError | undefined} [errorHandler]\n   *   Handle the case where this token is open, but it is closed by something else.\n   * @returns {Kind}\n   *   The given node.\n   */\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    // @ts-expect-error: Assume `Node` can exist as a child of `parent`.\n    parent.children.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler])\n    // @ts-expect-error: `end` will be patched later.\n    node.position = {\n      start: point(token.start)\n    }\n    return node\n  }\n\n  /**\n   * Create a closer handle.\n   *\n   * @param {Handle} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function closer(and) {\n    return close\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   *   Context.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnExitError | undefined} [onExitError]\n   *   Handle the case where another token is open.\n   * @returns {Node}\n   *   The closed node.\n   */\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    const open = this.tokenStack.pop()\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): it’s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n    node.position.end = point(token.end)\n    return node\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n  function resume() {\n    return toString(this.stack.pop())\n  }\n\n  //\n  // Handlers.\n  //\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistordered() {\n    setData('expectingFirstListItemValue', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistitemvalue(token) {\n    if (getData('expectingFirstListItemValue')) {\n      const ancestor = this.stack[this.stack.length - 2]\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10)\n      setData('expectingFirstListItemValue')\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.lang = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.meta = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (getData('flowCodeInside')) return\n    this.buffer()\n    setData('flowCodeInside', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    setData('flowCodeInside')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitionlabelstring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitatxheadingsequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n      node.depth = depth\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadingtext() {\n    setData('setextHeadingSlurpLineEnding', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadinglinesequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    node.depth = this.sliceSerialize(token).charCodeAt(0) === 61 ? 1 : 2\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheading() {\n    setData('setextHeadingSlurpLineEnding')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterdata(token) {\n    const node = this.stack[this.stack.length - 1]\n    let tail = node.children[node.children.length - 1]\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text()\n      // @ts-expect-error: we’ll add `end` later.\n      tail.position = {\n        start: point(token.start)\n      }\n      // @ts-expect-error: Assume `parent` accepts `text`.\n      node.children.push(tail)\n    }\n    this.stack.push(tail)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n    // If we’re at a hard break, include the line ending in there.\n    if (getData('atHardBreak')) {\n      const tail = context.children[context.children.length - 1]\n      tail.position.end = point(token.end)\n      setData('atHardBreak')\n      return\n    }\n    if (\n      !getData('setextHeadingSlurpLineEnding') &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithardbreak() {\n    setData('atHardBreak', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlink() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (getData('inReference')) {\n      /** @type {ReferenceType} */\n      const referenceType = getData('referenceType') || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    setData('referenceType')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitimage() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (getData('inReference')) {\n      /** @type {ReferenceType} */\n      const referenceType = getData('referenceType') || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    setData('referenceType')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabeltext(token) {\n    const string = this.sliceSerialize(token)\n    const ancestor = this.stack[this.stack.length - 2]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    ancestor.label = decodeString(string)\n    // @ts-expect-error: same as above.\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabel() {\n    const fragment = this.stack[this.stack.length - 1]\n    const value = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // Assume a reference.\n    setData('inReference', true)\n    if (node.type === 'link') {\n      /** @type {Array<StaticPhrasingContent>} */\n      // @ts-expect-error: Assume static phrasing content.\n      const children = fragment.children\n      node.children = children\n    } else {\n      node.alt = value\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresource() {\n    setData('inReference')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterreference() {\n    setData('referenceType', 'collapsed')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    node.label = label\n    // @ts-expect-error: same as above.\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    setData('referenceType', 'full')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcharacterreferencemarker(token) {\n    setData('characterReferenceType', token.type)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = getData('characterReferenceType')\n    /** @type {string} */\n    let value\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n      setData('characterReferenceType')\n    } else {\n      const result = decodeNamedCharacterReference(data)\n      value = result\n    }\n    const tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = this.sliceSerialize(token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  }\n\n  //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    }\n  }\n\n  /** @returns {Code} */\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    }\n  }\n\n  /** @returns {InlineCode} */\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    }\n  }\n\n  /** @returns {Definition} */\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n\n  /** @returns {Emphasis} */\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    }\n  }\n\n  /** @returns {Heading} */\n  function heading() {\n    // @ts-expect-error `depth` will be set later.\n    return {\n      type: 'heading',\n      depth: undefined,\n      children: []\n    }\n  }\n\n  /** @returns {Break} */\n  function hardBreak() {\n    return {\n      type: 'break'\n    }\n  }\n\n  /** @returns {HTML} */\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    }\n  }\n\n  /** @returns {Image} */\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    }\n  }\n\n  /** @returns {Link} */\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n\n  /** @returns {Paragraph} */\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    }\n  }\n\n  /** @returns {Strong} */\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    }\n  }\n\n  /** @returns {Text} */\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    }\n  }\n\n  /** @returns {ThematicBreak} */\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    }\n  }\n}\n\n/**\n * Copy a point-like value.\n *\n * @param {Point} d\n *   Point-like value.\n * @returns {Point}\n *   unist point.\n */\nfunction point(d) {\n  return {\n    line: d.line,\n    column: d.column,\n    offset: d.offset\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Array<Extension | Array<Extension>>} extensions\n * @returns {void}\n */\nfunction configure(combined, extensions) {\n  let index = -1\n  while (++index < extensions.length) {\n    const value = extensions[index]\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Extension} extension\n * @returns {void}\n */\nfunction extension(combined, extension) {\n  /** @type {keyof Extension} */\n  let key\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      if (key === 'canContainEols') {\n        const right = extension[key]\n        if (right) {\n          combined[key].push(...right)\n        }\n      } else if (key === 'transforms') {\n        const right = extension[key]\n        if (right) {\n          combined[key].push(...right)\n        }\n      } else if (key === 'enter' || key === 'exit') {\n        const right = extension[key]\n        if (right) {\n          Object.assign(combined[key], right)\n        }\n      }\n    }\n  }\n}\n\n/** @type {OnEnterError} */\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({\n          start: left.start,\n          end: left.end\n        }) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is still open'\n    )\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {subtokenize} from 'micromark-util-subtokenize'\n/**\n * @param {Array<Event>} events\n * @returns {Array<Event>}\n */\n\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Create} Create\n */\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {text, string} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n/**\n * @param {ParseOptions} [options]\n * @returns {ParseContext}\n */\n\nexport function parse(options = {}) {\n  /** @type {FullNormalizedExtension} */\n  // @ts-expect-error `defaultConstructs` is full, so the result will be too.\n  const constructs = combineExtensions(\n    // @ts-expect-error Same as above.\n    [defaultConstructs].concat(options.extensions || [])\n  )\n  /** @type {ParseContext} */\n\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n  /**\n   * @param {InitialConstruct} initial\n   */\n\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","import remarkParse from './lib/index.js'\n\nexport default remarkParse\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/** @type {import('unified').Plugin<[Options?] | void[], string, Root>} */\nexport default function remarkParse(options) {\n  /** @type {import('unified').ParserFunction<Root>} */\n  const parser = (doc) => {\n    // Assume options.\n    const settings = /** @type {Options} */ (this.data('settings'))\n\n    return fromMarkdown(\n      doc,\n      Object.assign({}, settings, options, {\n        // Note: these options are not in the readme.\n        // The goal is for them to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions: this.data('micromarkExtensions') || [],\n        mdastExtensions: this.data('fromMarkdownExtensions') || []\n      })\n    )\n  }\n\n  Object.assign(this, {Parser: parser})\n}\n","/**\n * @typedef {import('unist').Position} Position\n *\n * @typedef {[number, number]} RangeLike\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n *\n * @typedef LocLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef NodeLike\n * @property {LocLike | null | undefined} [loc]\n * @property {RangeLike | null | undefined} [range]\n * @property {number | null | undefined} [start]\n * @property {number | null | undefined} [end]\n */\n\n/**\n * Turn an estree `node` into a unist `position`.\n *\n * @param {NodeLike | null | undefined} [node]\n *   estree node.\n * @returns {Position}\n *   unist position.\n */\nexport function positionFromEstree(node) {\n  const nodeLike = node || {}\n  const loc = nodeLike.loc || {}\n  const range = nodeLike.range || [0, 0]\n  const startColumn = loc.start\n    ? numberOrUndefined(loc.start.column)\n    : undefined\n  const endColumn = loc.end ? numberOrUndefined(loc.end.column) : undefined\n\n  return {\n    start: {\n      // @ts-expect-error: return no point / no position next major.\n      line: loc.start ? numberOrUndefined(loc.start.line) : undefined,\n      // @ts-expect-error: return no point / no position next major.\n      column: startColumn === undefined ? undefined : startColumn + 1,\n      offset: numberOrUndefined(range[0] || nodeLike.start)\n    },\n    end: {\n      // @ts-expect-error: return no point / no position next major.\n      line: loc.end ? numberOrUndefined(loc.end.line) : undefined,\n      // @ts-expect-error: return no point / no position next major.\n      column: endColumn === undefined ? undefined : endColumn + 1,\n      offset: numberOrUndefined(range[1] || nodeLike.end)\n    }\n  }\n}\n\n/**\n *\n * @param {number | null | undefined} value\n * @returns {number | undefined}\n */\nfunction numberOrUndefined(value) {\n  return typeof value === 'number' && value > -1 ? value : undefined\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Position | PositionLike | Point | PointLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason` at `place` from `origin`.\n   *\n   * When an error is passed in as `reason`, the `stack` is copied.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   *\n   *   > 👉 **Note**: you should use markdown.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // To do: next major: expose `undefined` everywhere instead of `null`.\n  constructor(reason, place, origin) {\n    /** @type {[string | null, string | null]} */\n    const parts = [null, null]\n    /** @type {Position} */\n    let position = {\n      // @ts-expect-error: we always follows the structure of `position`.\n      start: {line: null, column: null},\n      // @ts-expect-error: \"\n      end: {line: null, column: null}\n    }\n\n    super()\n\n    if (typeof place === 'string') {\n      origin = place\n      place = undefined\n    }\n\n    if (typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        parts[1] = origin\n      } else {\n        parts[0] = origin.slice(0, index)\n        parts[1] = origin.slice(index + 1)\n      }\n    }\n\n    if (place) {\n      // Node.\n      if ('type' in place || 'position' in place) {\n        if (place.position) {\n          // To do: next major: deep clone.\n          // @ts-expect-error: looks like a position.\n          position = place.position\n        }\n      }\n      // Position.\n      else if ('start' in place || 'end' in place) {\n        // @ts-expect-error: looks like a position.\n        // To do: next major: deep clone.\n        position = place\n      }\n      // Point.\n      else if ('line' in place || 'column' in place) {\n        // To do: next major: deep clone.\n        position.start = place\n      }\n    }\n\n    // Fields from `Error`.\n    /**\n     * Serialized positional info of error.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(place) || '1:1'\n\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = typeof reason === 'object' ? reason.message : reason\n\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack = ''\n\n    if (typeof reason === 'object' && reason.stack) {\n      this.stack = reason.stack\n    }\n\n    /**\n     * Reason for message.\n     *\n     * > 👉 **Note**: you should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * State of problem.\n     *\n     * * `true` — marks associated file as no longer processable (error)\n     * * `false` — necessitates a (potential) change (warning)\n     * * `null | undefined` — for things that might not need changing (info)\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | null}\n     */\n    this.line = position.start.line\n\n    /**\n     * Starting column of error.\n     *\n     * @type {number | null}\n     */\n    this.column = position.start.column\n\n    /**\n     * Full unist position.\n     *\n     * @type {Position | null}\n     */\n    this.position = position\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | null}\n     */\n    this.source = parts[0]\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | null}\n     */\n    this.ruleId = parts[1]\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | null}\n     */\n    this.file\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | null}\n     */\n    this.actual\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | null}\n     */\n    this.expected\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | null}\n     */\n    this.url\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | null}\n     */\n    this.note\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.fatal = null\nVFileMessage.prototype.column = null\nVFileMessage.prototype.line = null\nVFileMessage.prototype.source = null\nVFileMessage.prototype.ruleId = null\nVFileMessage.prototype.position = null\n","/**\n * @typedef {import('estree-jsx').Node} Node\n */\n\n/**\n * @typedef {CONTINUE | SKIP | EXIT} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed), when moving in an array.\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n */\n\n/**\n * @callback Visitor\n *   Handle a node.\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node`, the `Visitor` should\n *   return a new `Index` to specify the sibling to traverse after `node` is\n *   traversed.\n *   Adding or removing next siblings of `node` is handled as expected without\n *   needing to return a new `Index`.\n * @param {Node} node\n *   Found node.\n * @param {string | null} key\n *   Field at which `node` lives in its parent (or where a list of nodes lives).\n * @param {number | null} index\n *   Index where `node` lives if `parent[key]` is an array.\n * @param {Array<Node>} ancestors\n *   Ancestors of `node`.\n * @returns {Action | Index | ActionTuple | null | undefined | void}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * @typedef Visitors\n *   Handle nodes when entering (preorder) and leaving (postorder).\n * @property {Visitor | null | undefined} [enter]\n *   Handle nodes when entering (preorder).\n * @property {Visitor | null | undefined} [leave]\n *   Handle nodes when leaving (postorder).\n */\n\nimport {color} from './color.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = Symbol('continue')\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = Symbol('exit')\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = Symbol('skip')\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) and/or *postorder* (**LRN**).\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor(s) when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * @param {Node} tree\n *   Tree to traverse\n * @param {Visitor | Visitors | null | undefined} [visitor]\n *   Handle each node.\n * @returns {void}\n *   Nothing.\n */\nexport function visit(tree, visitor) {\n  /** @type {Visitor | undefined} */\n  let enter\n  /** @type {Visitor | undefined} */\n  let leave\n\n  if (typeof visitor === 'function') {\n    enter = visitor\n  } else if (visitor && typeof visitor === 'object') {\n    if (visitor.enter) enter = visitor.enter\n    if (visitor.leave) leave = visitor.leave\n  }\n\n  build(tree, null, null, [])()\n\n  /**\n   * @param {Node} node\n   * @param {string | null} key\n   * @param {number | null} index\n   * @param {Array<Node>} parents\n   */\n  function build(node, key, index, parents) {\n    if (nodelike(node)) {\n      visit.displayName = 'node (' + color(node.type) + ')'\n    }\n\n    return visit\n\n    /**\n     * @returns {ActionTuple}\n     */\n    function visit() {\n      /** @type {ActionTuple} */\n      const result = enter ? toResult(enter(node, key, index, parents)) : []\n\n      if (result[0] === EXIT) {\n        return result\n      }\n\n      if (result[0] !== SKIP) {\n        /** @type {keyof node} */\n        let cKey\n\n        for (cKey in node) {\n          if (\n            own.call(node, cKey) &&\n            node[cKey] &&\n            typeof node[cKey] === 'object' &&\n            // @ts-expect-error: custom esast extension.\n            cKey !== 'data' &&\n            // @ts-expect-error: custom esast extension.\n            cKey !== 'position'\n          ) {\n            const grandparents = parents.concat(node)\n            /** @type {unknown} */\n            const value = node[cKey]\n\n            if (Array.isArray(value)) {\n              const nodes = /** @type {Array<unknown>} */ (value)\n              let cIndex = 0\n\n              while (cIndex > -1 && cIndex < nodes.length) {\n                const subvalue = nodes[cIndex]\n\n                if (nodelike(subvalue)) {\n                  const subresult = build(\n                    subvalue,\n                    cKey,\n                    cIndex,\n                    grandparents\n                  )()\n                  if (subresult[0] === EXIT) return subresult\n                  cIndex =\n                    typeof subresult[1] === 'number' ? subresult[1] : cIndex + 1\n                } else {\n                  cIndex++\n                }\n              }\n            } else if (nodelike(value)) {\n              const subresult = build(value, cKey, null, grandparents)()\n              if (subresult[0] === EXIT) return subresult\n            }\n          }\n        }\n      }\n\n      return leave ? toResult(leave(node, key, index, parents)) : result\n    }\n  }\n}\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {Action | Index | ActionTuple | null | undefined | void} value\n *   Valid return values from visitors.\n * @returns {ActionTuple}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n\n/**\n * Check if something looks like a node.\n *\n * @param {unknown} value\n *   Anything.\n * @returns {value is Node}\n *   Whether `value` looks like a node.\n */\nfunction nodelike(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'type' in value &&\n      typeof value.type === 'string' &&\n      value.type.length > 0\n  )\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Position | PositionLike | Point | PointLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason` at `place` from `origin`.\n   *\n   * When an error is passed in as `reason`, the `stack` is copied.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   *\n   *   > 👉 **Note**: you should use markdown.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // To do: next major: expose `undefined` everywhere instead of `null`.\n  constructor(reason, place, origin) {\n    /** @type {[string | null, string | null]} */\n    const parts = [null, null]\n    /** @type {Position} */\n    let position = {\n      // @ts-expect-error: we always follows the structure of `position`.\n      start: {line: null, column: null},\n      // @ts-expect-error: \"\n      end: {line: null, column: null}\n    }\n\n    super()\n\n    if (typeof place === 'string') {\n      origin = place\n      place = undefined\n    }\n\n    if (typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        parts[1] = origin\n      } else {\n        parts[0] = origin.slice(0, index)\n        parts[1] = origin.slice(index + 1)\n      }\n    }\n\n    if (place) {\n      // Node.\n      if ('type' in place || 'position' in place) {\n        if (place.position) {\n          // To do: next major: deep clone.\n          // @ts-expect-error: looks like a position.\n          position = place.position\n        }\n      }\n      // Position.\n      else if ('start' in place || 'end' in place) {\n        // @ts-expect-error: looks like a position.\n        // To do: next major: deep clone.\n        position = place\n      }\n      // Point.\n      else if ('line' in place || 'column' in place) {\n        // To do: next major: deep clone.\n        position.start = place\n      }\n    }\n\n    // Fields from `Error`.\n    /**\n     * Serialized positional info of error.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(place) || '1:1'\n\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = typeof reason === 'object' ? reason.message : reason\n\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack = ''\n\n    if (typeof reason === 'object' && reason.stack) {\n      this.stack = reason.stack\n    }\n\n    /**\n     * Reason for message.\n     *\n     * > 👉 **Note**: you should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * State of problem.\n     *\n     * * `true` — marks associated file as no longer processable (error)\n     * * `false` — necessitates a (potential) change (warning)\n     * * `null | undefined` — for things that might not need changing (info)\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | null}\n     */\n    this.line = position.start.line\n\n    /**\n     * Starting column of error.\n     *\n     * @type {number | null}\n     */\n    this.column = position.start.column\n\n    /**\n     * Full unist position.\n     *\n     * @type {Position | null}\n     */\n    this.position = position\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | null}\n     */\n    this.source = parts[0]\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | null}\n     */\n    this.ruleId = parts[1]\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | null}\n     */\n    this.file\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | null}\n     */\n    this.actual\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | null}\n     */\n    this.expected\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | null}\n     */\n    this.url\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | null}\n     */\n    this.note\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.fatal = null\nVFileMessage.prototype.column = null\nVFileMessage.prototype.line = null\nVFileMessage.prototype.source = null\nVFileMessage.prototype.ruleId = null\nVFileMessage.prototype.position = null\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('acorn').Options} AcornOptions\n * @typedef {import('acorn').Comment} Comment\n * @typedef {import('acorn').Token} Token\n * @typedef {import('acorn').Node} AcornNode\n * @typedef {import('estree').Program} Program\n * @typedef {import('estree').Node} EstreeNode\n *\n * @typedef {{parse: import('acorn').parse, parseExpressionAt: import('acorn').parseExpressionAt}} Acorn\n * @typedef {Error & {raisedAt: number, pos: number, loc: {line: number, column: number}}} AcornError\n *\n * @typedef Options\n * @property {Acorn} acorn\n * @property {AcornOptions | null | undefined} [acornOptions]\n * @property {Point | null | undefined} [start]\n * @property {string | null | undefined} [prefix='']\n * @property {string | null | undefined} [suffix='']\n * @property {boolean | null | undefined} [expression=false]\n * @property {boolean | null | undefined} [allowEmpty=false]\n */\n\nimport { visit } from 'estree-util-visit';\nimport { VFileMessage } from 'vfile-message';\nimport { location } from 'vfile-location';\n\n/**\n * Parse a list of micromark events with acorn.\n *\n * @param {Array<Event>} events\n * @param {Options} options\n * @returns {{estree: Program | undefined, error: Error | undefined, swallow: boolean}}\n */\n// eslint-disable-next-line complexity\nexport function eventsToAcorn(events, options) {\n  const prefix = options.prefix || '';\n  const suffix = options.suffix || '';\n  const acornOptions = Object.assign({}, options.acornOptions);\n  /** @type {Array<Comment>} */\n  const comments = [];\n  /** @type {Array<Token>} */\n  const tokens = [];\n  const onComment = acornOptions.onComment;\n  const onToken = acornOptions.onToken;\n  /** @type {Array<string>} */\n  const chunks = [];\n  /** @type {Record<string, Point>} */\n  const lines = {};\n  let index = -1;\n  let swallow = false;\n  /** @type {AcornNode | undefined} */\n  let estree;\n  /** @type {Error | undefined} */\n  let exception;\n  /** @type {number} */\n  let startLine;\n  /** @type {AcornOptions} */\n  const acornConfig = Object.assign({}, acornOptions, {\n    onComment: comments,\n    preserveParens: true\n  });\n  if (onToken) {\n    acornConfig.onToken = tokens;\n  }\n\n  // We use `events` to detect everything, however, it could be empty.\n  // In that case, we need `options.start` to make sense of positional info.\n  if (options.start) {\n    startLine = options.start.line;\n    lines[startLine] = options.start;\n  }\n  while (++index < events.length) {\n    const [kind, token, context] = events[index];\n\n    // Assume only void events (and `enter` followed immediately by an `exit`).\n    if (kind === 'exit') {\n      chunks.push(context.sliceSerialize(token));\n      setPoint(token.start);\n      setPoint(token.end);\n    }\n  }\n  const source = chunks.join('');\n  const value = prefix + source + suffix;\n  const isEmptyExpression = options.expression && empty(source);\n  const place = location(source);\n  if (isEmptyExpression && !options.allowEmpty) {\n    throw new VFileMessage('Unexpected empty expression', parseOffsetToUnistPoint(0), 'micromark-extension-mdx-expression:unexpected-empty-expression');\n  }\n  try {\n    estree = options.expression && !isEmptyExpression ? options.acorn.parseExpressionAt(value, 0, acornConfig) : options.acorn.parse(value, acornConfig);\n  } catch (error_) {\n    const error = /** @type {AcornError} */error_;\n    const point = parseOffsetToUnistPoint(error.pos);\n    error.message = String(error.message).replace(/ \\(\\d+:\\d+\\)$/, '');\n    error.pos = point.offset;\n    error.loc = {\n      line: point.line,\n      column: point.column - 1\n    };\n    exception = error;\n    swallow = error.raisedAt >= prefix.length + source.length ||\n    // Broken comments are raised at their start, not their end.\n    error.message === 'Unterminated comment';\n  }\n  if (estree && options.expression && !isEmptyExpression) {\n    if (empty(value.slice(estree.end, value.length - suffix.length))) {\n      estree = {\n        type: 'Program',\n        start: 0,\n        end: prefix.length + source.length,\n        // @ts-expect-error: It’s good.\n        body: [{\n          type: 'ExpressionStatement',\n          expression: estree,\n          start: 0,\n          end: prefix.length + source.length\n        }],\n        sourceType: 'module',\n        comments: []\n      };\n    } else {\n      const point = parseOffsetToUnistPoint(estree.end);\n      exception = new Error('Unexpected content after expression');\n      // @ts-expect-error: acorn exception.\n      exception.pos = point.offset;\n      // @ts-expect-error: acorn exception.\n      exception.loc = {\n        line: point.line,\n        column: point.column - 1\n      };\n      estree = undefined;\n    }\n  }\n  if (estree) {\n    // @ts-expect-error: acorn *does* allow comments\n    estree.comments = comments;\n\n    // @ts-expect-error: acorn looks enough like estree.\n    visit(estree, (esnode, field, index, parents) => {\n      let context = /** @type {AcornNode | Array<AcornNode>} */\n      parents[parents.length - 1];\n      /** @type {string | number | null} */\n      let prop = field;\n\n      // Remove non-standard `ParenthesizedExpression`.\n      // @ts-expect-error: included in acorn.\n      if (esnode.type === 'ParenthesizedExpression' && context && prop) {\n        /* c8 ignore next 5 */\n        if (typeof index === 'number') {\n          // @ts-expect-error: indexable.\n          context = context[prop];\n          prop = index;\n        }\n\n        // @ts-expect-error: indexable.\n        context[prop] = esnode.expression;\n      }\n      fixPosition(esnode);\n    });\n\n    // Comment positions are fixed by `visit` because they’re in the tree.\n    if (Array.isArray(onComment)) {\n      onComment.push(...comments);\n    } else if (typeof onComment === 'function') {\n      for (const comment of comments) {\n        onComment(comment.type === 'Block', comment.value, comment.start, comment.end, comment.loc.start, comment.loc.end);\n      }\n    }\n    for (const token of tokens) {\n      fixPosition(token);\n      if (Array.isArray(onToken)) {\n        onToken.push(token);\n      } else {\n        // `tokens` are not added if `onToken` is not defined, so it must be a\n        // function.\n\n        onToken(token);\n      }\n    }\n  }\n\n  // @ts-expect-error: It’s a program now.\n  return {\n    estree,\n    error: exception,\n    swallow\n  };\n\n  /**\n   * Update the position of a node.\n   *\n   * @param {AcornNode | EstreeNode | Token} nodeOrToken\n   * @returns {void}\n   */\n  function fixPosition(nodeOrToken) {\n    const pointStart = parseOffsetToUnistPoint(nodeOrToken.start);\n    const pointEnd = parseOffsetToUnistPoint(nodeOrToken.end);\n    nodeOrToken.start = pointStart.offset;\n    nodeOrToken.end = pointEnd.offset;\n    nodeOrToken.loc = {\n      start: {\n        line: pointStart.line,\n        column: pointStart.column - 1,\n        offset: pointStart.offset\n      },\n      end: {\n        line: pointEnd.line,\n        column: pointEnd.column - 1,\n        offset: pointEnd.offset\n      }\n    };\n    nodeOrToken.range = [nodeOrToken.start, nodeOrToken.end];\n  }\n\n  /**\n   * Turn an arbitrary offset into the parsed value, into a point in the source\n   * value.\n   *\n   * @param {number} acornOffset\n   * @returns {Point}\n   */\n  function parseOffsetToUnistPoint(acornOffset) {\n    let sourceOffset = acornOffset - prefix.length;\n    if (sourceOffset < 0) {\n      sourceOffset = 0;\n    } else if (sourceOffset > source.length) {\n      sourceOffset = source.length;\n    }\n    const pointInSource = place.toPoint(sourceOffset);\n    const line = startLine + (pointInSource.line - 1);\n    const column = lines[line].column + (pointInSource.column - 1);\n    const offset = lines[line].offset + (pointInSource.column - 1);\n    return (/** @type {Point} */{\n        line,\n        column,\n        offset\n      }\n    );\n  }\n\n  /** @param {Point} point */\n  function setPoint(point) {\n    // Not passed by `micromark-extension-mdxjs-esm`\n    /* c8 ignore next 3 */\n    if (!startLine || point.line < startLine) {\n      startLine = point.line;\n    }\n    if (!(point.line in lines) || lines[point.line].offset > point.offset) {\n      lines[point.line] = point;\n    }\n  }\n}\n\n/**\n * @param {string} value\n * @returns {boolean}\n */\nfunction empty(value) {\n  return /^\\s*$/.test(value\n  // Multiline comments.\n  .replace(/\\/\\*[\\s\\S]*?\\*\\//g, '')\n  // Line comments.\n  // EOF instead of EOL is specifically not allowed, because that would\n  // mean the closing brace is on the commented-out line\n  .replace(/\\/\\/[^\\r\\n]*(\\r\\n|\\n|\\r)/g, ''));\n}","/**\n * @typedef {import('vfile').VFile} VFile\n * @typedef {import('vfile').Value} Value\n */\n\n/**\n * @typedef Point\n *   unist point, where `line` and `column` can be `undefined`.\n * @property {number | undefined} line\n *   Line.\n * @property {number | undefined} column\n *   Column.\n * @property {number | undefined} [offset]\n *   Offset.\n *\n * @typedef PointLike\n *   unist point, allowed as input.\n * @property {number | null | undefined} [line]\n *   Line.\n * @property {number | null | undefined} [column]\n *   Column.\n * @property {number | null | undefined} [offset]\n *   Offset.\n *\n * @callback ToPoint\n *   Get a line/column-based `point` from `offset`.\n * @param {number | null | undefined} [offset]\n *   Something that should be an `offset.\n * @returns {Point}\n *   Point, line/column are undefined for invalid or out of bounds input.\n *\n * @callback ToOffset\n *   Get an offset from a line/column-based `point`.\n * @param {Point | null | undefined} [point]\n *   Something that should be a `point.\n * @returns {number}\n *   Offset or `-1` for invalid or out of bounds input.\n *\n * @typedef Location\n *   Accessors for index.\n * @property {ToPoint} toPoint\n *   Get a line/column-based `point` from `offset`.\n * @property {ToOffset} toOffset\n *   Get an offset from a line/column-based `point`.\n */\n\n/**\n * Index the given document so you can translate between line/column and offset\n * based positional info.\n *\n * @param {VFile | Value} file\n *   File to index.\n * @returns {Location}\n *   Accessors for index.\n */\nexport function location(file) {\n  const value = String(file)\n  /** @type {Array<number>} */\n  const indices = []\n  const search = /\\r?\\n|\\r/g\n\n  while (search.test(value)) {\n    indices.push(search.lastIndex)\n  }\n\n  indices.push(value.length + 1)\n\n  return {toPoint, toOffset}\n\n  /** @type {ToPoint} */\n  function toPoint(offset) {\n    let index = -1\n\n    if (\n      typeof offset === 'number' &&\n      offset > -1 &&\n      offset < indices[indices.length - 1]\n    ) {\n      while (++index < indices.length) {\n        if (indices[index] > offset) {\n          return {\n            line: index + 1,\n            column: offset - (index > 0 ? indices[index - 1] : 0) + 1,\n            offset\n          }\n        }\n      }\n    }\n\n    return {line: undefined, column: undefined, offset: undefined}\n  }\n\n  /** @type {ToOffset} */\n  function toOffset(point) {\n    const line = point && point.line\n    const column = point && point.column\n\n    if (\n      typeof line === 'number' &&\n      typeof column === 'number' &&\n      !Number.isNaN(line) &&\n      !Number.isNaN(column) &&\n      line - 1 in indices\n    ) {\n      const offset = (indices[line - 2] || 0) + column - 1 || 0\n\n      if (offset > -1 && offset < indices[indices.length - 1]) {\n        return offset\n      }\n    }\n\n    return -1\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-events-to-acorn').Acorn} Acorn\n * @typedef {import('micromark-util-events-to-acorn').AcornOptions} AcornOptions\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {factorySpace} from 'micromark-factory-space'\nimport {positionFromEstree} from 'unist-util-position-from-estree'\nimport {VFileMessage} from 'vfile-message'\nimport {eventsToAcorn} from 'micromark-util-events-to-acorn'\n\n/**\n * @this {TokenizeContext}\n * @param {Effects} effects\n * @param {State} ok\n * @param {string} type\n * @param {string} markerType\n * @param {string} chunkType\n * @param {Acorn | null | undefined} [acorn]\n * @param {AcornOptions | null | undefined} [acornOptions]\n * @param {boolean | null | undefined} [addResult=false]\n * @param {boolean | null | undefined} [spread=false]\n * @param {boolean | null | undefined} [allowEmpty=false]\n * @param {boolean | null | undefined} [allowLazy=false]\n * @param {number | null | undefined} [startColumn=0]\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryMdxExpression(\n  effects,\n  ok,\n  type,\n  markerType,\n  chunkType,\n  acorn,\n  acornOptions,\n  addResult,\n  spread,\n  allowEmpty,\n  allowLazy,\n  startColumn\n) {\n  const self = this\n  const eventStart = this.events.length + 3 // Add main and marker token\n  const tail = this.events[this.events.length - 1]\n  const initialPrefix =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  const prefixExpressionIndent = initialPrefix ? initialPrefix + 1 : 0\n  let balance = 1\n  /** @type {Point} */\n  let startPosition\n  /** @type {Error} */\n  let lastCrash\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    startPosition = self.now()\n    return atBreak\n  }\n\n  /** @type {State} */\n  function atBreak(code) {\n    if (code === null) {\n      throw (\n        lastCrash ||\n        new VFileMessage(\n          'Unexpected end of file in expression, expected a corresponding closing brace for `{`',\n          self.now(),\n          'micromark-extension-mdx-expression:unexpected-eof'\n        )\n      )\n    }\n    if (code === 125) {\n      return atClosingBrace(code)\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      // `startColumn` is used by the JSX extensions that also wraps this\n      // factory.\n      // JSX can be indented arbitrarily, but expressions can’t exdent\n      // arbitrarily, due to that they might contain template strings\n      // (backticked strings).\n      // We’ll eat up to where that tag starts (`startColumn`), and a tab size.\n      /* c8 ignore next 3 */\n      const prefixTagIndent = startColumn\n        ? startColumn + 4 - self.now().column\n        : 0\n      const indent = Math.max(prefixExpressionIndent, prefixTagIndent)\n      return indent\n        ? factorySpace(effects, atBreak, 'linePrefix', indent)\n        : atBreak\n    }\n    const now = self.now()\n    if (\n      now.line !== startPosition.line &&\n      !allowLazy &&\n      self.parser.lazy[now.line]\n    ) {\n      throw new VFileMessage(\n        'Unexpected end of file in expression, expected a corresponding closing brace for `{`',\n        self.now(),\n        'micromark-extension-mdx-expression:unexpected-eof'\n      )\n    }\n    effects.enter(chunkType)\n    return inside(code)\n  }\n\n  /** @type {State} */\n  function inside(code) {\n    if (code === null || code === 125 || markdownLineEnding(code)) {\n      effects.exit(chunkType)\n      return atBreak(code)\n    }\n    if (code === 123 && !acorn) {\n      effects.consume(code)\n      balance++\n      return inside\n    }\n    effects.consume(code)\n    return inside\n  }\n\n  /** @type {State} */\n  function atClosingBrace(code) {\n    balance--\n\n    // Agnostic mode: count balanced braces.\n    if (!acorn) {\n      if (balance) {\n        effects.enter(chunkType)\n        effects.consume(code)\n        return inside\n      }\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    // Gnostic mode: parse w/ acorn.\n    const result = eventsToAcorn(self.events.slice(eventStart), {\n      acorn,\n      acornOptions,\n      start: startPosition,\n      expression: true,\n      allowEmpty,\n      prefix: spread ? '({' : '',\n      suffix: spread ? '})' : ''\n    })\n    const estree = result.estree\n\n    // Get the spread value.\n    if (spread && estree) {\n      // Should always be the case as we wrap in `d={}`\n\n      const head = estree.body[0]\n      // Can occur in some complex attributes.\n      /* c8 ignore next 11 */\n      if (\n        head.type !== 'ExpressionStatement' ||\n        head.expression.type !== 'ObjectExpression'\n      ) {\n        throw new VFileMessage(\n          'Unexpected `' +\n            head.type +\n            '` in code: expected an object spread (`{...spread}`)',\n          positionFromEstree(head).start,\n          'micromark-extension-mdx-expression:non-spread'\n        )\n      } else if (head.expression.properties[1]) {\n        throw new VFileMessage(\n          'Unexpected extra content in spread: only a single spread is supported',\n          positionFromEstree(head.expression.properties[1]).start,\n          'micromark-extension-mdx-expression:spread-extra'\n        )\n      } else if (\n        head.expression.properties[0] &&\n        head.expression.properties[0].type !== 'SpreadElement'\n      ) {\n        throw new VFileMessage(\n          'Unexpected `' +\n            head.expression.properties[0].type +\n            '` in code: only spread elements are supported',\n          positionFromEstree(head.expression.properties[0]).start,\n          'micromark-extension-mdx-expression:non-spread'\n        )\n      }\n    }\n    if (result.error) {\n      lastCrash = new VFileMessage(\n        'Could not parse expression with acorn: ' + result.error.message,\n        {\n          // @ts-expect-error: fine.\n          line: result.error.loc.line,\n          // @ts-expect-error: fine.\n          column: result.error.loc.column + 1,\n          // @ts-expect-error: fine.\n          offset: result.error.pos\n        },\n        'micromark-extension-mdx-expression:acorn'\n      )\n      if (code !== null && result.swallow) {\n        effects.enter(chunkType)\n        effects.consume(code)\n        return inside\n      }\n      throw lastCrash\n    }\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    Object.assign(\n      effects.exit(type),\n      addResult\n        ? {\n            estree\n          }\n        : undefined\n    )\n    return ok\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-events-to-acorn').Acorn} Acorn\n * @typedef {import('micromark-util-events-to-acorn').AcornOptions} AcornOptions\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {Acorn | null | undefined} [acorn]\n *   Acorn parser to use (optional).\n * @property {AcornOptions | null | undefined} [acornOptions]\n *   Options to pass to acorn (default: `{ecmaVersion: 2020, locations: true,\n *   sourceType: 'module'}`).\n *   All fields (except for `locations`) can be set.\n * @property {boolean | null | undefined} [addResult=false]\n *   Whether to add an `estree` field to `mdxFlowExpression` and\n *   `mdxTextExpression` tokens with results from acorn.\n * @property {boolean | null | undefined} [spread=false]\n *   Undocumented option to parse only a spread (used by\n *   `micromark-extension-mdx-jsx` to parse spread attributes).\n * @property {boolean | null | undefined} [allowEmpty=true]\n *   Undocumented option to disallow empty attributes (used by\n *   `micromark-extension-mdx-jsx` to prohobit empty attribute values).\n */\n\nimport {factoryMdxExpression} from 'micromark-factory-mdx-expression'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/**\n * Add support for MDX expressions.\n *\n * Function called optionally with options to get a syntax extension for\n * micromark.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Extension}\n *   Syntax extension for micromark (passed in `extensions`).\n */\nexport function mdxExpression(options) {\n  const options_ = options || {}\n  const addResult = options_.addResult\n  const acorn = options_.acorn\n  // Hidden: `micromark-extension-mdx-jsx` supports expressions in tags,\n  // and one of them is only “spread” elements.\n  // It also has expressions that are not allowed to be empty (`<x y={}/>`).\n  // Instead of duplicating code there, this are two small hidden feature here\n  // to test that behavior.\n  const spread = options_.spread\n  let allowEmpty = options_.allowEmpty\n  /** @type {AcornOptions} */\n  let acornOptions\n  if (allowEmpty === null || allowEmpty === undefined) {\n    allowEmpty = true\n  }\n  if (acorn) {\n    if (!acorn.parseExpressionAt) {\n      throw new Error(\n        'Expected a proper `acorn` instance passed in as `options.acorn`'\n      )\n    }\n    acornOptions = Object.assign(\n      {\n        ecmaVersion: 2020,\n        sourceType: 'module'\n      },\n      options_.acornOptions\n    )\n  } else if (options_.acornOptions || options_.addResult) {\n    throw new Error('Expected an `acorn` instance passed in as `options.acorn`')\n  }\n  return {\n    flow: {\n      [123]: {\n        tokenize: tokenizeFlowExpression,\n        concrete: true\n      }\n    },\n    text: {\n      [123]: {\n        tokenize: tokenizeTextExpression\n      }\n    }\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeFlowExpression(effects, ok, nok) {\n    const self = this\n    return start\n\n    /** @type {State} */\n    function start(code) {\n      return factoryMdxExpression.call(\n        self,\n        effects,\n        factorySpace(effects, after, 'whitespace'),\n        'mdxFlowExpression',\n        'mdxFlowExpressionMarker',\n        'mdxFlowExpressionChunk',\n        acorn,\n        acornOptions,\n        addResult,\n        spread,\n        allowEmpty\n      )(code)\n    }\n\n    /** @type {State} */\n    function after(code) {\n      return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n    }\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeTextExpression(effects, ok) {\n    const self = this\n    return start\n\n    /** @type {State} */\n    function start(code) {\n      return factoryMdxExpression.call(\n        self,\n        effects,\n        ok,\n        'mdxTextExpression',\n        'mdxTextExpressionMarker',\n        'mdxTextExpressionChunk',\n        acorn,\n        acornOptions,\n        addResult,\n        spread,\n        allowEmpty,\n        true\n      )(code)\n    }\n  }\n}\n","// This module is generated by `build.js`.\nexport const start =\n  /[$A-Z_a-z\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u0870-\\u0887\\u0889-\\u088E\\u08A0-\\u08C9\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C5D\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D04-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u1711\\u171F-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1878\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4C\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309B-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u31A0-\\u31BF\\u31F0-\\u31FF\\u3400-\\u4DBF\\u4E00-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7CA\\uA7D0\\uA7D1\\uA7D3\\uA7D5-\\uA7D9\\uA7F2-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB69\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/\nexport const cont =\n  /[\\d\\u00B7\\u0300-\\u036F\\u0387\\u0483-\\u0487\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u0669\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u06F0-\\u06F9\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07C0-\\u07C9\\u07EB-\\u07F3\\u07FD\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u0898-\\u089F\\u08CA-\\u08E1\\u08E3-\\u0903\\u093A-\\u093C\\u093E-\\u094F\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096F\\u0981-\\u0983\\u09BC\\u09BE-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CD\\u09D7\\u09E2\\u09E3\\u09E6-\\u09EF\\u09FE\\u0A01-\\u0A03\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A66-\\u0A71\\u0A75\\u0A81-\\u0A83\\u0ABC\\u0ABE-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AE2\\u0AE3\\u0AE6-\\u0AEF\\u0AFA-\\u0AFF\\u0B01-\\u0B03\\u0B3C\\u0B3E-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B55-\\u0B57\\u0B62\\u0B63\\u0B66-\\u0B6F\\u0B82\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C04\\u0C3C\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C66-\\u0C6F\\u0C81-\\u0C83\\u0CBC\\u0CBE-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CE2\\u0CE3\\u0CE6-\\u0CEF\\u0CF3\\u0D00-\\u0D03\\u0D3B\\u0D3C\\u0D3E-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0D62\\u0D63\\u0D66-\\u0D6F\\u0D81-\\u0D83\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0E50-\\u0E59\\u0EB1\\u0EB4-\\u0EBC\\u0EC8-\\u0ECE\\u0ED0-\\u0ED9\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E\\u0F3F\\u0F71-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102B-\\u103E\\u1040-\\u1049\\u1056-\\u1059\\u105E-\\u1060\\u1062-\\u1064\\u1067-\\u106D\\u1071-\\u1074\\u1082-\\u108D\\u108F-\\u109D\\u135D-\\u135F\\u1369-\\u1371\\u1712-\\u1715\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4-\\u17D3\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u180F-\\u1819\\u18A9\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u194F\\u19D0-\\u19DA\\u1A17-\\u1A1B\\u1A55-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AB0-\\u1ABD\\u1ABF-\\u1ACE\\u1B00-\\u1B04\\u1B34-\\u1B44\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1B82\\u1BA1-\\u1BAD\\u1BB0-\\u1BB9\\u1BE6-\\u1BF3\\u1C24-\\u1C37\\u1C40-\\u1C49\\u1C50-\\u1C59\\u1CD0-\\u1CD2\\u1CD4-\\u1CE8\\u1CED\\u1CF4\\u1CF7-\\u1CF9\\u1DC0-\\u1DFF\\u200C\\u200D\\u203F\\u2040\\u2054\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302F\\u3099\\u309A\\uA620-\\uA629\\uA66F\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA823-\\uA827\\uA82C\\uA880\\uA881\\uA8B4-\\uA8C5\\uA8D0-\\uA8D9\\uA8E0-\\uA8F1\\uA8FF-\\uA909\\uA926-\\uA92D\\uA947-\\uA953\\uA980-\\uA983\\uA9B3-\\uA9C0\\uA9D0-\\uA9D9\\uA9E5\\uA9F0-\\uA9F9\\uAA29-\\uAA36\\uAA43\\uAA4C\\uAA4D\\uAA50-\\uAA59\\uAA7B-\\uAA7D\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEB-\\uAAEF\\uAAF5\\uAAF6\\uABE3-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFF10-\\uFF19\\uFF3F]/\n","import {start as startRe, cont as contRe} from './regex.js'\n\n/**\n * Checks if the given character code can start an identifier.\n *\n * @param {number} code\n *   Character code to check.\n * @returns {boolean}\n *   Whether `code` can start an identifier.\n */\n// To do: support astrals.\nexport function start(code) {\n  return startRe.test(String.fromCharCode(code))\n}\n\n/**\n * Checks if the given character code can continue an identifier.\n *\n * @param {number} code\n *   Character code to check.\n * @returns {boolean}\n *   Whether `code` can continue an identifier.\n */\n// To do: support astrals.\nexport function cont(code) {\n  const character = String.fromCharCode(code)\n  return startRe.test(character) || contRe.test(character)\n}\n\n/**\n * Checks if the given value is a valid identifier name.\n *\n * @param {string} name\n *   Identifier to check.\n * @returns {boolean}\n *   Whether `name` can be an identifier.\n */\nexport function name(name) {\n  let index = -1\n\n  while (++index < name.length) {\n    if (!(index ? cont : start)(name.charCodeAt(index))) return false\n  }\n\n  // `false` if `name` is empty.\n  return index > 0\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Position | PositionLike | Point | PointLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason` at `place` from `origin`.\n   *\n   * When an error is passed in as `reason`, the `stack` is copied.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   *\n   *   > 👉 **Note**: you should use markdown.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // To do: next major: expose `undefined` everywhere instead of `null`.\n  constructor(reason, place, origin) {\n    /** @type {[string | null, string | null]} */\n    const parts = [null, null]\n    /** @type {Position} */\n    let position = {\n      // @ts-expect-error: we always follows the structure of `position`.\n      start: {line: null, column: null},\n      // @ts-expect-error: \"\n      end: {line: null, column: null}\n    }\n\n    super()\n\n    if (typeof place === 'string') {\n      origin = place\n      place = undefined\n    }\n\n    if (typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        parts[1] = origin\n      } else {\n        parts[0] = origin.slice(0, index)\n        parts[1] = origin.slice(index + 1)\n      }\n    }\n\n    if (place) {\n      // Node.\n      if ('type' in place || 'position' in place) {\n        if (place.position) {\n          // To do: next major: deep clone.\n          // @ts-expect-error: looks like a position.\n          position = place.position\n        }\n      }\n      // Position.\n      else if ('start' in place || 'end' in place) {\n        // @ts-expect-error: looks like a position.\n        // To do: next major: deep clone.\n        position = place\n      }\n      // Point.\n      else if ('line' in place || 'column' in place) {\n        // To do: next major: deep clone.\n        position.start = place\n      }\n    }\n\n    // Fields from `Error`.\n    /**\n     * Serialized positional info of error.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(place) || '1:1'\n\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = typeof reason === 'object' ? reason.message : reason\n\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack = ''\n\n    if (typeof reason === 'object' && reason.stack) {\n      this.stack = reason.stack\n    }\n\n    /**\n     * Reason for message.\n     *\n     * > 👉 **Note**: you should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * State of problem.\n     *\n     * * `true` — marks associated file as no longer processable (error)\n     * * `false` — necessitates a (potential) change (warning)\n     * * `null | undefined` — for things that might not need changing (info)\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | null}\n     */\n    this.line = position.start.line\n\n    /**\n     * Starting column of error.\n     *\n     * @type {number | null}\n     */\n    this.column = position.start.column\n\n    /**\n     * Full unist position.\n     *\n     * @type {Position | null}\n     */\n    this.position = position\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | null}\n     */\n    this.source = parts[0]\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | null}\n     */\n    this.ruleId = parts[1]\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | null}\n     */\n    this.file\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | null}\n     */\n    this.actual\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | null}\n     */\n    this.expected\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | null}\n     */\n    this.url\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | null}\n     */\n    this.note\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.fatal = null\nVFileMessage.prototype.column = null\nVFileMessage.prototype.line = null\nVFileMessage.prototype.source = null\nVFileMessage.prototype.ruleId = null\nVFileMessage.prototype.position = null\n","/**\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-factory-mdx-expression').Acorn} Acorn\n * @typedef {import('micromark-factory-mdx-expression').AcornOptions} AcornOptions\n */\nimport {start as idStart, cont as idCont} from 'estree-util-is-identifier-name'\nimport {factoryMdxExpression} from 'micromark-factory-mdx-expression'\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace,\n  unicodeWhitespace\n} from 'micromark-util-character'\nimport {VFileMessage} from 'vfile-message'\nconst lazyLineEnd = {\n  tokenize: tokenizeLazyLineEnd,\n  partial: true\n}\n/**\n * @this {TokenizeContext}\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {Acorn|undefined} acorn\n * @param {AcornOptions|undefined} acornOptions\n * @param {boolean|undefined} addResult\n * @param {boolean|undefined} allowLazy\n * @param {string} tagType\n * @param {string} tagMarkerType\n * @param {string} tagClosingMarkerType\n * @param {string} tagSelfClosingMarker\n * @param {string} tagNameType\n * @param {string} tagNamePrimaryType\n * @param {string} tagNameMemberMarkerType\n * @param {string} tagNameMemberType\n * @param {string} tagNamePrefixMarkerType\n * @param {string} tagNameLocalType\n * @param {string} tagExpressionAttributeType\n * @param {string} tagExpressionAttributeMarkerType\n * @param {string} tagExpressionAttributeValueType\n * @param {string} tagAttributeType\n * @param {string} tagAttributeNameType\n * @param {string} tagAttributeNamePrimaryType\n * @param {string} tagAttributeNamePrefixMarkerType\n * @param {string} tagAttributeNameLocalType\n * @param {string} tagAttributeInitializerMarkerType\n * @param {string} tagAttributeValueLiteralType\n * @param {string} tagAttributeValueLiteralMarkerType\n * @param {string} tagAttributeValueLiteralValueType\n * @param {string} tagAttributeValueExpressionType\n * @param {string} tagAttributeValueExpressionMarkerType\n * @param {string} tagAttributeValueExpressionValueType\n */\n// eslint-disable-next-line max-params\n\nexport function factoryTag(\n  effects,\n  ok,\n  nok,\n  acorn,\n  acornOptions,\n  addResult,\n  allowLazy,\n  tagType,\n  tagMarkerType,\n  tagClosingMarkerType,\n  tagSelfClosingMarker,\n  tagNameType,\n  tagNamePrimaryType,\n  tagNameMemberMarkerType,\n  tagNameMemberType,\n  tagNamePrefixMarkerType,\n  tagNameLocalType,\n  tagExpressionAttributeType,\n  tagExpressionAttributeMarkerType,\n  tagExpressionAttributeValueType,\n  tagAttributeType,\n  tagAttributeNameType,\n  tagAttributeNamePrimaryType,\n  tagAttributeNamePrefixMarkerType,\n  tagAttributeNameLocalType,\n  tagAttributeInitializerMarkerType,\n  tagAttributeValueLiteralType,\n  tagAttributeValueLiteralMarkerType,\n  tagAttributeValueLiteralValueType,\n  tagAttributeValueExpressionType,\n  tagAttributeValueExpressionMarkerType,\n  tagAttributeValueExpressionValueType\n) {\n  const self = this\n  /** @type {State} */\n\n  let returnState\n  /** @type {NonNullable<Code>|undefined} */\n\n  let marker\n  /** @type {Point|undefined} */\n\n  let startPoint\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    startPoint = self.now()\n    effects.enter(tagType)\n    effects.enter(tagMarkerType)\n    effects.consume(code)\n    effects.exit(tagMarkerType)\n    return afterStart\n  }\n  /** @type {State} */\n\n  function afterStart(code) {\n    // Deviate from JSX, which allows arbitrary whitespace.\n    // See: <https://github.com/micromark/micromark-extension-mdx-jsx/issues/7>.\n    if (markdownLineEnding(code) || markdownSpace(code)) {\n      return nok(code)\n    } // Any other ES whitespace does not get this treatment.\n\n    returnState = beforeName\n    return optionalEsWhitespace(code)\n  } // Right after `<`, before an optional name.\n\n  /** @type {State} */\n\n  function beforeName(code) {\n    // Closing tag.\n    if (code === 47) {\n      effects.enter(tagClosingMarkerType)\n      effects.consume(code)\n      effects.exit(tagClosingMarkerType)\n      returnState = beforeClosingTagName\n      return optionalEsWhitespace\n    } // Fragment opening tag.\n\n    if (code === 62) {\n      return tagEnd(code)\n    } // Start of a name.\n\n    if (code !== null && idStart(code)) {\n      effects.enter(tagNameType)\n      effects.enter(tagNamePrimaryType)\n      effects.consume(code)\n      return primaryName\n    }\n\n    crash(\n      code,\n      'before name',\n      'a character that can start a name, such as a letter, `$`, or `_`' +\n        (code === 33\n          ? ' (note: to create a comment in MDX, use `{/* text */}`)'\n          : '')\n    )\n  } // At the start of a closing tag, right after `</`.\n\n  /** @type {State} */\n\n  function beforeClosingTagName(code) {\n    // Fragment closing tag.\n    if (code === 62) {\n      return tagEnd(code)\n    } // Start of a closing tag name.\n\n    if (code !== null && idStart(code)) {\n      effects.enter(tagNameType)\n      effects.enter(tagNamePrimaryType)\n      effects.consume(code)\n      return primaryName\n    }\n\n    crash(\n      code,\n      'before name',\n      'a character that can start a name, such as a letter, `$`, or `_`' +\n        (code === 42 || code === 47\n          ? ' (note: JS comments in JSX tags are not supported in MDX)'\n          : '')\n    )\n  } // Inside the primary name.\n\n  /** @type {State} */\n\n  function primaryName(code) {\n    // Continuation of name: remain.\n    if (code === 45 || (code !== null && idCont(code))) {\n      effects.consume(code)\n      return primaryName\n    } // End of name.\n\n    if (\n      code === 46 ||\n      code === 47 ||\n      code === 58 ||\n      code === 62 ||\n      code === 123 ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code)\n    ) {\n      effects.exit(tagNamePrimaryType)\n      returnState = afterPrimaryName\n      return optionalEsWhitespace(code)\n    }\n\n    crash(\n      code,\n      'in name',\n      'a name character such as letters, digits, `$`, or `_`; whitespace before attributes; or the end of the tag' +\n        (code === 64\n          ? ' (note: to create a link in MDX, use `[text](url)`)'\n          : '')\n    )\n  } // After a name.\n\n  /** @type {State} */\n\n  function afterPrimaryName(code) {\n    // Start of a member name.\n    if (code === 46) {\n      effects.enter(tagNameMemberMarkerType)\n      effects.consume(code)\n      effects.exit(tagNameMemberMarkerType)\n      returnState = beforeMemberName\n      return optionalEsWhitespace\n    } // Start of a local name.\n\n    if (code === 58) {\n      effects.enter(tagNamePrefixMarkerType)\n      effects.consume(code)\n      effects.exit(tagNamePrefixMarkerType)\n      returnState = beforeLocalName\n      return optionalEsWhitespace\n    } // End of name.\n\n    if (\n      code === 47 ||\n      code === 62 ||\n      code === 123 ||\n      (code !== null && idStart(code))\n    ) {\n      effects.exit(tagNameType)\n      return beforeAttribute(code)\n    }\n\n    crash(\n      code,\n      'after name',\n      'a character that can start an attribute name, such as a letter, `$`, or `_`; whitespace before attributes; or the end of the tag'\n    )\n  } // We’ve seen a `.` and are expecting a member name.\n\n  /** @type {State} */\n\n  function beforeMemberName(code) {\n    // Start of a member name.\n    if (code !== null && idStart(code)) {\n      effects.enter(tagNameMemberType)\n      effects.consume(code)\n      return memberName\n    }\n\n    crash(\n      code,\n      'before member name',\n      'a character that can start an attribute name, such as a letter, `$`, or `_`; whitespace before attributes; or the end of the tag'\n    )\n  } // Inside the member name.\n\n  /** @type {State} */\n\n  function memberName(code) {\n    // Continuation of member name: stay in state\n    if (code === 45 || (code !== null && idCont(code))) {\n      effects.consume(code)\n      return memberName\n    } // End of member name (note that namespaces and members can’t be combined).\n\n    if (\n      code === 46 ||\n      code === 47 ||\n      code === 62 ||\n      code === 123 ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code)\n    ) {\n      effects.exit(tagNameMemberType)\n      returnState = afterMemberName\n      return optionalEsWhitespace(code)\n    }\n\n    crash(\n      code,\n      'in member name',\n      'a name character such as letters, digits, `$`, or `_`; whitespace before attributes; or the end of the tag' +\n        (code === 64\n          ? ' (note: to create a link in MDX, use `[text](url)`)'\n          : '')\n    )\n  } // After a member name: this is the same as `afterPrimaryName` but we don’t\n  // expect colons.\n\n  /** @type {State} */\n\n  function afterMemberName(code) {\n    // Start another member name.\n    if (code === 46) {\n      effects.enter(tagNameMemberMarkerType)\n      effects.consume(code)\n      effects.exit(tagNameMemberMarkerType)\n      returnState = beforeMemberName\n      return optionalEsWhitespace\n    } // End of name.\n\n    if (\n      code === 47 ||\n      code === 62 ||\n      code === 123 ||\n      (code !== null && idStart(code))\n    ) {\n      effects.exit(tagNameType)\n      return beforeAttribute(code)\n    }\n\n    crash(\n      code,\n      'after member name',\n      'a character that can start an attribute name, such as a letter, `$`, or `_`; whitespace before attributes; or the end of the tag'\n    )\n  } // We’ve seen a `:`, and are expecting a local name.\n\n  /** @type {State} */\n\n  function beforeLocalName(code) {\n    // Start of a local name.\n    if (code !== null && idStart(code)) {\n      effects.enter(tagNameLocalType)\n      effects.consume(code)\n      return localName\n    }\n\n    crash(\n      code,\n      'before local name',\n      'a character that can start a name, such as a letter, `$`, or `_`' +\n        (code === 43 || (code !== null && code > 46 && code < 58)\n          ? /* `/` - `9` */\n            ' (note: to create a link in MDX, use `[text](url)`)'\n          : '')\n    )\n  } // Inside the local name.\n\n  /** @type {State} */\n\n  function localName(code) {\n    // Continuation of local name: stay in state\n    if (code === 45 || (code !== null && idCont(code))) {\n      effects.consume(code)\n      return localName\n    } // End of local name (note that we don’t expect another colon, or a member).\n\n    if (\n      code === 47 ||\n      code === 62 ||\n      code === 123 ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code)\n    ) {\n      effects.exit(tagNameLocalType)\n      returnState = afterLocalName\n      return optionalEsWhitespace(code)\n    }\n\n    crash(\n      code,\n      'in local name',\n      'a name character such as letters, digits, `$`, or `_`; whitespace before attributes; or the end of the tag'\n    )\n  } // After a local name: this is the same as `afterPrimaryName` but we don’t\n  // expect colons or periods.\n\n  /** @type {State} */\n\n  function afterLocalName(code) {\n    // End of name.\n    if (\n      code === 47 ||\n      code === 62 ||\n      code === 123 ||\n      (code !== null && idStart(code))\n    ) {\n      effects.exit(tagNameType)\n      return beforeAttribute(code)\n    }\n\n    crash(\n      code,\n      'after local name',\n      'a character that can start an attribute name, such as a letter, `$`, or `_`; whitespace before attributes; or the end of the tag'\n    )\n  }\n  /** @type {State} */\n\n  function beforeAttribute(code) {\n    // Mark as self-closing.\n    if (code === 47) {\n      effects.enter(tagSelfClosingMarker)\n      effects.consume(code)\n      effects.exit(tagSelfClosingMarker)\n      returnState = selfClosing\n      return optionalEsWhitespace\n    } // End of tag.\n\n    if (code === 62) {\n      return tagEnd(code)\n    } // Attribute expression.\n\n    if (code === 123) {\n      return factoryMdxExpression.call(\n        self,\n        effects,\n        afterAttributeExpression,\n        tagExpressionAttributeType,\n        tagExpressionAttributeMarkerType,\n        tagExpressionAttributeValueType,\n        acorn,\n        acornOptions,\n        addResult,\n        true,\n        false,\n        allowLazy,\n        startPoint.column\n      )(code)\n    } // Start of an attribute name.\n\n    if (code !== null && idStart(code)) {\n      effects.enter(tagAttributeType)\n      effects.enter(tagAttributeNameType)\n      effects.enter(tagAttributeNamePrimaryType)\n      effects.consume(code)\n      return attributePrimaryName\n    }\n\n    crash(\n      code,\n      'before attribute name',\n      'a character that can start an attribute name, such as a letter, `$`, or `_`; whitespace before attributes; or the end of the tag'\n    )\n  } // At the start of an attribute expression.\n\n  /** @type {State} */\n\n  function afterAttributeExpression(code) {\n    returnState = beforeAttribute\n    return optionalEsWhitespace(code)\n  } // In the attribute name.\n\n  /** @type {State} */\n\n  function attributePrimaryName(code) {\n    // Continuation of the attribute name.\n    if (code === 45 || (code !== null && idCont(code))) {\n      effects.consume(code)\n      return attributePrimaryName\n    } // End of attribute name or tag.\n\n    if (\n      code === 47 ||\n      code === 58 ||\n      code === 61 ||\n      code === 62 ||\n      code === 123 ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code)\n    ) {\n      effects.exit(tagAttributeNamePrimaryType)\n      returnState = afterAttributePrimaryName\n      return optionalEsWhitespace(code)\n    }\n\n    crash(\n      code,\n      'in attribute name',\n      'an attribute name character such as letters, digits, `$`, or `_`; `=` to initialize a value; whitespace before attributes; or the end of the tag'\n    )\n  } // After an attribute name, probably finding an equals.\n\n  /** @type {State} */\n\n  function afterAttributePrimaryName(code) {\n    // Start of a local name.\n    if (code === 58) {\n      effects.enter(tagAttributeNamePrefixMarkerType)\n      effects.consume(code)\n      effects.exit(tagAttributeNamePrefixMarkerType)\n      returnState = beforeAttributeLocalName\n      return optionalEsWhitespace\n    } // Start of an attribute value.\n\n    if (code === 61) {\n      effects.exit(tagAttributeNameType)\n      effects.enter(tagAttributeInitializerMarkerType)\n      effects.consume(code)\n      effects.exit(tagAttributeInitializerMarkerType)\n      returnState = beforeAttributeValue\n      return optionalEsWhitespace\n    } // End of tag / new attribute.\n\n    if (\n      code === 47 ||\n      code === 62 ||\n      code === 123 ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code) ||\n      (code !== null && idStart(code))\n    ) {\n      effects.exit(tagAttributeNameType)\n      effects.exit(tagAttributeType)\n      returnState = beforeAttribute\n      return optionalEsWhitespace(code)\n    }\n\n    crash(\n      code,\n      'after attribute name',\n      'a character that can start an attribute name, such as a letter, `$`, or `_`; `=` to initialize a value; or the end of the tag'\n    )\n  } // We’ve seen a `:`, and are expecting a local name.\n\n  /** @type {State} */\n\n  function beforeAttributeLocalName(code) {\n    // Start of a local name.\n    if (code !== null && idStart(code)) {\n      effects.enter(tagAttributeNameLocalType)\n      effects.consume(code)\n      return attributeLocalName\n    }\n\n    crash(\n      code,\n      'before local attribute name',\n      'a character that can start an attribute name, such as a letter, `$`, or `_`; `=` to initialize a value; or the end of the tag'\n    )\n  } // In the local attribute name.\n\n  /** @type {State} */\n\n  function attributeLocalName(code) {\n    // Continuation of the local attribute name.\n    if (code === 45 || (code !== null && idCont(code))) {\n      effects.consume(code)\n      return attributeLocalName\n    } // End of tag / attribute name.\n\n    if (\n      code === 47 ||\n      code === 61 ||\n      code === 62 ||\n      code === 123 ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code)\n    ) {\n      effects.exit(tagAttributeNameLocalType)\n      effects.exit(tagAttributeNameType)\n      returnState = afterAttributeLocalName\n      return optionalEsWhitespace(code)\n    }\n\n    crash(\n      code,\n      'in local attribute name',\n      'an attribute name character such as letters, digits, `$`, or `_`; `=` to initialize a value; whitespace before attributes; or the end of the tag'\n    )\n  } // After a local attribute name, expecting an equals.\n\n  /** @type {State} */\n\n  function afterAttributeLocalName(code) {\n    // Start of an attribute value.\n    if (code === 61) {\n      effects.enter(tagAttributeInitializerMarkerType)\n      effects.consume(code)\n      effects.exit(tagAttributeInitializerMarkerType)\n      returnState = beforeAttributeValue\n      return optionalEsWhitespace\n    } // End of tag / new attribute.\n\n    if (\n      code === 47 ||\n      code === 62 ||\n      code === 123 ||\n      (code !== null && idStart(code))\n    ) {\n      effects.exit(tagAttributeType)\n      return beforeAttribute(code)\n    }\n\n    crash(\n      code,\n      'after local attribute name',\n      'a character that can start an attribute name, such as a letter, `$`, or `_`; `=` to initialize a value; or the end of the tag'\n    )\n  } // After an attribute value initializer, expecting quotes and such.\n\n  /** @type {State} */\n\n  function beforeAttributeValue(code) {\n    // Start of double- or single quoted value.\n    if (code === 34 || code === 39) {\n      effects.enter(tagAttributeValueLiteralType)\n      effects.enter(tagAttributeValueLiteralMarkerType)\n      effects.consume(code)\n      effects.exit(tagAttributeValueLiteralMarkerType)\n      marker = code\n      return attributeValueQuotedStart\n    } // Start of an assignment expression.\n\n    if (code === 123) {\n      return factoryMdxExpression.call(\n        self,\n        effects,\n        afterAttributeValueExpression,\n        tagAttributeValueExpressionType,\n        tagAttributeValueExpressionMarkerType,\n        tagAttributeValueExpressionValueType,\n        acorn,\n        acornOptions,\n        addResult,\n        false,\n        false,\n        allowLazy,\n        startPoint.column\n      )(code)\n    }\n\n    crash(\n      code,\n      'before attribute value',\n      'a character that can start an attribute value, such as `\"`, `\\'`, or `{`' +\n        (code === 60\n          ? ' (note: to use an element or fragment as a prop value in MDX, use `{<element />}`)'\n          : '')\n    )\n  }\n  /** @type {State} */\n\n  function afterAttributeValueExpression(code) {\n    effects.exit(tagAttributeType)\n    returnState = beforeAttribute\n    return optionalEsWhitespace(code)\n  } // At the start of a quoted attribute value.\n\n  /** @type {State} */\n\n  function attributeValueQuotedStart(code) {\n    if (code === null) {\n      crash(\n        code,\n        'in attribute value',\n        'a corresponding closing quote `' + String.fromCharCode(marker) + '`'\n      )\n    }\n\n    if (code === marker) {\n      effects.enter(tagAttributeValueLiteralMarkerType)\n      effects.consume(code)\n      effects.exit(tagAttributeValueLiteralMarkerType)\n      effects.exit(tagAttributeValueLiteralType)\n      effects.exit(tagAttributeType)\n      marker = undefined\n      returnState = beforeAttribute\n      return optionalEsWhitespace\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = attributeValueQuotedStart\n      return optionalEsWhitespace(code)\n    }\n\n    effects.enter(tagAttributeValueLiteralValueType)\n    return attributeValueQuoted(code)\n  } // In a quoted attribute value.\n\n  /** @type {State} */\n\n  function attributeValueQuoted(code) {\n    if (code === null || code === marker || markdownLineEnding(code)) {\n      effects.exit(tagAttributeValueLiteralValueType)\n      return attributeValueQuotedStart(code)\n    } // Continuation.\n\n    effects.consume(code)\n    return attributeValueQuoted\n  } // Right after the slash on a tag, e.g., `<asd /`.\n\n  /** @type {State} */\n\n  function selfClosing(code) {\n    // End of tag.\n    if (code === 62) {\n      return tagEnd(code)\n    }\n\n    crash(\n      code,\n      'after self-closing slash',\n      '`>` to end the tag' +\n        (code === 42 || code === 47\n          ? ' (note: JS comments in JSX tags are not supported in MDX)'\n          : '')\n    )\n  } // At a `>`.\n\n  /** @type {State} */\n\n  function tagEnd(code) {\n    effects.enter(tagMarkerType)\n    effects.consume(code)\n    effects.exit(tagMarkerType)\n    effects.exit(tagType)\n    return ok\n  } // Optionally start whitespace.\n\n  /** @type {State} */\n\n  function optionalEsWhitespace(code) {\n    if (markdownLineEnding(code)) {\n      if (allowLazy) {\n        effects.enter('lineEnding')\n        effects.consume(code)\n        effects.exit('lineEnding')\n        return factorySpace(effects, optionalEsWhitespace, 'linePrefix', 4)\n      }\n\n      return effects.attempt(\n        lazyLineEnd,\n        factorySpace(effects, optionalEsWhitespace, 'linePrefix', 4),\n        crashEol\n      )(code)\n    }\n\n    if (markdownSpace(code) || unicodeWhitespace(code)) {\n      effects.enter('esWhitespace')\n      return optionalEsWhitespaceContinue(code)\n    }\n\n    return returnState(code)\n  } // Continue optional whitespace.\n\n  /** @type {State} */\n\n  function optionalEsWhitespaceContinue(code) {\n    if (\n      markdownLineEnding(code) ||\n      !(markdownSpace(code) || unicodeWhitespace(code))\n    ) {\n      effects.exit('esWhitespace')\n      return optionalEsWhitespace(code)\n    }\n\n    effects.consume(code)\n    return optionalEsWhitespaceContinue\n  }\n  /** @type {State} */\n\n  function crashEol() {\n    throw new VFileMessage(\n      'Unexpected lazy line in container, expected line to be prefixed with `>` when in a block quote, whitespace when in a list, etc',\n      self.now(),\n      'micromark-extension-mdx-jsx:unexpected-eof'\n    )\n  } // Crash at a nonconforming character.\n\n  /**\n   * @param {Code} code\n   * @param {string} at\n   * @param {string} expect\n   */\n\n  function crash(code, at, expect) {\n    throw new VFileMessage(\n      'Unexpected ' +\n        (code === null\n          ? 'end of file'\n          : 'character `' +\n            (code === 96 ? '` ` `' : String.fromCharCode(code)) +\n            '` (' +\n            serializeCharCode(code) +\n            ')') +\n        ' ' +\n        at +\n        ', expected ' +\n        expect,\n      self.now(),\n      'micromark-extension-mdx-jsx:unexpected-' +\n        (code === null ? 'eof' : 'character')\n    )\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLazyLineEnd(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return lineStart\n  }\n  /** @type {State} */\n\n  function lineStart(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n  }\n}\n/**\n * @param {NonNullable<Code>} code\n * @returns {string}\n */\n\nfunction serializeCharCode(code) {\n  return 'U+' + code.toString(16).toUpperCase().padStart(4, '0')\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-factory-mdx-expression').Acorn} Acorn\n * @typedef {import('micromark-factory-mdx-expression').AcornOptions} AcornOptions\n */\nimport {factoryTag} from './factory-tag.js'\n/**\n * @param {Acorn|undefined} acorn\n * @param {AcornOptions|undefined} acornOptions\n * @param {boolean|undefined} addResult\n * @returns {Construct}\n */\n\nexport function jsxText(acorn, acornOptions, addResult) {\n  return {\n    tokenize: tokenizeJsxText\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeJsxText(effects, ok, nok) {\n    return factoryTag.call(\n      this,\n      effects,\n      ok,\n      nok,\n      acorn,\n      acornOptions,\n      addResult,\n      true,\n      'mdxJsxTextTag',\n      'mdxJsxTextTagMarker',\n      'mdxJsxTextTagClosingMarker',\n      'mdxJsxTextTagSelfClosingMarker',\n      'mdxJsxTextTagName',\n      'mdxJsxTextTagNamePrimary',\n      'mdxJsxTextTagNameMemberMarker',\n      'mdxJsxTextTagNameMember',\n      'mdxJsxTextTagNamePrefixMarker',\n      'mdxJsxTextTagNameLocal',\n      'mdxJsxTextTagExpressionAttribute',\n      'mdxJsxTextTagExpressionAttributeMarker',\n      'mdxJsxTextTagExpressionAttributeValue',\n      'mdxJsxTextTagAttribute',\n      'mdxJsxTextTagAttributeName',\n      'mdxJsxTextTagAttributeNamePrimary',\n      'mdxJsxTextTagAttributeNamePrefixMarker',\n      'mdxJsxTextTagAttributeNameLocal',\n      'mdxJsxTextTagAttributeInitializerMarker',\n      'mdxJsxTextTagAttributeValueLiteral',\n      'mdxJsxTextTagAttributeValueLiteralMarker',\n      'mdxJsxTextTagAttributeValueLiteralValue',\n      'mdxJsxTextTagAttributeValueExpression',\n      'mdxJsxTextTagAttributeValueExpressionMarker',\n      'mdxJsxTextTagAttributeValueExpressionValue'\n    )\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-factory-mdx-expression').Acorn} Acorn\n * @typedef {import('micromark-factory-mdx-expression').AcornOptions} AcornOptions\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {factoryTag} from './factory-tag.js'\n/**\n * @param {Acorn|undefined} acorn\n * @param {AcornOptions|undefined} acornOptions\n * @param {boolean|undefined} addResult\n * @returns {Construct}\n */\n\nexport function jsxFlow(acorn, acornOptions, addResult) {\n  return {\n    tokenize: tokenizeJsxFlow,\n    concrete: true\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeJsxFlow(effects, ok, nok) {\n    const self = this\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      return factoryTag.call(\n        self,\n        effects,\n        factorySpace(effects, after, 'whitespace'),\n        nok,\n        acorn,\n        acornOptions,\n        addResult,\n        false,\n        'mdxJsxFlowTag',\n        'mdxJsxFlowTagMarker',\n        'mdxJsxFlowTagClosingMarker',\n        'mdxJsxFlowTagSelfClosingMarker',\n        'mdxJsxFlowTagName',\n        'mdxJsxFlowTagNamePrimary',\n        'mdxJsxFlowTagNameMemberMarker',\n        'mdxJsxFlowTagNameMember',\n        'mdxJsxFlowTagNamePrefixMarker',\n        'mdxJsxFlowTagNameLocal',\n        'mdxJsxFlowTagExpressionAttribute',\n        'mdxJsxFlowTagExpressionAttributeMarker',\n        'mdxJsxFlowTagExpressionAttributeValue',\n        'mdxJsxFlowTagAttribute',\n        'mdxJsxFlowTagAttributeName',\n        'mdxJsxFlowTagAttributeNamePrimary',\n        'mdxJsxFlowTagAttributeNamePrefixMarker',\n        'mdxJsxFlowTagAttributeNameLocal',\n        'mdxJsxFlowTagAttributeInitializerMarker',\n        'mdxJsxFlowTagAttributeValueLiteral',\n        'mdxJsxFlowTagAttributeValueLiteralMarker',\n        'mdxJsxFlowTagAttributeValueLiteralValue',\n        'mdxJsxFlowTagAttributeValueExpression',\n        'mdxJsxFlowTagAttributeValueExpressionMarker',\n        'mdxJsxFlowTagAttributeValueExpressionValue'\n      )(code)\n    }\n    /** @type {State} */\n\n    function after(code) {\n      // Another tag.\n      return code === 60\n        ? start(code)\n        : code === null || markdownLineEnding(code)\n        ? ok(code)\n        : nok(code)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-factory-mdx-expression').Acorn} Acorn\n * @typedef {import('micromark-factory-mdx-expression').AcornOptions} AcornOptions\n */\n\n/**\n * @typedef Options\n * @property {boolean} [addResult=false]\n * @property {Acorn} [acorn]\n * @property {AcornOptions} [acornOptions]\n */\nimport {jsxText} from './jsx-text.js'\nimport {jsxFlow} from './jsx-flow.js'\n/**\n * @param {Options} [options]\n * @returns {Extension}\n */\n\nexport function mdxJsx(options = {}) {\n  const acorn = options.acorn\n  /** @type {AcornOptions|undefined} */\n\n  let acornOptions\n\n  if (acorn) {\n    if (!acorn.parse || !acorn.parseExpressionAt) {\n      throw new Error(\n        'Expected a proper `acorn` instance passed in as `options.acorn`'\n      )\n    }\n\n    acornOptions = Object.assign(\n      {\n        ecmaVersion: 2020,\n        sourceType: 'module'\n      },\n      options.acornOptions,\n      {\n        locations: true\n      }\n    )\n  } else if (options.acornOptions || options.addResult) {\n    throw new Error('Expected an `acorn` instance passed in as `options.acorn`')\n  }\n\n  return {\n    flow: {\n      [60]: jsxFlow(acorn, acornOptions, options.addResult)\n    },\n    text: {\n      [60]: jsxText(acorn, acornOptions, options.addResult)\n    }\n  }\n}\n","/**\n * @type {import('micromark-util-types').Extension}\n */\nexport const mdxMd = {\n  disable: {null: ['autolink', 'codeIndented', 'htmlFlow', 'htmlText']}\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Position | PositionLike | Point | PointLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason` at `place` from `origin`.\n   *\n   * When an error is passed in as `reason`, the `stack` is copied.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   *\n   *   > 👉 **Note**: you should use markdown.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // To do: next major: expose `undefined` everywhere instead of `null`.\n  constructor(reason, place, origin) {\n    /** @type {[string | null, string | null]} */\n    const parts = [null, null]\n    /** @type {Position} */\n    let position = {\n      // @ts-expect-error: we always follows the structure of `position`.\n      start: {line: null, column: null},\n      // @ts-expect-error: \"\n      end: {line: null, column: null}\n    }\n\n    super()\n\n    if (typeof place === 'string') {\n      origin = place\n      place = undefined\n    }\n\n    if (typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        parts[1] = origin\n      } else {\n        parts[0] = origin.slice(0, index)\n        parts[1] = origin.slice(index + 1)\n      }\n    }\n\n    if (place) {\n      // Node.\n      if ('type' in place || 'position' in place) {\n        if (place.position) {\n          // To do: next major: deep clone.\n          // @ts-expect-error: looks like a position.\n          position = place.position\n        }\n      }\n      // Position.\n      else if ('start' in place || 'end' in place) {\n        // @ts-expect-error: looks like a position.\n        // To do: next major: deep clone.\n        position = place\n      }\n      // Point.\n      else if ('line' in place || 'column' in place) {\n        // To do: next major: deep clone.\n        position.start = place\n      }\n    }\n\n    // Fields from `Error`.\n    /**\n     * Serialized positional info of error.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(place) || '1:1'\n\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = typeof reason === 'object' ? reason.message : reason\n\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack = ''\n\n    if (typeof reason === 'object' && reason.stack) {\n      this.stack = reason.stack\n    }\n\n    /**\n     * Reason for message.\n     *\n     * > 👉 **Note**: you should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * State of problem.\n     *\n     * * `true` — marks associated file as no longer processable (error)\n     * * `false` — necessitates a (potential) change (warning)\n     * * `null | undefined` — for things that might not need changing (info)\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | null}\n     */\n    this.line = position.start.line\n\n    /**\n     * Starting column of error.\n     *\n     * @type {number | null}\n     */\n    this.column = position.start.column\n\n    /**\n     * Full unist position.\n     *\n     * @type {Position | null}\n     */\n    this.position = position\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | null}\n     */\n    this.source = parts[0]\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | null}\n     */\n    this.ruleId = parts[1]\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | null}\n     */\n    this.file\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | null}\n     */\n    this.actual\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | null}\n     */\n    this.expected\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | null}\n     */\n    this.url\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | null}\n     */\n    this.note\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.fatal = null\nVFileMessage.prototype.column = null\nVFileMessage.prototype.line = null\nVFileMessage.prototype.source = null\nVFileMessage.prototype.ruleId = null\nVFileMessage.prototype.position = null\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n *\n * @typedef {import('micromark-util-events-to-acorn').Acorn} Acorn\n * @typedef {import('micromark-util-events-to-acorn').AcornOptions} AcornOptions\n */\n\n/**\n * @typedef Options\n * @property {boolean} [addResult=false]\n * @property {Acorn} acorn\n * @property {AcornOptions} [acornOptions]\n */\nimport {blankLine} from 'micromark-core-commonmark'\nimport {markdownLineEnding, unicodeWhitespace} from 'micromark-util-character'\nimport {eventsToAcorn} from 'micromark-util-events-to-acorn'\nimport {positionFromEstree} from 'unist-util-position-from-estree'\nimport {VFileMessage} from 'vfile-message'\nconst nextBlankConstruct = {\n  tokenize: tokenizeNextBlank,\n  partial: true\n}\nconst allowedAcornTypes = new Set([\n  'ExportAllDeclaration',\n  'ExportDefaultDeclaration',\n  'ExportNamedDeclaration',\n  'ImportDeclaration'\n])\n/**\n * @param {Options} options\n * @returs {Extension}\n */\n\nexport function mdxjsEsm(options) {\n  const exportImportConstruct = {\n    tokenize: tokenizeExportImport,\n    concrete: true\n  }\n\n  if (!options || !options.acorn || !options.acorn.parse) {\n    throw new Error('Expected an `acorn` instance passed in as `options.acorn`')\n  }\n\n  const acorn = options.acorn\n  const acornOptions = Object.assign(\n    {\n      ecmaVersion: 2020,\n      sourceType: 'module'\n    },\n    options.acornOptions\n  )\n  return {\n    flow: {\n      [101]: exportImportConstruct,\n      [105]: exportImportConstruct\n    }\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeExportImport(effects, ok, nok) {\n    const self = this\n    /** @type {string[]} */\n\n    const definedModuleSpecifiers = // @ts-expect-error: hush\n      self.parser.definedModuleSpecifiers || // @ts-expect-error: hush\n      (self.parser.definedModuleSpecifiers = [])\n    const eventStart = this.events.length + 1 // Add the main `mdxjsEsm` token\n\n    let index = 0\n    /** @type {string} */\n\n    let buffer\n    return self.interrupt ? nok : start\n    /** @type {State} */\n\n    function start(code) {\n      // Do not support indent (the easiest check for containers).\n      if (self.now().column > 1) return nok(code)\n      buffer = code === 101 ? 'export' : 'import'\n      effects.enter('mdxjsEsm')\n      effects.enter('mdxjsEsmData')\n      return keyword(code)\n    }\n    /** @type {State} */\n\n    function keyword(code) {\n      if (code === buffer.charCodeAt(index++)) {\n        effects.consume(code)\n        return index === buffer.length ? after : keyword\n      }\n\n      return nok(code)\n    }\n    /** @type {State} */\n\n    function after(code) {\n      if (unicodeWhitespace(code)) {\n        effects.consume(code)\n        return rest\n      }\n\n      return nok(code)\n    }\n    /** @type {State} */\n\n    function rest(code) {\n      if (code === null) {\n        return atEndOfData(code)\n      }\n\n      if (markdownLineEnding(code)) {\n        return effects.check(nextBlankConstruct, atEndOfData, atEol)(code)\n      }\n\n      effects.consume(code)\n      return rest\n    }\n    /** @type {State} */\n\n    function atEol(code) {\n      effects.exit('mdxjsEsmData')\n      return lineStart(code)\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      if (markdownLineEnding(code)) {\n        effects.enter('lineEnding')\n        effects.consume(code)\n        effects.exit('lineEnding')\n        return lineStart\n      }\n\n      if (code === null) {\n        return atEnd(code)\n      }\n\n      effects.enter('mdxjsEsmData')\n      return rest(code)\n    }\n    /** @type {State} */\n\n    function atEndOfData(code) {\n      effects.exit('mdxjsEsmData')\n      return atEnd(code)\n    }\n    /** @type {State} */\n\n    function atEnd(code) {\n      let index = -1\n      const result = eventsToAcorn(self.events.slice(eventStart), {\n        acorn,\n        acornOptions,\n        prefix:\n          definedModuleSpecifiers.length > 0\n            ? 'var ' + definedModuleSpecifiers.join(',') + '\\n'\n            : ''\n      })\n\n      if (code !== null && result.swallow) {\n        return lineStart(code)\n      }\n\n      if (result.error) {\n        throw new VFileMessage(\n          'Could not parse import/exports with acorn: ' + String(result.error),\n          {\n            // @ts-expect-error: hush\n            line: result.error.loc.line,\n            // @ts-expect-error: hush\n            column: result.error.loc.column + 1,\n            // @ts-expect-error: hush\n            offset: result.error.pos\n          },\n          'micromark-extension-mdxjs-esm:acorn'\n        )\n      }\n\n      // Remove the `VariableDeclaration`\n      if (definedModuleSpecifiers.length > 0) {\n        result.estree.body.shift()\n      }\n\n      while (++index < result.estree.body.length) {\n        const node = result.estree.body[index]\n\n        if (!allowedAcornTypes.has(node.type)) {\n          throw new VFileMessage(\n            'Unexpected `' +\n              node.type +\n              '` in code: only import/exports are supported',\n            positionFromEstree(node),\n            'micromark-extension-mdxjs-esm:non-esm'\n          )\n        } // Otherwise, when we’re not interrupting (hacky, because `interrupt` is\n        // used to parse containers and “sniff” if this is ESM), collect all the\n        // local values that are imported.\n\n        if (node.type === 'ImportDeclaration' && !self.interrupt) {\n          let index = -1\n\n          while (++index < node.specifiers.length) {\n            definedModuleSpecifiers.push(node.specifiers[index].local.name)\n          }\n        }\n      }\n\n      Object.assign(\n        effects.exit('mdxjsEsm'),\n        options.addResult\n          ? {\n              estree: result.estree\n            }\n          : undefined\n      )\n      return ok(code)\n    }\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextBlank(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.exit('mdxjsEsmData')\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n","/**\n * @typedef {import('estree-jsx').Program} Program\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n *\n * @typedef {import('../index.js').MdxFlowExpression} MdxFlowExpression\n * @typedef {import('../index.js').MdxTextExpression} MdxTextExpression\n */\n\n/**\n * Extension for `mdast-util-from-markdown` to enable MDX expressions.\n *\n * When using the syntax extension with `addResult`, nodes will have a\n * `data.estree` field set to an ESTree `Program` node.\n *\n * @type {FromMarkdownExtension}\n */\nexport const mdxExpressionFromMarkdown = {\n  enter: {\n    mdxFlowExpression: enterMdxFlowExpression,\n    mdxTextExpression: enterMdxTextExpression\n  },\n  exit: {\n    mdxFlowExpression: exitMdxExpression,\n    mdxFlowExpressionChunk: exitMdxExpressionData,\n    mdxTextExpression: exitMdxExpression,\n    mdxTextExpressionChunk: exitMdxExpressionData\n  }\n}\n\n/**\n * Extension for `mdast-util-to-markdown` to enable MDX ESM.\n *\n * @type {ToMarkdownExtension}\n */\nexport const mdxExpressionToMarkdown = {\n  handlers: {\n    mdxFlowExpression: handleMdxExpression,\n    mdxTextExpression: handleMdxExpression\n  },\n  unsafe: [\n    {character: '{', inConstruct: ['phrasing']},\n    {atBreak: true, character: '{'}\n  ]\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterMdxFlowExpression(token) {\n  this.enter({type: 'mdxFlowExpression', value: ''}, token)\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterMdxTextExpression(token) {\n  this.enter({type: 'mdxTextExpression', value: ''}, token)\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitMdxExpression(token) {\n  const value = this.resume()\n  /** @type {Program | undefined} */\n  // @ts-expect-error: estree.\n  const estree = token.estree\n  const node = /** @type {MdxFlowExpression | MdxTextExpression} */ (\n    this.exit(token)\n  )\n  node.value = value\n\n  if (estree) {\n    node.data = {estree}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitMdxExpressionData(token) {\n  this.config.enter.data.call(this, token)\n  this.config.exit.data.call(this, token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {MdxFlowExpression | MdxTextExpression} node\n */\nfunction handleMdxExpression(node) {\n  const value = node.value || ''\n  return '{' + value + '}'\n}\n","/**\n * Count how often a character (or substring) is used in a string.\n *\n * @param {string} value\n *   Value to search in.\n * @param {string} character\n *   Character (or substring) to look for.\n * @return {number}\n *   Number of times `character` occurred in `value`.\n */\nexport function ccount(value, character) {\n  const source = String(value)\n\n  if (typeof character !== 'string') {\n    throw new TypeError('Expected character')\n  }\n\n  let count = 0\n  let index = source.indexOf(character)\n\n  while (index !== -1) {\n    count++\n    index = source.indexOf(character, index + character.length)\n  }\n\n  return count\n}\n","/**\n * List of legacy HTML named character references that don’t need a trailing semicolon.\n *\n * @type {Array<string>}\n */\nexport const characterEntitiesLegacy = [\n  'AElig',\n  'AMP',\n  'Aacute',\n  'Acirc',\n  'Agrave',\n  'Aring',\n  'Atilde',\n  'Auml',\n  'COPY',\n  'Ccedil',\n  'ETH',\n  'Eacute',\n  'Ecirc',\n  'Egrave',\n  'Euml',\n  'GT',\n  'Iacute',\n  'Icirc',\n  'Igrave',\n  'Iuml',\n  'LT',\n  'Ntilde',\n  'Oacute',\n  'Ocirc',\n  'Ograve',\n  'Oslash',\n  'Otilde',\n  'Ouml',\n  'QUOT',\n  'REG',\n  'THORN',\n  'Uacute',\n  'Ucirc',\n  'Ugrave',\n  'Uuml',\n  'Yacute',\n  'aacute',\n  'acirc',\n  'acute',\n  'aelig',\n  'agrave',\n  'amp',\n  'aring',\n  'atilde',\n  'auml',\n  'brvbar',\n  'ccedil',\n  'cedil',\n  'cent',\n  'copy',\n  'curren',\n  'deg',\n  'divide',\n  'eacute',\n  'ecirc',\n  'egrave',\n  'eth',\n  'euml',\n  'frac12',\n  'frac14',\n  'frac34',\n  'gt',\n  'iacute',\n  'icirc',\n  'iexcl',\n  'igrave',\n  'iquest',\n  'iuml',\n  'laquo',\n  'lt',\n  'macr',\n  'micro',\n  'middot',\n  'nbsp',\n  'not',\n  'ntilde',\n  'oacute',\n  'ocirc',\n  'ograve',\n  'ordf',\n  'ordm',\n  'oslash',\n  'otilde',\n  'ouml',\n  'para',\n  'plusmn',\n  'pound',\n  'quot',\n  'raquo',\n  'reg',\n  'sect',\n  'shy',\n  'sup1',\n  'sup2',\n  'sup3',\n  'szlig',\n  'thorn',\n  'times',\n  'uacute',\n  'ucirc',\n  'ugrave',\n  'uml',\n  'uuml',\n  'yacute',\n  'yen',\n  'yuml'\n]\n","/**\n * Map of invalid numeric character references to their replacements, according to HTML.\n *\n * @type {Record<number, string>}\n */\nexport const characterReferenceInvalid = {\n  0: '�',\n  128: '€',\n  130: '‚',\n  131: 'ƒ',\n  132: '„',\n  133: '…',\n  134: '†',\n  135: '‡',\n  136: 'ˆ',\n  137: '‰',\n  138: 'Š',\n  139: '‹',\n  140: 'Œ',\n  142: 'Ž',\n  145: '‘',\n  146: '’',\n  147: '“',\n  148: '”',\n  149: '•',\n  150: '–',\n  151: '—',\n  152: '˜',\n  153: '™',\n  154: 'š',\n  155: '›',\n  156: 'œ',\n  158: 'ž',\n  159: 'Ÿ'\n}\n","/**\n * Check if the given character code, or the character code at the first\n * character, is decimal.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is a decimal\n */\nexport function isDecimal(character) {\n  const code =\n    typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return code >= 48 && code <= 57 /* 0-9 */\n}\n","/**\n * Check if the given character code, or the character code at the first\n * character, is hexadecimal.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is hexadecimal\n */\nexport function isHexadecimal(character) {\n  const code =\n    typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return (\n    (code >= 97 /* a */ && code <= 102) /* z */ ||\n    (code >= 65 /* A */ && code <= 70) /* Z */ ||\n    (code >= 48 /* A */ && code <= 57) /* Z */\n  )\n}\n","import {isAlphabetical} from 'is-alphabetical'\nimport {isDecimal} from 'is-decimal'\n\n/**\n * Check if the given character code, or the character code at the first\n * character, is alphanumerical.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is alphanumerical.\n */\nexport function isAlphanumerical(character) {\n  return isAlphabetical(character) || isDecimal(character)\n}\n","/**\n * Check if the given character code, or the character code at the first\n * character, is alphabetical.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is alphabetical.\n */\nexport function isAlphabetical(character) {\n  const code =\n    typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return (\n    (code >= 97 && code <= 122) /* a-z */ ||\n    (code >= 65 && code <= 90) /* A-Z */\n  )\n}\n","/**\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\nimport {characterEntitiesLegacy} from 'character-entities-legacy'\nimport {characterReferenceInvalid} from 'character-reference-invalid'\nimport {isDecimal} from 'is-decimal'\nimport {isHexadecimal} from 'is-hexadecimal'\nimport {isAlphanumerical} from 'is-alphanumerical'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\n\nconst fromCharCode = String.fromCharCode\n\n// Warning messages.\nconst messages = [\n  '',\n  /* 1: Non terminated (named) */\n  'Named character references must be terminated by a semicolon',\n  /* 2: Non terminated (numeric) */\n  'Numeric character references must be terminated by a semicolon',\n  /* 3: Empty (named) */\n  'Named character references cannot be empty',\n  /* 4: Empty (numeric) */\n  'Numeric character references cannot be empty',\n  /* 5: Unknown (named) */\n  'Named character references must be known',\n  /* 6: Disallowed (numeric) */\n  'Numeric character references cannot be disallowed',\n  /* 7: Prohibited (numeric) */\n  'Numeric character references cannot be outside the permissible Unicode range'\n]\n\n/**\n * Parse HTML character references.\n *\n * @param {string} value\n * @param {import('../index.js').Options} [options={}]\n */\nexport function parseEntities(value, options = {}) {\n  const additional =\n    typeof options.additional === 'string'\n      ? options.additional.charCodeAt(0)\n      : options.additional\n  /** @type {Array<string>} */\n  const result = []\n  let index = 0\n  let lines = -1\n  let queue = ''\n  /** @type {Point|undefined} */\n  let point\n  /** @type {Array<number>|undefined} */\n  let indent\n\n  if (options.position) {\n    if ('start' in options.position || 'indent' in options.position) {\n      // @ts-expect-error: points don’t have indent.\n      indent = options.position.indent\n      // @ts-expect-error: points don’t have indent.\n      point = options.position.start\n    } else {\n      point = options.position\n    }\n  }\n\n  let line = (point ? point.line : 0) || 1\n  let column = (point ? point.column : 0) || 1\n\n  // Cache the current point.\n  let previous = now()\n  /** @type {number|undefined} */\n  let character\n\n  // Ensure the algorithm walks over the first character (inclusive).\n  index--\n\n  while (++index <= value.length) {\n    // If the previous character was a newline.\n    if (character === 10 /* `\\n` */) {\n      column = (indent ? indent[lines] : 0) || 1\n    }\n\n    character = value.charCodeAt(index)\n\n    if (character === 38 /* `&` */) {\n      const following = value.charCodeAt(index + 1)\n\n      // The behavior depends on the identity of the next character.\n      if (\n        following === 9 /* `\\t` */ ||\n        following === 10 /* `\\n` */ ||\n        following === 12 /* `\\f` */ ||\n        following === 32 /* ` ` */ ||\n        following === 38 /* `&` */ ||\n        following === 60 /* `<` */ ||\n        Number.isNaN(following) ||\n        (additional && following === additional)\n      ) {\n        // Not a character reference.\n        // No characters are consumed, and nothing is returned.\n        // This is not an error, either.\n        queue += fromCharCode(character)\n        column++\n        continue\n      }\n\n      const start = index + 1\n      let begin = start\n      let end = start\n      /** @type {string} */\n      let type\n\n      if (following === 35 /* `#` */) {\n        // Numerical reference.\n        end = ++begin\n\n        // The behavior further depends on the next character.\n        const following = value.charCodeAt(end)\n\n        if (following === 88 /* `X` */ || following === 120 /* `x` */) {\n          // ASCII hexadecimal digits.\n          type = 'hexadecimal'\n          end = ++begin\n        } else {\n          // ASCII decimal digits.\n          type = 'decimal'\n        }\n      } else {\n        // Named reference.\n        type = 'named'\n      }\n\n      let characterReferenceCharacters = ''\n      let characterReference = ''\n      let characters = ''\n      // Each type of character reference accepts different characters.\n      // This test is used to detect whether a reference has ended (as the semicolon\n      // is not strictly needed).\n      const test =\n        type === 'named'\n          ? isAlphanumerical\n          : type === 'decimal'\n          ? isDecimal\n          : isHexadecimal\n\n      end--\n\n      while (++end <= value.length) {\n        const following = value.charCodeAt(end)\n\n        if (!test(following)) {\n          break\n        }\n\n        characters += fromCharCode(following)\n\n        // Check if we can match a legacy named reference.\n        // If so, we cache that as the last viable named reference.\n        // This ensures we do not need to walk backwards later.\n        if (type === 'named' && characterEntitiesLegacy.includes(characters)) {\n          characterReferenceCharacters = characters\n          // @ts-expect-error: always able to decode.\n          characterReference = decodeNamedCharacterReference(characters)\n        }\n      }\n\n      let terminated = value.charCodeAt(end) === 59 /* `;` */\n\n      if (terminated) {\n        end++\n\n        const namedReference =\n          type === 'named' ? decodeNamedCharacterReference(characters) : false\n\n        if (namedReference) {\n          characterReferenceCharacters = characters\n          characterReference = namedReference\n        }\n      }\n\n      let diff = 1 + end - start\n      let reference = ''\n\n      if (!terminated && options.nonTerminated === false) {\n        // Empty.\n      } else if (!characters) {\n        // An empty (possible) reference is valid, unless it’s numeric (thus an\n        // ampersand followed by an octothorp).\n        if (type !== 'named') {\n          warning(4 /* Empty (numeric) */, diff)\n        }\n      } else if (type === 'named') {\n        // An ampersand followed by anything unknown, and not terminated, is\n        // invalid.\n        if (terminated && !characterReference) {\n          warning(5 /* Unknown (named) */, 1)\n        } else {\n          // If there’s something after an named reference which is not known,\n          // cap the reference.\n          if (characterReferenceCharacters !== characters) {\n            end = begin + characterReferenceCharacters.length\n            diff = 1 + end - begin\n            terminated = false\n          }\n\n          // If the reference is not terminated, warn.\n          if (!terminated) {\n            const reason = characterReferenceCharacters\n              ? 1 /* Non terminated (named) */\n              : 3 /* Empty (named) */\n\n            if (options.attribute) {\n              const following = value.charCodeAt(end)\n\n              if (following === 61 /* `=` */) {\n                warning(reason, diff)\n                characterReference = ''\n              } else if (isAlphanumerical(following)) {\n                characterReference = ''\n              } else {\n                warning(reason, diff)\n              }\n            } else {\n              warning(reason, diff)\n            }\n          }\n        }\n\n        reference = characterReference\n      } else {\n        if (!terminated) {\n          // All nonterminated numeric references are not rendered, and emit a\n          // warning.\n          warning(2 /* Non terminated (numeric) */, diff)\n        }\n\n        // When terminated and numerical, parse as either hexadecimal or\n        // decimal.\n        let referenceCode = Number.parseInt(\n          characters,\n          type === 'hexadecimal' ? 16 : 10\n        )\n\n        // Emit a warning when the parsed number is prohibited, and replace with\n        // replacement character.\n        if (prohibited(referenceCode)) {\n          warning(7 /* Prohibited (numeric) */, diff)\n          reference = fromCharCode(65533 /* `�` */)\n        } else if (referenceCode in characterReferenceInvalid) {\n          // Emit a warning when the parsed number is disallowed, and replace by\n          // an alternative.\n          warning(6 /* Disallowed (numeric) */, diff)\n          reference = characterReferenceInvalid[referenceCode]\n        } else {\n          // Parse the number.\n          let output = ''\n\n          // Emit a warning when the parsed number should not be used.\n          if (disallowed(referenceCode)) {\n            warning(6 /* Disallowed (numeric) */, diff)\n          }\n\n          // Serialize the number.\n          if (referenceCode > 0xffff) {\n            referenceCode -= 0x10000\n            output += fromCharCode((referenceCode >>> (10 & 0x3ff)) | 0xd800)\n            referenceCode = 0xdc00 | (referenceCode & 0x3ff)\n          }\n\n          reference = output + fromCharCode(referenceCode)\n        }\n      }\n\n      // Found it!\n      // First eat the queued characters as normal text, then eat a reference.\n      if (reference) {\n        flush()\n\n        previous = now()\n        index = end - 1\n        column += end - start + 1\n        result.push(reference)\n        const next = now()\n        next.offset++\n\n        if (options.reference) {\n          options.reference.call(\n            options.referenceContext,\n            reference,\n            {start: previous, end: next},\n            value.slice(start - 1, end)\n          )\n        }\n\n        previous = next\n      } else {\n        // If we could not find a reference, queue the checked characters (as\n        // normal characters), and move the pointer to their end.\n        // This is possible because we can be certain neither newlines nor\n        // ampersands are included.\n        characters = value.slice(start - 1, end)\n        queue += characters\n        column += characters.length\n        index = end - 1\n      }\n    } else {\n      // Handle anything other than an ampersand, including newlines and EOF.\n      if (character === 10 /* `\\n` */) {\n        line++\n        lines++\n        column = 0\n      }\n\n      if (Number.isNaN(character)) {\n        flush()\n      } else {\n        queue += fromCharCode(character)\n        column++\n      }\n    }\n  }\n\n  // Return the reduced nodes.\n  return result.join('')\n\n  // Get current position.\n  function now() {\n    return {\n      line,\n      column,\n      offset: index + ((point ? point.offset : 0) || 0)\n    }\n  }\n\n  /**\n   * Handle the warning.\n   *\n   * @param {1|2|3|4|5|6|7} code\n   * @param {number} offset\n   */\n  function warning(code, offset) {\n    /** @type {ReturnType<now>} */\n    let position\n\n    if (options.warning) {\n      position = now()\n      position.column += offset\n      position.offset += offset\n\n      options.warning.call(\n        options.warningContext,\n        messages[code],\n        position,\n        code\n      )\n    }\n  }\n\n  /**\n   * Flush `queue` (normal text).\n   * Macro invoked before each reference and at the end of `value`.\n   * Does nothing when `queue` is empty.\n   */\n  function flush() {\n    if (queue) {\n      result.push(queue)\n\n      if (options.text) {\n        options.text.call(options.textContext, queue, {\n          start: previous,\n          end: now()\n        })\n      }\n\n      queue = ''\n    }\n  }\n}\n\n/**\n * Check if `character` is outside the permissible unicode range.\n *\n * @param {number} code\n * @returns {boolean}\n */\nfunction prohibited(code) {\n  return (code >= 0xd800 && code <= 0xdfff) || code > 0x10ffff\n}\n\n/**\n * Check if `character` is disallowed.\n *\n * @param {number} code\n * @returns {boolean}\n */\nfunction disallowed(code) {\n  return (\n    (code >= 0x0001 && code <= 0x0008) ||\n    code === 0x000b ||\n    (code >= 0x000d && code <= 0x001f) ||\n    (code >= 0x007f && code <= 0x009f) ||\n    (code >= 0xfdd0 && code <= 0xfdef) ||\n    (code & 0xffff) === 0xffff ||\n    (code & 0xffff) === 0xfffe\n  )\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Position | PositionLike | Point | PointLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason` at `place` from `origin`.\n   *\n   * When an error is passed in as `reason`, the `stack` is copied.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   *\n   *   > 👉 **Note**: you should use markdown.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // To do: next major: expose `undefined` everywhere instead of `null`.\n  constructor(reason, place, origin) {\n    /** @type {[string | null, string | null]} */\n    const parts = [null, null]\n    /** @type {Position} */\n    let position = {\n      // @ts-expect-error: we always follows the structure of `position`.\n      start: {line: null, column: null},\n      // @ts-expect-error: \"\n      end: {line: null, column: null}\n    }\n\n    super()\n\n    if (typeof place === 'string') {\n      origin = place\n      place = undefined\n    }\n\n    if (typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        parts[1] = origin\n      } else {\n        parts[0] = origin.slice(0, index)\n        parts[1] = origin.slice(index + 1)\n      }\n    }\n\n    if (place) {\n      // Node.\n      if ('type' in place || 'position' in place) {\n        if (place.position) {\n          // To do: next major: deep clone.\n          // @ts-expect-error: looks like a position.\n          position = place.position\n        }\n      }\n      // Position.\n      else if ('start' in place || 'end' in place) {\n        // @ts-expect-error: looks like a position.\n        // To do: next major: deep clone.\n        position = place\n      }\n      // Point.\n      else if ('line' in place || 'column' in place) {\n        // To do: next major: deep clone.\n        position.start = place\n      }\n    }\n\n    // Fields from `Error`.\n    /**\n     * Serialized positional info of error.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(place) || '1:1'\n\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = typeof reason === 'object' ? reason.message : reason\n\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack = ''\n\n    if (typeof reason === 'object' && reason.stack) {\n      this.stack = reason.stack\n    }\n\n    /**\n     * Reason for message.\n     *\n     * > 👉 **Note**: you should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * State of problem.\n     *\n     * * `true` — marks associated file as no longer processable (error)\n     * * `false` — necessitates a (potential) change (warning)\n     * * `null | undefined` — for things that might not need changing (info)\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | null}\n     */\n    this.line = position.start.line\n\n    /**\n     * Starting column of error.\n     *\n     * @type {number | null}\n     */\n    this.column = position.start.column\n\n    /**\n     * Full unist position.\n     *\n     * @type {Position | null}\n     */\n    this.position = position\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | null}\n     */\n    this.source = parts[0]\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | null}\n     */\n    this.ruleId = parts[1]\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | null}\n     */\n    this.file\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | null}\n     */\n    this.actual\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | null}\n     */\n    this.expected\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | null}\n     */\n    this.url\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | null}\n     */\n    this.note\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.fatal = null\nVFileMessage.prototype.column = null\nVFileMessage.prototype.line = null\nVFileMessage.prototype.source = null\nVFileMessage.prototype.ruleId = null\nVFileMessage.prototype.position = null\n","/**\n * @typedef CoreOptions\n * @property {Array<string>} [subset=[]]\n *   Whether to only escape the given subset of characters.\n * @property {boolean} [escapeOnly=false]\n *   Whether to only escape possibly dangerous characters.\n *   Those characters are `\"`, `&`, `'`, `<`, `>`, and `` ` ``.\n *\n * @typedef FormatOptions\n * @property {(code: number, next: number, options: CoreWithFormatOptions) => string} format\n *   Format strategy.\n *\n * @typedef {CoreOptions & FormatOptions & import('./util/format-smart.js').FormatSmartOptions} CoreWithFormatOptions\n */\n\n/**\n * Encode certain characters in `value`.\n *\n * @param {string} value\n * @param {CoreWithFormatOptions} options\n * @returns {string}\n */\nexport function core(value, options) {\n  value = value.replace(\n    options.subset ? charactersToExpression(options.subset) : /[\"&'<>`]/g,\n    basic\n  )\n\n  if (options.subset || options.escapeOnly) {\n    return value\n  }\n\n  return (\n    value\n      // Surrogate pairs.\n      .replace(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, surrogate)\n      // BMP control characters (C0 except for LF, CR, SP; DEL; and some more\n      // non-ASCII ones).\n      .replace(\n        // eslint-disable-next-line no-control-regex, unicorn/no-hex-escape\n        /[\\x01-\\t\\v\\f\\x0E-\\x1F\\x7F\\x81\\x8D\\x8F\\x90\\x9D\\xA0-\\uFFFF]/g,\n        basic\n      )\n  )\n\n  /**\n   * @param {string} pair\n   * @param {number} index\n   * @param {string} all\n   */\n  function surrogate(pair, index, all) {\n    return options.format(\n      (pair.charCodeAt(0) - 0xd800) * 0x400 +\n        pair.charCodeAt(1) -\n        0xdc00 +\n        0x10000,\n      all.charCodeAt(index + 2),\n      options\n    )\n  }\n\n  /**\n   * @param {string} character\n   * @param {number} index\n   * @param {string} all\n   */\n  function basic(character, index, all) {\n    return options.format(\n      character.charCodeAt(0),\n      all.charCodeAt(index + 1),\n      options\n    )\n  }\n}\n\n/**\n * @param {Array<string>} subset\n * @returns {RegExp}\n */\nfunction charactersToExpression(subset) {\n  /** @type {Array<string>} */\n  const groups = []\n  let index = -1\n\n  while (++index < subset.length) {\n    groups.push(subset[index].replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&'))\n  }\n\n  return new RegExp('(?:' + groups.join('|') + ')', 'g')\n}\n","/**\n * The smallest way to encode a character.\n *\n * @param {number} code\n * @returns {string}\n */\nexport function formatBasic(code) {\n  return '&#x' + code.toString(16).toUpperCase() + ';'\n}\n","/**\n * @typedef {import('./core.js').CoreOptions & import('./util/format-smart.js').FormatSmartOptions} Options\n * @typedef {import('./core.js').CoreOptions} LightOptions\n */\n\nimport {core} from './core.js'\nimport {formatSmart} from './util/format-smart.js'\nimport {formatBasic} from './util/format-basic.js'\n\n/**\n * Encode special characters in `value`.\n *\n * @param {string} value\n *   Value to encode.\n * @param {Options} [options]\n *   Configuration.\n * @returns {string}\n *   Encoded value.\n */\nexport function stringifyEntities(value, options) {\n  return core(value, Object.assign({format: formatSmart}, options))\n}\n\n/**\n * Encode special characters in `value` as hexadecimals.\n *\n * @param {string} value\n *   Value to encode.\n * @param {LightOptions} [options]\n *   Configuration.\n * @returns {string}\n *   Encoded value.\n */\nexport function stringifyEntitiesLight(value, options) {\n  return core(value, Object.assign({format: formatBasic}, options))\n}\n","/**\n * @typedef {import('../types.js').FlowContent} FlowContent\n * @typedef {import('../types.js').Node} Node\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').TrackFields} TrackFields\n */\n\n/**\n * @param {Parent & {children: Array<FlowContent>}} parent\n *   Parent of flow nodes.\n * @param {State} state\n *   Info passed around about the current state.\n * @param {TrackFields} info\n *   Info on where we are in the document we are generating.\n * @returns {string}\n *   Serialized children, joined by (blank) lines.\n */\nexport function containerFlow(parent, state, info) {\n  const indexStack = state.indexStack\n  const children = parent.children || []\n  const tracker = state.createTracker(info)\n  /** @type {Array<string>} */\n  const results = []\n  let index = -1\n\n  indexStack.push(-1)\n\n  while (++index < children.length) {\n    const child = children[index]\n\n    indexStack[indexStack.length - 1] = index\n\n    results.push(\n      tracker.move(\n        state.handle(child, parent, state, {\n          before: '\\n',\n          after: '\\n',\n          ...tracker.current()\n        })\n      )\n    )\n\n    if (child.type !== 'list') {\n      state.bulletLastUsed = undefined\n    }\n\n    if (index < children.length - 1) {\n      results.push(\n        tracker.move(between(child, children[index + 1], parent, state))\n      )\n    }\n  }\n\n  indexStack.pop()\n\n  return results.join('')\n}\n\n/**\n * @param {Node} left\n * @param {Node} right\n * @param {Parent} parent\n * @param {State} state\n * @returns {string}\n */\nfunction between(left, right, parent, state) {\n  let index = state.join.length\n\n  while (index--) {\n    const result = state.join[index](left, right, parent, state)\n\n    if (result === true || result === 1) {\n      break\n    }\n\n    if (typeof result === 'number') {\n      return '\\n'.repeat(1 + result)\n    }\n\n    if (result === false) {\n      return '\\n\\n<!---->\\n\\n'\n    }\n  }\n\n  return '\\n\\n'\n}\n","/**\n * @typedef {import('../types.js').IndentLines} IndentLines\n */\n\nconst eol = /\\r?\\n|\\r/g\n\n/**\n * @type {IndentLines}\n */\nexport function indentLines(value, map) {\n  /** @type {Array<string>} */\n  const result = []\n  let start = 0\n  let line = 0\n  /** @type {RegExpExecArray | null} */\n  let match\n\n  while ((match = eol.exec(value))) {\n    one(value.slice(start, match.index))\n    result.push(match[0])\n    start = match.index + match[0].length\n    line++\n  }\n\n  one(value.slice(start))\n\n  return result.join('')\n\n  /**\n   * @param {string} value\n   */\n  function one(value) {\n    result.push(map(value, line, !value))\n  }\n}\n","/**\n * @typedef {import('estree-jsx').Program} Program\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-from-markdown').Token} Token\n * @typedef {import('mdast-util-from-markdown').OnEnterError} OnEnterError\n * @typedef {import('mdast-util-from-markdown').OnExitError} OnExitError\n *\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Map} ToMarkdownMap\n *\n * @typedef {import('../index.js').MdxJsxAttributeValueExpression} MdxJsxAttributeValueExpression\n * @typedef {import('../index.js').MdxJsxAttribute} MdxJsxAttribute\n * @typedef {import('../index.js').MdxJsxExpressionAttribute} MdxJsxExpressionAttribute\n * @typedef {import('../index.js').MdxJsxFlowElement} MdxJsxFlowElement\n * @typedef {import('../index.js').MdxJsxTextElement} MdxJsxTextElement\n */\n\n/**\n * @typedef Tag\n *   Single tag.\n * @property {string | undefined} name\n *   Name of tag, or `undefined` for fragment.\n *\n *   > 👉 **Note**: `null` is used in the AST for fragments, as it serializes in\n *   > JSON.\n * @property {Array<MdxJsxAttribute | MdxJsxExpressionAttribute>} attributes\n *   Attributes.\n * @property {boolean} close\n *   Whether the tag is closing (`</x>`).\n * @property {boolean} selfClosing\n *   Whether the tag is self-closing (`<x/>`).\n * @property {Token['start']} start\n *   Start point.\n * @property {Token['start']} end\n *   End point.\n *\n * @typedef ToMarkdownOptions\n *   Configuration.\n * @property {'\"' | \"'\" | null | undefined} [quote='\"']\n *   Preferred quote to use around attribute values.\n * @property {boolean | null | undefined} [quoteSmart=false]\n *   Use the other quote if that results in less bytes.\n * @property {boolean | null | undefined} [tightSelfClosing=false]\n *   Do not use an extra space when closing self-closing elements: `<img/>`\n *   instead of `<img />`.\n * @property {number | null | undefined} [printWidth=Infinity]\n *   Try and wrap syntax at this width.\n *\n *   When set to a finite number (say, `80`), the formatter will print\n *   attributes on separate lines when a tag doesn’t fit on one line.\n *   The normal behavior is to print attributes with spaces between them\n *   instead of line endings.\n */\n\nimport {ccount} from 'ccount'\nimport {parseEntities} from 'parse-entities'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nimport {VFileMessage} from 'vfile-message'\nimport {stringifyEntitiesLight} from 'stringify-entities'\nimport {containerFlow} from 'mdast-util-to-markdown/lib/util/container-flow.js'\nimport {containerPhrasing} from 'mdast-util-to-markdown/lib/util/container-phrasing.js'\nimport {indentLines} from 'mdast-util-to-markdown/lib/util/indent-lines.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n// To do: next major: use `state`, use utilities from state, rename `safeOptions` to `info`.\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable MDX JSX.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable MDX JSX.\n *\n *   When using the syntax extension with `addResult`, nodes will have a\n *   `data.estree` field set to an ESTree `Program` node.\n */\nexport function mdxJsxFromMarkdown() {\n  return {\n    canContainEols: ['mdxJsxTextElement'],\n    enter: {\n      mdxJsxFlowTag: enterMdxJsxTag,\n      mdxJsxFlowTagClosingMarker: enterMdxJsxTagClosingMarker,\n      mdxJsxFlowTagAttribute: enterMdxJsxTagAttribute,\n      mdxJsxFlowTagExpressionAttribute: enterMdxJsxTagExpressionAttribute,\n      mdxJsxFlowTagAttributeValueLiteral: buffer,\n      mdxJsxFlowTagAttributeValueExpression: buffer,\n      mdxJsxFlowTagSelfClosingMarker: enterMdxJsxTagSelfClosingMarker,\n\n      mdxJsxTextTag: enterMdxJsxTag,\n      mdxJsxTextTagClosingMarker: enterMdxJsxTagClosingMarker,\n      mdxJsxTextTagAttribute: enterMdxJsxTagAttribute,\n      mdxJsxTextTagExpressionAttribute: enterMdxJsxTagExpressionAttribute,\n      mdxJsxTextTagAttributeValueLiteral: buffer,\n      mdxJsxTextTagAttributeValueExpression: buffer,\n      mdxJsxTextTagSelfClosingMarker: enterMdxJsxTagSelfClosingMarker\n    },\n    exit: {\n      mdxJsxFlowTagClosingMarker: exitMdxJsxTagClosingMarker,\n      mdxJsxFlowTagNamePrimary: exitMdxJsxTagNamePrimary,\n      mdxJsxFlowTagNameMember: exitMdxJsxTagNameMember,\n      mdxJsxFlowTagNameLocal: exitMdxJsxTagNameLocal,\n      mdxJsxFlowTagExpressionAttribute: exitMdxJsxTagExpressionAttribute,\n      mdxJsxFlowTagExpressionAttributeValue: data,\n      mdxJsxFlowTagAttributeNamePrimary: exitMdxJsxTagAttributeNamePrimary,\n      mdxJsxFlowTagAttributeNameLocal: exitMdxJsxTagAttributeNameLocal,\n      mdxJsxFlowTagAttributeValueLiteral: exitMdxJsxTagAttributeValueLiteral,\n      mdxJsxFlowTagAttributeValueLiteralValue: data,\n      mdxJsxFlowTagAttributeValueExpression:\n        exitMdxJsxTagAttributeValueExpression,\n      mdxJsxFlowTagAttributeValueExpressionValue: data,\n      mdxJsxFlowTagSelfClosingMarker: exitMdxJsxTagSelfClosingMarker,\n      mdxJsxFlowTag: exitMdxJsxTag,\n\n      mdxJsxTextTagClosingMarker: exitMdxJsxTagClosingMarker,\n      mdxJsxTextTagNamePrimary: exitMdxJsxTagNamePrimary,\n      mdxJsxTextTagNameMember: exitMdxJsxTagNameMember,\n      mdxJsxTextTagNameLocal: exitMdxJsxTagNameLocal,\n      mdxJsxTextTagExpressionAttribute: exitMdxJsxTagExpressionAttribute,\n      mdxJsxTextTagExpressionAttributeValue: data,\n      mdxJsxTextTagAttributeNamePrimary: exitMdxJsxTagAttributeNamePrimary,\n      mdxJsxTextTagAttributeNameLocal: exitMdxJsxTagAttributeNameLocal,\n      mdxJsxTextTagAttributeValueLiteral: exitMdxJsxTagAttributeValueLiteral,\n      mdxJsxTextTagAttributeValueLiteralValue: data,\n      mdxJsxTextTagAttributeValueExpression:\n        exitMdxJsxTagAttributeValueExpression,\n      mdxJsxTextTagAttributeValueExpressionValue: data,\n      mdxJsxTextTagSelfClosingMarker: exitMdxJsxTagSelfClosingMarker,\n      mdxJsxTextTag: exitMdxJsxTag\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function buffer() {\n    this.buffer()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function data(token) {\n    this.config.enter.data.call(this, token)\n    this.config.exit.data.call(this, token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function enterMdxJsxTag(token) {\n    /** @type {Tag} */\n    const tag = {\n      name: undefined,\n      attributes: [],\n      close: false,\n      selfClosing: false,\n      start: token.start,\n      end: token.end\n    }\n    if (!this.getData('mdxJsxTagStack')) this.setData('mdxJsxTagStack', [])\n    this.setData('mdxJsxTag', tag)\n    this.buffer()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function enterMdxJsxTagClosingMarker(token) {\n    const stack = /** @type {Array<Tag>} */ (this.getData('mdxJsxTagStack'))\n\n    if (stack.length === 0) {\n      throw new VFileMessage(\n        'Unexpected closing slash `/` in tag, expected an open tag first',\n        {start: token.start, end: token.end},\n        'mdast-util-mdx-jsx:unexpected-closing-slash'\n      )\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function enterMdxJsxTagAnyAttribute(token) {\n    const tag = /** @type {Tag} */ (this.getData('mdxJsxTag'))\n\n    if (tag.close) {\n      throw new VFileMessage(\n        'Unexpected attribute in closing tag, expected the end of the tag',\n        {start: token.start, end: token.end},\n        'mdast-util-mdx-jsx:unexpected-attribute'\n      )\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function enterMdxJsxTagSelfClosingMarker(token) {\n    const tag = /** @type {Tag} */ (this.getData('mdxJsxTag'))\n\n    if (tag.close) {\n      throw new VFileMessage(\n        'Unexpected self-closing slash `/` in closing tag, expected the end of the tag',\n        {start: token.start, end: token.end},\n        'mdast-util-mdx-jsx:unexpected-self-closing-slash'\n      )\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function exitMdxJsxTagClosingMarker() {\n    const tag = /** @type {Tag} */ (this.getData('mdxJsxTag'))\n    tag.close = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function exitMdxJsxTagNamePrimary(token) {\n    const tag = /** @type {Tag} */ (this.getData('mdxJsxTag'))\n    tag.name = this.sliceSerialize(token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function exitMdxJsxTagNameMember(token) {\n    const tag = /** @type {Tag} */ (this.getData('mdxJsxTag'))\n    tag.name += '.' + this.sliceSerialize(token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function exitMdxJsxTagNameLocal(token) {\n    const tag = /** @type {Tag} */ (this.getData('mdxJsxTag'))\n    tag.name += ':' + this.sliceSerialize(token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function enterMdxJsxTagAttribute(token) {\n    const tag = /** @type {Tag} */ (this.getData('mdxJsxTag'))\n    enterMdxJsxTagAnyAttribute.call(this, token)\n    tag.attributes.push({type: 'mdxJsxAttribute', name: '', value: null})\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function enterMdxJsxTagExpressionAttribute(token) {\n    const tag = /** @type {Tag} */ (this.getData('mdxJsxTag'))\n    enterMdxJsxTagAnyAttribute.call(this, token)\n    tag.attributes.push({type: 'mdxJsxExpressionAttribute', value: ''})\n    this.buffer()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function exitMdxJsxTagExpressionAttribute(token) {\n    const tag = /** @type {Tag} */ (this.getData('mdxJsxTag'))\n    const tail = /** @type {MdxJsxExpressionAttribute} */ (\n      tag.attributes[tag.attributes.length - 1]\n    )\n    /** @type {Program | undefined} */\n    // @ts-expect-error: custom.\n    const estree = token.estree\n\n    tail.value = this.resume()\n\n    if (estree) {\n      tail.data = {estree}\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function exitMdxJsxTagAttributeNamePrimary(token) {\n    const tag = /** @type {Tag} */ (this.getData('mdxJsxTag'))\n    const node = /** @type {MdxJsxAttribute} */ (\n      tag.attributes[tag.attributes.length - 1]\n    )\n    node.name = this.sliceSerialize(token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function exitMdxJsxTagAttributeNameLocal(token) {\n    const tag = /** @type {Tag} */ (this.getData('mdxJsxTag'))\n    const node = /** @type {MdxJsxAttribute} */ (\n      tag.attributes[tag.attributes.length - 1]\n    )\n    node.name += ':' + this.sliceSerialize(token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function exitMdxJsxTagAttributeValueLiteral() {\n    const tag = /** @type {Tag} */ (this.getData('mdxJsxTag'))\n    tag.attributes[tag.attributes.length - 1].value = parseEntities(\n      this.resume(),\n      {nonTerminated: false}\n    )\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function exitMdxJsxTagAttributeValueExpression(token) {\n    const tag = /** @type {Tag} */ (this.getData('mdxJsxTag'))\n    const tail = /** @type {MdxJsxAttribute} */ (\n      tag.attributes[tag.attributes.length - 1]\n    )\n    /** @type {MdxJsxAttributeValueExpression} */\n    const node = {type: 'mdxJsxAttributeValueExpression', value: this.resume()}\n    /** @type {Program | undefined} */\n    // @ts-expect-error: custom.\n    const estree = token.estree\n\n    if (estree) {\n      node.data = {estree}\n    }\n\n    tail.value = node\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function exitMdxJsxTagSelfClosingMarker() {\n    const tag = /** @type {Tag} */ (this.getData('mdxJsxTag'))\n\n    tag.selfClosing = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function exitMdxJsxTag(token) {\n    const tag = /** @type {Tag} */ (this.getData('mdxJsxTag'))\n    const stack = /** @type {Array<Tag>} */ (this.getData('mdxJsxTagStack'))\n    const tail = stack[stack.length - 1]\n\n    if (tag.close && tail.name !== tag.name) {\n      throw new VFileMessage(\n        'Unexpected closing tag `' +\n          serializeAbbreviatedTag(tag) +\n          '`, expected corresponding closing tag for `' +\n          serializeAbbreviatedTag(tail) +\n          '` (' +\n          stringifyPosition(tail) +\n          ')',\n        {start: token.start, end: token.end},\n        'mdast-util-mdx-jsx:end-tag-mismatch'\n      )\n    }\n\n    // End of a tag, so drop the buffer.\n    this.resume()\n\n    if (tag.close) {\n      stack.pop()\n    } else {\n      this.enter(\n        {\n          type:\n            token.type === 'mdxJsxTextTag'\n              ? 'mdxJsxTextElement'\n              : 'mdxJsxFlowElement',\n          name: tag.name || null,\n          attributes: tag.attributes,\n          children: []\n        },\n        token,\n        onErrorRightIsTag\n      )\n    }\n\n    if (tag.selfClosing || tag.close) {\n      this.exit(token, onErrorLeftIsTag)\n    } else {\n      stack.push(tag)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {OnEnterError}\n   */\n  function onErrorRightIsTag(closing, open) {\n    const tag = /** @type {Tag} */ (this.getData('mdxJsxTag'))\n    const place = closing ? ' before the end of `' + closing.type + '`' : ''\n    const position = closing\n      ? {start: closing.start, end: closing.end}\n      : undefined\n\n    throw new VFileMessage(\n      'Expected a closing tag for `' +\n        serializeAbbreviatedTag(tag) +\n        '` (' +\n        stringifyPosition({start: open.start, end: open.end}) +\n        ')' +\n        place,\n      position,\n      'mdast-util-mdx-jsx:end-tag-mismatch'\n    )\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {OnExitError}\n   */\n  function onErrorLeftIsTag(a, b) {\n    const tag = /** @type {Tag} */ (this.getData('mdxJsxTag'))\n    throw new VFileMessage(\n      'Expected the closing tag `' +\n        serializeAbbreviatedTag(tag) +\n        '` either after the end of `' +\n        b.type +\n        '` (' +\n        stringifyPosition(b.end) +\n        ') or another opening tag after the start of `' +\n        b.type +\n        '` (' +\n        stringifyPosition(b.start) +\n        ')',\n      {start: a.start, end: a.end},\n      'mdast-util-mdx-jsx:end-tag-mismatch'\n    )\n  }\n\n  /**\n   * Serialize a tag, excluding attributes.\n   * `self-closing` is not supported, because we don’t need it yet.\n   *\n   * @param {Tag} tag\n   * @returns {string}\n   */\n  function serializeAbbreviatedTag(tag) {\n    return '<' + (tag.close ? '/' : '') + (tag.name || '') + '>'\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable MDX JSX.\n *\n * This extension configures `mdast-util-to-markdown` with\n * `options.fences: true` and `options.resourceLink: true` too, do not\n * overwrite them!\n *\n * @param {ToMarkdownOptions | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable MDX JSX.\n */\nexport function mdxJsxToMarkdown(options) {\n  const options_ = options || {}\n  const quote = options_.quote || '\"'\n  const quoteSmart = options_.quoteSmart || false\n  const tightSelfClosing = options_.tightSelfClosing || false\n  const printWidth = options_.printWidth || Number.POSITIVE_INFINITY\n  const alternative = quote === '\"' ? \"'\" : '\"'\n\n  if (quote !== '\"' && quote !== \"'\") {\n    throw new Error(\n      'Cannot serialize attribute values with `' +\n        quote +\n        '` for `options.quote`, expected `\"`, or `\\'`'\n    )\n  }\n\n  mdxElement.peek = peekElement\n\n  return {\n    handlers: {\n      mdxJsxFlowElement: mdxElement,\n      mdxJsxTextElement: mdxElement\n    },\n    unsafe: [\n      {character: '<', inConstruct: ['phrasing']},\n      {atBreak: true, character: '<'}\n    ],\n    // Always generate fenced code (never indented code).\n    fences: true,\n    // Always generate links with resources (never autolinks).\n    resourceLink: true\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {MdxJsxFlowElement | MdxJsxTextElement} node\n   */\n  // eslint-disable-next-line complexity\n  function mdxElement(node, _, context, safeOptions) {\n    const tracker = track(safeOptions)\n    const selfClosing =\n      node.name && (!node.children || node.children.length === 0)\n    const exit = context.enter(node.type)\n    let index = -1\n    /** @type {Array<string>} */\n    const serializedAttributes = []\n    let value = tracker.move('<' + (node.name || ''))\n\n    // None.\n    if (node.attributes && node.attributes.length > 0) {\n      if (!node.name) {\n        throw new Error('Cannot serialize fragment w/ attributes')\n      }\n\n      while (++index < node.attributes.length) {\n        const attribute = node.attributes[index]\n        /** @type {string} */\n        let result\n\n        if (attribute.type === 'mdxJsxExpressionAttribute') {\n          result = '{' + (attribute.value || '') + '}'\n        } else {\n          if (!attribute.name) {\n            throw new Error('Cannot serialize attribute w/o name')\n          }\n\n          const value = attribute.value\n          const left = attribute.name\n          /** @type {string} */\n          let right = ''\n\n          if (value === undefined || value === null) {\n            // Empty.\n          } else if (typeof value === 'object') {\n            right = '{' + (value.value || '') + '}'\n          } else {\n            // If the alternative is less common than `quote`, switch.\n            const appliedQuote =\n              quoteSmart && ccount(value, quote) > ccount(value, alternative)\n                ? alternative\n                : quote\n            right =\n              appliedQuote +\n              stringifyEntitiesLight(value, {subset: [appliedQuote]}) +\n              appliedQuote\n          }\n\n          result = left + (right ? '=' : '') + right\n        }\n\n        serializedAttributes.push(result)\n      }\n    }\n\n    let attributesOnTheirOwnLine = false\n    const attributesOnOneLine = serializedAttributes.join(' ')\n\n    if (\n      // Block:\n      node.type === 'mdxJsxFlowElement' &&\n      // Including a line ending (expressions).\n      (/\\r?\\n|\\r/.test(attributesOnOneLine) ||\n        // Current position (including `<tag`).\n        tracker.current().now.column +\n          // -1 because columns, +1 for ` ` before attributes.\n          // Attributes joined by spaces.\n          attributesOnOneLine.length +\n          // ` />`.\n          (selfClosing ? (tightSelfClosing ? 2 : 3) : 1) >\n          printWidth)\n    ) {\n      attributesOnTheirOwnLine = true\n    }\n\n    if (attributesOnTheirOwnLine) {\n      value += tracker.move(\n        '\\n' + indentLines(serializedAttributes.join('\\n'), map)\n      )\n    } else if (attributesOnOneLine) {\n      value += tracker.move(' ' + attributesOnOneLine)\n    }\n\n    if (attributesOnTheirOwnLine) {\n      value += tracker.move('\\n')\n    }\n\n    if (selfClosing) {\n      value += tracker.move(\n        (tightSelfClosing || attributesOnTheirOwnLine ? '' : ' ') + '/'\n      )\n    }\n\n    value += tracker.move('>')\n\n    if (node.children && node.children.length > 0) {\n      if (node.type === 'mdxJsxFlowElement') {\n        tracker.shift(2)\n        value += tracker.move('\\n')\n        value += tracker.move(\n          indentLines(containerFlow(node, context, tracker.current()), map)\n        )\n        value += tracker.move('\\n')\n      } else {\n        value += tracker.move(\n          containerPhrasing(node, context, {\n            ...tracker.current(),\n            before: '<',\n            after: '>'\n          })\n        )\n      }\n    }\n\n    if (!selfClosing) {\n      value += tracker.move('</' + (node.name || '') + '>')\n    }\n\n    exit()\n    return value\n  }\n\n  /** @type {ToMarkdownMap} */\n  function map(line, _, blank) {\n    return (blank ? '' : '  ') + line\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   */\n  function peekElement() {\n    return '<'\n  }\n}\n","/**\n * @typedef {import('../types.js').CreateTracker} CreateTracker\n * @typedef {import('../types.js').TrackCurrent} TrackCurrent\n * @typedef {import('../types.js').TrackMove} TrackMove\n * @typedef {import('../types.js').TrackShift} TrackShift\n */\n\n/**\n * Track positional info in the output.\n *\n * @type {CreateTracker}\n */\nexport function track(config) {\n  // Defaults are used to prevent crashes when older utilities somehow activate\n  // this code.\n  /* c8 ignore next 5 */\n  const options = config || {}\n  const now = options.now || {}\n  let lineShift = options.lineShift || 0\n  let line = now.line || 1\n  let column = now.column || 1\n\n  return {move, current, shift}\n\n  /**\n   * Get the current tracked info.\n   *\n   * @type {TrackCurrent}\n   */\n  function current() {\n    return {now: {line, column}, lineShift}\n  }\n\n  /**\n   * Define an increased line shift (the typical indent for lines).\n   *\n   * @type {TrackShift}\n   */\n  function shift(value) {\n    lineShift += value\n  }\n\n  /**\n   * Move past some generated markdown.\n   *\n   * @type {TrackMove}\n   */\n  function move(input) {\n    // eslint-disable-next-line unicorn/prefer-default-parameters\n    const value = input || ''\n    const chunks = value.split(/\\r?\\n|\\r/g)\n    const tail = chunks[chunks.length - 1]\n    line += chunks.length - 1\n    column =\n      chunks.length === 1 ? column + tail.length : 1 + tail.length + lineShift\n    return value\n  }\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').PhrasingContent} PhrasingContent\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * Serialize the children of a parent that contains phrasing children.\n *\n * These children will be joined flush together.\n *\n * @param {Parent & {children: Array<PhrasingContent>}} parent\n *   Parent of flow nodes.\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Info} info\n *   Info on where we are in the document we are generating.\n * @returns {string}\n *   Serialized children, joined together.\n */\nexport function containerPhrasing(parent, state, info) {\n  const indexStack = state.indexStack\n  const children = parent.children || []\n  /** @type {Array<string>} */\n  const results = []\n  let index = -1\n  let before = info.before\n\n  indexStack.push(-1)\n  let tracker = state.createTracker(info)\n\n  while (++index < children.length) {\n    const child = children[index]\n    /** @type {string} */\n    let after\n\n    indexStack[indexStack.length - 1] = index\n\n    if (index + 1 < children.length) {\n      /** @type {Handle} */\n      // @ts-expect-error: hush, it’s actually a `zwitch`.\n      let handle = state.handle.handlers[children[index + 1].type]\n      /** @type {Handle} */\n      // @ts-expect-error: hush, it’s actually a `zwitch`.\n      if (handle && handle.peek) handle = handle.peek\n      after = handle\n        ? handle(children[index + 1], parent, state, {\n            before: '',\n            after: '',\n            ...tracker.current()\n          }).charAt(0)\n        : ''\n    } else {\n      after = info.after\n    }\n\n    // In some cases, html (text) can be found in phrasing right after an eol.\n    // When we’d serialize that, in most cases that would be seen as html\n    // (flow).\n    // As we can’t escape or so to prevent it from happening, we take a somewhat\n    // reasonable approach: replace that eol with a space.\n    // See: <https://github.com/syntax-tree/mdast-util-to-markdown/issues/15>\n    if (\n      results.length > 0 &&\n      (before === '\\r' || before === '\\n') &&\n      child.type === 'html'\n    ) {\n      results[results.length - 1] = results[results.length - 1].replace(\n        /(\\r?\\n|\\r)$/,\n        ' '\n      )\n      before = ' '\n\n      // To do: does this work to reset tracker?\n      tracker = state.createTracker(info)\n      tracker.move(results.join(''))\n    }\n\n    results.push(\n      tracker.move(\n        state.handle(child, parent, state, {\n          ...tracker.current(),\n          before,\n          after\n        })\n      )\n    )\n\n    before = results[results.length - 1].slice(-1)\n  }\n\n  indexStack.pop()\n\n  return results.join('')\n}\n","/**\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n *\n * @typedef {import('estree-jsx').Program} Program\n *\n * @typedef {import('../index.js').MdxjsEsm} MdxjsEsm\n */\n\n// To do: next major: expose functions.\n\n/**\n * Extension for `mdast-util-from-markdown` to enable MDX ESM.\n *\n * When using the syntax extension with `addResult`, nodes will have a\n * `data.estree` field set to an ESTree `Program` node.\n *\n * @type {FromMarkdownExtension}\n */\nexport const mdxjsEsmFromMarkdown = {\n  enter: {mdxjsEsm: enterMdxjsEsm},\n  exit: {mdxjsEsm: exitMdxjsEsm, mdxjsEsmData: exitMdxjsEsmData}\n}\n\n/**\n * Extension for `mdast-util-to-markdown` to enable MDX ESM.\n *\n * @type {ToMarkdownExtension}\n */\nexport const mdxjsEsmToMarkdown = {handlers: {mdxjsEsm: handleMdxjsEsm}}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterMdxjsEsm(token) {\n  this.enter({type: 'mdxjsEsm', value: ''}, token)\n  this.buffer() // Capture EOLs\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitMdxjsEsm(token) {\n  const value = this.resume()\n  const node = /** @type {MdxjsEsm} */ (this.exit(token))\n  /** @type {Program | undefined} */\n  // @ts-expect-error: custom.\n  const estree = token.estree\n\n  node.value = value\n\n  if (estree) {\n    node.data = {estree}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitMdxjsEsmData(token) {\n  this.config.enter.data.call(this, token)\n  this.config.exit.data.call(this, token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {MdxjsEsm} node\n */\nfunction handleMdxjsEsm(node) {\n  return node.value || ''\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('micromark-extension-mdxjs').Options} MicromarkOptions\n * @typedef {import('mdast-util-mdx').ToMarkdownOptions} ToMarkdownOptions\n * @typedef {import('mdast-util-mdx')} DoNotTouchAsThisIncludesMdxInTree\n */\n\n/**\n * @typedef {MicromarkOptions & ToMarkdownOptions} Options\n *   Configuration.\n */\n\nimport {mdxjs} from 'micromark-extension-mdxjs'\nimport {mdxFromMarkdown, mdxToMarkdown} from 'mdast-util-mdx'\n\n/**\n * Plugin to support MDX (import/exports: `export {x} from 'y'`; expressions:\n * `{1 + 1}`; and JSX: `<Video id={123} />`).\n *\n * @this {import('unified').Processor}\n * @type {import('unified').Plugin<[Options | null | undefined] | [], Root>}\n */\nexport default function remarkMdx(options) {\n  const data = this.data()\n\n  add('micromarkExtensions', mdxjs(options))\n  add('fromMarkdownExtensions', mdxFromMarkdown())\n  add('toMarkdownExtensions', mdxToMarkdown(options))\n\n  /**\n   * @param {string} field\n   * @param {unknown} value\n   */\n  function add(field, value) {\n    const list = /** @type {Array<unknown>} */ (\n      // Other extensions\n      /* c8 ignore next 2 */\n      data[field] ? data[field] : (data[field] = [])\n    )\n\n    list.push(value)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-extension-mdx-expression').Options} Options\n */\n\nimport {Parser} from 'acorn'\n// @ts-expect-error: untyped\nimport acornJsx from 'acorn-jsx'\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {mdxExpression} from 'micromark-extension-mdx-expression'\nimport {mdxJsx} from 'micromark-extension-mdx-jsx'\nimport {mdxMd} from 'micromark-extension-mdx-md'\nimport {mdxjsEsm} from 'micromark-extension-mdxjs-esm'\n\n/**\n * @param {Options} [options]\n * @returns {Extension}\n */\nexport function mdxjs(options) {\n  const settings = Object.assign(\n    {\n      acorn: Parser.extend(acornJsx()),\n      acornOptions: {ecmaVersion: 2020, sourceType: 'module'},\n      addResult: true\n    },\n    options\n  )\n\n  return combineExtensions([\n    mdxjsEsm(settings),\n    mdxExpression(settings),\n    mdxJsx(settings),\n    mdxMd\n  ])\n}\n","/**\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n *\n * @typedef {import('mdast-util-mdx-expression').MdxFlowExpression} MdxFlowExpression\n * @typedef {import('mdast-util-mdx-expression').MdxTextExpression} MdxTextExpression\n * @typedef {import('mdast-util-mdxjs-esm').MdxjsEsm} MdxjsEsm\n * @typedef {import('mdast-util-mdx-jsx').MdxJsxAttributeValueExpression} MdxJsxAttributeValueExpression\n * @typedef {import('mdast-util-mdx-jsx').MdxJsxAttribute} MdxJsxAttribute\n * @typedef {import('mdast-util-mdx-jsx').MdxJsxExpressionAttribute} MdxJsxExpressionAttribute\n * @typedef {import('mdast-util-mdx-jsx').MdxJsxFlowElement} MdxJsxFlowElement\n * @typedef {import('mdast-util-mdx-jsx').MdxJsxTextElement} MdxJsxTextElement\n * @typedef {import('mdast-util-mdx-jsx').ToMarkdownOptions} ToMarkdownOptions\n */\n\nimport {\n  mdxExpressionFromMarkdown,\n  mdxExpressionToMarkdown\n} from 'mdast-util-mdx-expression'\nimport {mdxJsxFromMarkdown, mdxJsxToMarkdown} from 'mdast-util-mdx-jsx'\nimport {mdxjsEsmFromMarkdown, mdxjsEsmToMarkdown} from 'mdast-util-mdxjs-esm'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable MDX (ESM, JSX,\n * expressions).\n *\n * @returns {Array<FromMarkdownExtension>}\n *   Extension for `mdast-util-from-markdown` to enable MDX (ESM, JSX,\n *   expressions).\n *\n *   When using the syntax extensions with `addResult`, ESM and expression\n *   nodes will have `data.estree` fields set to ESTree `Program` node.\n */\nexport function mdxFromMarkdown() {\n  return [mdxExpressionFromMarkdown, mdxJsxFromMarkdown(), mdxjsEsmFromMarkdown]\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable MDX (ESM, JSX,\n * expressions).\n *\n * @param {ToMarkdownOptions | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable MDX (ESM, JSX,\n *   expressions).\n */\nexport function mdxToMarkdown(options) {\n  return {\n    extensions: [\n      mdxExpressionToMarkdown,\n      mdxJsxToMarkdown(options),\n      mdxjsEsmToMarkdown\n    ]\n  }\n}\n","import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\n\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri` below).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * Then, a regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`,\n * or `/^https?$/i` for `img[src]`.\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string|undefined} url\n * @param {RegExp} [protocol]\n * @returns {string}\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n\n  if (!protocol) {\n    return value\n  }\n\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 || // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) || // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n/**\n * Normalize a URL (such as used in definitions).\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n\n    let replace = '' // A correct percent encoded value.\n\n    if (\n      code === 37 &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    } // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    } // Astral.\n    else if (code > 55295 && code < 57344) {\n      const next = value.charCodeAt(index + 1) // A correct surrogate pair.\n\n      if (code < 56320 && next > 56319 && next < 57344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      } // Lone surrogate.\n      else {\n        replace = '\\uFFFD'\n      }\n    } // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n\n  return result.join('') + value.slice(start)\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @typedef {Record<string, unknown>} Props\n * @typedef {null | undefined | string | Props | TestFunctionAnything | Array<string | Props | TestFunctionAnything>} Test\n *   Check for an arbitrary node, unaware of TypeScript inferral.\n *\n * @callback TestFunctionAnything\n *   Check if a node passes a test, unaware of TypeScript inferral.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | void}\n *   Whether this node passes the test.\n */\n\n/**\n * @template {Node} Kind\n *   Node type.\n * @typedef {Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind> | Array<Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind>>} PredicateTest\n *   Check for a node that can be inferred by TypeScript.\n */\n\n/**\n * Check if a node passes a certain test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback TestFunctionPredicate\n *   Complex test function for a node that can be inferred by TypeScript.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this node passes the test.\n */\n\n/**\n * @callback AssertAnything\n *   Check that an arbitrary value is a node, unaware of TypeScript inferral.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if a node is a node and passes a certain node test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback AssertPredicate\n *   Check that an arbitrary value is a specific node, aware of TypeScript.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @param test\n *   A check for a specific node.\n * @param index\n *   The node’s position in its parent.\n * @param parent\n *   The node’s parent.\n * @returns\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  /**\n   * @type {(\n   *   (() => false) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index: number, parent: Parent, context?: unknown) => node is Kind) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index?: null | undefined, parent?: null | undefined, context?: unknown) => node is Kind) &\n   *   ((node: unknown, test: Test, index: number, parent: Parent, context?: unknown) => boolean) &\n   *   ((node: unknown, test?: Test, index?: null | undefined, parent?: null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns\n *   An assertion.\n */\nexport const convert =\n  /**\n   * @type {(\n   *   (<Kind extends Node>(test: PredicateTest<Kind>) => AssertPredicate<Kind>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<string | Props | TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {unknown} node\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(node, ...parameters) {\n    return Boolean(\n      node &&\n        typeof node === 'object' &&\n        'type' in node &&\n        // @ts-expect-error: fine.\n        Boolean(check.call(this, node, ...parameters))\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n */\n\n/**\n * @typedef {boolean | 'skip'} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<Ancestor>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   Tree type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {Visitor<import('./complex-types.js').Matches<import('./complex-types.js').InclusiveDescendant<Tree>, Check>, Extract<import('./complex-types.js').InclusiveDescendant<Tree>, Parent>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor<Node>} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-expect-error no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      const is = convert(test)\n      const step = reverse ? -1 : 1\n\n      factory(tree, undefined, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number | undefined} index\n       * @param {Array<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Record<string, unknown>} */\n        // @ts-expect-error: hush\n        const value = node && typeof node === 'object' ? node : {}\n\n        if (typeof value.type === 'string') {\n          const name =\n            // `hast`\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : // `xast`\n              typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          let result = []\n          /** @type {ActionTuple} */\n          let subresult\n          /** @type {number} */\n          let offset\n          /** @type {Array<Parent>} */\n          let grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          // @ts-expect-error looks like a parent.\n          if (node.children && result[0] !== SKIP) {\n            // @ts-expect-error looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-expect-error looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-expect-error looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              // @ts-expect-error looks like a parent.\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {ActionTuple}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * Check if `Child` can be a child of `Ancestor`.\n *\n * Returns the ancestor when `Child` can be a child of `Ancestor`, or returns\n * `never`.\n *\n * @template {Node} Ancestor\n *   Node type.\n * @template {Node} Child\n *   Node type.\n * @typedef {(\n *   Ancestor extends Parent\n *     ? Child extends Ancestor['children'][number]\n *       ? Ancestor\n *       : never\n *     : never\n * )} ParentsOf\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends Node ? number | null : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends Node ? Ancestor | null : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * Build a typed `Visitor` function from a node and all possible parents.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Visited\n *   Node type.\n * @template {Parent} Ancestor\n *   Parent type.\n * @typedef {Visitor<Visited, ParentsOf<Ancestor, Visited>>} BuildVisitorFromMatch\n */\n\n/**\n * Build a typed `Visitor` function from a list of descendants and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     import('unist-util-visit-parents/complex-types.js').Matches<Descendant, Check>,\n *     Extract<Descendant, Parent>\n *   >\n * )} BuildVisitorFromDescendants\n */\n\n/**\n * Build a typed `Visitor` function from a tree and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} [Tree=Node]\n *   Node type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     import('unist-util-visit-parents/complex-types.js').InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n","/**\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {NodeLike | Node | null | undefined} [node]\n *   Node.\n * @returns {Position}\n *   Position.\n */\nexport function position(node) {\n  return {start: pointStart(node), end: pointEnd(node)}\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'start' | 'end'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {NodeLike | Node | null | undefined} [node]\n   * @returns {Point}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    // To do: next major: don’t return points when invalid.\n    return {\n      // @ts-expect-error: in practice, null is allowed.\n      line: point.line || null,\n      // @ts-expect-error: in practice, null is allowed.\n      column: point.column || null,\n      // @ts-expect-error: in practice, null is allowed.\n      offset: point.offset > -1 ? point.offset : null\n    }\n  }\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Definition} Definition\n */\n\n/**\n * @typedef {Root | Content} Node\n *\n * @callback GetDefinition\n *   Get a definition by identifier.\n * @param {string | null | undefined} [identifier]\n *   Identifier of definition.\n * @returns {Definition | null}\n *   Definition corresponding to `identifier` or `null`.\n */\n\nimport {visit} from 'unist-util-visit'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Find definitions in `tree`.\n *\n * Uses CommonMark precedence, which means that earlier definitions are\n * preferred over duplicate later definitions.\n *\n * @param {Node} tree\n *   Tree to check.\n * @returns {GetDefinition}\n *   Getter.\n */\nexport function definitions(tree) {\n  /** @type {Record<string, Definition>} */\n  const cache = Object.create(null)\n\n  if (!tree || !tree.type) {\n    throw new Error('mdast-util-definitions expected node')\n  }\n\n  visit(tree, 'definition', (definition) => {\n    const id = clean(definition.identifier)\n    if (id && !own.call(cache, id)) {\n      cache[id] = definition\n    }\n  })\n\n  return definition\n\n  /** @type {GetDefinition} */\n  function definition(identifier) {\n    const id = clean(identifier)\n    // To do: next major: return `undefined` when not found.\n    return id && own.call(cache, id) ? cache[id] : null\n  }\n}\n\n/**\n * @param {string | null | undefined} [value]\n * @returns {string}\n */\nfunction clean(value) {\n  return String(value || '').toUpperCase()\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('hast').Element} Element\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `footnoteReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {FootnoteReference} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnoteReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = state.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  if (index === -1) {\n    state.footnoteOrder.push(id)\n    state.footnoteCounts[id] = 1\n    counter = state.footnoteOrder.length\n  } else {\n    state.footnoteCounts[id]++\n    counter = index + 1\n  }\n\n  const reuseCounter = state.footnoteCounts[id]\n\n  /** @type {Element} */\n  const link = {\n    type: 'element',\n    tagName: 'a',\n    properties: {\n      href: '#' + state.clobberPrefix + 'fn-' + safeId,\n      id:\n        state.clobberPrefix +\n        'fnref-' +\n        safeId +\n        (reuseCounter > 1 ? '-' + reuseCounter : ''),\n      dataFootnoteRef: true,\n      ariaDescribedBy: ['footnote-label']\n    },\n    children: [{type: 'text', value: String(counter)}]\n  }\n  state.patch(node, link)\n\n  /** @type {Element} */\n  const sup = {\n    type: 'element',\n    tagName: 'sup',\n    properties: {},\n    children: [link]\n  }\n  state.patch(node, sup)\n  return state.applyData(node, sup)\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Reference} Reference\n * @typedef {import('mdast').Root} Root\n *\n * @typedef {import('./state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Reference>} References\n */\n\n// To do: next major: always return array.\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @param {State} state\n *   Info passed around.\n * @param {References} node\n *   Reference node (image, link).\n * @returns {ElementContent | Array<ElementContent>}\n *   hast content.\n */\nexport function revert(state, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return {type: 'text', value: '![' + node.alt + suffix}\n  }\n\n  const contents = state.all(node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift({type: 'text', value: '['})\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push({type: 'text', value: suffix})\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Parent>} Parents\n */\n\n/**\n * Turn an mdast `listItem` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ListItem} node\n *   mdast node.\n * @param {Parents | null | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function listItem(state, node, parent) {\n  const results = state.all(node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const properties = {}\n  /** @type {Array<ElementContent>} */\n  const children = []\n\n  if (typeof node.checked === 'boolean') {\n    const head = results[0]\n    /** @type {Element} */\n    let paragraph\n\n    if (head && head.type === 'element' && head.tagName === 'p') {\n      paragraph = head\n    } else {\n      paragraph = {type: 'element', tagName: 'p', properties: {}, children: []}\n      results.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift({type: 'text', value: ' '})\n    }\n\n    paragraph.children.unshift({\n      type: 'element',\n      tagName: 'input',\n      properties: {type: 'checkbox', checked: node.checked, disabled: true},\n      children: []\n    })\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    properties.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < results.length) {\n    const child = results[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      children.push({type: 'text', value: '\\n'})\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      children.push(...child.children)\n    } else {\n      children.push(child)\n    }\n  }\n\n  const tail = results[results.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || tail.type !== 'element' || tail.tagName !== 'p')) {\n    children.push({type: 'text', value: '\\n'})\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'li', properties, children}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * @param {Parents} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = false\n  if (node.type === 'list') {\n    loose = node.spread || false\n    const children = node.children\n    let index = -1\n\n    while (!loose && ++index < children.length) {\n      loose = listItemLoose(children[index])\n    }\n  }\n\n  return loose\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === undefined || spread === null\n    ? node.children.length > 1\n    : spread\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {footnote} from './footnote.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {tableRow} from './table-row.js'\nimport {tableCell} from './table-cell.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default handlers for nodes.\n */\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  footnote,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  root,\n  strong,\n  table,\n  tableCell,\n  tableRow,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  // To do: next major: return `undefined`.\n  return null\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `blockquote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Blockquote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function blockquote(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'blockquote',\n    properties: {},\n    children: state.wrap(state.all(node), true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `break` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Break} node\n *   mdast node.\n * @returns {Array<Element | Text>}\n *   hast element content.\n */\nexport function hardBreak(state, node) {\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'br', properties: {}, children: []}\n  state.patch(node, result)\n  return [state.applyData(node, result), {type: 'text', value: '\\n'}]\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../state.js').State} State\n\n */\n\n/**\n * Turn an mdast `code` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Code} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function code(state, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  // To do: next major, use `node.lang` w/o regex, the splitting’s been going\n  // on for years in remark now.\n  const lang = node.lang ? node.lang.match(/^[^ \\t]+(?=[ \\t]|$)/) : null\n  /** @type {Properties} */\n  const properties = {}\n\n  if (lang) {\n    properties.className = ['language-' + lang]\n  }\n\n  // Create `<code>`.\n  /** @type {Element} */\n  let result = {\n    type: 'element',\n    tagName: 'code',\n    properties,\n    children: [{type: 'text', value}]\n  }\n\n  if (node.meta) {\n    result.data = {meta: node.meta}\n  }\n\n  state.patch(node, result)\n  result = state.applyData(node, result)\n\n  // Create `<pre>`.\n  result = {type: 'element', tagName: 'pre', properties: {}, children: [result]}\n  state.patch(node, result)\n  return result\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../state.js').State} State\n\n */\n\n/**\n * Turn an mdast `delete` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Delete} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strikethrough(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'del',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `emphasis` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Emphasis} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function emphasis(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'em',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Footnote} Footnote\n * @typedef {import('../state.js').State} State\n */\n\nimport {footnoteReference} from './footnote-reference.js'\n\n// To do: when both:\n// * <https://github.com/micromark/micromark-extension-footnote>\n// * <https://github.com/syntax-tree/mdast-util-footnote>\n// …are archived, remove this (also from mdast).\n// These inline notes are not used in GFM.\n\n/**\n * Turn an mdast `footnote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Footnote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnote(state, node) {\n  const footnoteById = state.footnoteById\n  let no = 1\n\n  while (no in footnoteById) no++\n\n  const identifier = String(no)\n\n  footnoteById[identifier] = {\n    type: 'footnoteDefinition',\n    identifier,\n    children: [{type: 'paragraph', children: node.children}],\n    position: node.position\n  }\n\n  return footnoteReference(state, {\n    type: 'footnoteReference',\n    identifier,\n    position: node.position\n  })\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `heading` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Heading} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function heading(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'h' + node.depth,\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').HTML} Html\n * @typedef {import('../state.js').State} State\n * @typedef {import('../../index.js').Raw} Raw\n */\n\n/**\n * Turn an mdast `html` node into hast (`raw` node in dangerous mode, otherwise\n * nothing).\n *\n * @param {State} state\n *   Info passed around.\n * @param {Html} node\n *   mdast node.\n * @returns {Raw | Element | null}\n *   hast node.\n */\nexport function html(state, node) {\n  if (state.dangerous) {\n    /** @type {Raw} */\n    const result = {type: 'raw', value: node.value}\n    state.patch(node, result)\n    return state.applyData(node, result)\n  }\n\n  // To do: next major: return `undefined`.\n  return null\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `imageReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ImageReference} node\n *   mdast node.\n * @returns {ElementContent | Array<ElementContent>}\n *   hast node.\n */\nexport function imageReference(state, node) {\n  const def = state.definition(node.identifier)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Image} Image\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `image` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Image} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function image(state, node) {\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(node.url)}\n\n  if (node.alt !== null && node.alt !== undefined) {\n    properties.alt = node.alt\n  }\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `inlineCode` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {InlineCode} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function inlineCode(state, node) {\n  /** @type {Text} */\n  const text = {type: 'text', value: node.value.replace(/\\r?\\n|\\r/g, ' ')}\n  state.patch(node, text)\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'code',\n    properties: {},\n    children: [text]\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `linkReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {LinkReference} node\n *   mdast node.\n * @returns {ElementContent | Array<ElementContent>}\n *   hast node.\n */\nexport function linkReference(state, node) {\n  const def = state.definition(node.identifier)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `link` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Link} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function link(state, node) {\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').List} List\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `list` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {List} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function list(state, node) {\n  /** @type {Properties} */\n  const properties = {}\n  const results = state.all(node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    properties.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < results.length) {\n    const child = results[index]\n\n    if (\n      child.type === 'element' &&\n      child.tagName === 'li' &&\n      child.properties &&\n      Array.isArray(child.properties.className) &&\n      child.properties.className.includes('task-list-item')\n    ) {\n      properties.className = ['contains-task-list']\n      break\n    }\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: node.ordered ? 'ol' : 'ul',\n    properties,\n    children: state.wrap(results, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `paragraph` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Paragraph} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function paragraph(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'p',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `root` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastRoot} node\n *   mdast node.\n * @returns {HastRoot | HastElement}\n *   hast node.\n */\nexport function root(state, node) {\n  /** @type {HastRoot} */\n  const result = {type: 'root', children: state.wrap(state.all(node))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `strong` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Strong} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strong(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'strong',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Table} Table\n * @typedef {import('../state.js').State} State\n */\n\nimport {pointStart, pointEnd} from 'unist-util-position'\n\n/**\n * Turn an mdast `table` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Table} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function table(state, node) {\n  const rows = state.all(node)\n  const firstRow = rows.shift()\n  /** @type {Array<Element>} */\n  const tableContent = []\n\n  if (firstRow) {\n    /** @type {Element} */\n    const head = {\n      type: 'element',\n      tagName: 'thead',\n      properties: {},\n      children: state.wrap([firstRow], true)\n    }\n    state.patch(node.children[0], head)\n    tableContent.push(head)\n  }\n\n  if (rows.length > 0) {\n    /** @type {Element} */\n    const body = {\n      type: 'element',\n      tagName: 'tbody',\n      properties: {},\n      children: state.wrap(rows, true)\n    }\n\n    const start = pointStart(node.children[1])\n    const end = pointEnd(node.children[node.children.length - 1])\n    if (start.line && end.line) body.position = {start, end}\n    tableContent.push(body)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'table',\n    properties: {},\n    children: state.wrap(tableContent, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `tableCell` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableCell} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function tableCell(state, node) {\n  // Note: this function is normally not called: see `table-row` for how rows\n  // and their cells are compiled.\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'td', // Assume body cell.\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Parent>} Parents\n */\n\n/**\n * Turn an mdast `tableRow` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableRow} node\n *   mdast node.\n * @param {Parents | null | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function tableRow(state, node, parent) {\n  const siblings = parent ? parent.children : undefined\n  // Generate a body row when without parent.\n  const rowIndex = siblings ? siblings.indexOf(node) : 1\n  const tagName = rowIndex === 0 ? 'th' : 'td'\n  const align = parent && parent.type === 'table' ? parent.align : undefined\n  const length = align ? align.length : node.children.length\n  let cellIndex = -1\n  /** @type {Array<ElementContent>} */\n  const cells = []\n\n  while (++cellIndex < length) {\n    // Note: can also be undefined.\n    const cell = node.children[cellIndex]\n    /** @type {Properties} */\n    const properties = {}\n    const alignValue = align ? align[cellIndex] : undefined\n\n    if (alignValue) {\n      properties.align = alignValue\n    }\n\n    /** @type {Element} */\n    let result = {type: 'element', tagName, properties, children: []}\n\n    if (cell) {\n      result.children = state.all(cell)\n      state.patch(cell, result)\n      result = state.applyData(node, result)\n    }\n\n    cells.push(result)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'tr',\n    properties: {},\n    children: state.wrap(cells, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').Text} HastText\n * @typedef {import('mdast').Text} MdastText\n * @typedef {import('../state.js').State} State\n */\n\nimport {trimLines} from 'trim-lines'\n\n/**\n * Turn an mdast `text` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastText} node\n *   mdast node.\n * @returns {HastText | HastElement}\n *   hast node.\n */\nexport function text(state, node) {\n  /** @type {HastText} */\n  const result = {type: 'text', value: trimLines(String(node.value))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `thematicBreak` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ThematicBreak} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function thematicBreak(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'hr',\n    properties: {},\n    children: []\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Content} HastContent\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').ElementContent} HastElementContent\n * @typedef {import('hast').Properties} HastProperties\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('hast').Text} HastText\n *\n * @typedef {import('mdast').Content} MdastContent\n * @typedef {import('mdast').Definition} MdastDefinition\n * @typedef {import('mdast').FootnoteDefinition} MdastFootnoteDefinition\n * @typedef {import('mdast').Parent} MdastParent\n * @typedef {import('mdast').Root} MdastRoot\n */\n\n/**\n * @typedef {HastRoot | HastContent} HastNodes\n * @typedef {MdastRoot | MdastContent} MdastNodes\n * @typedef {Extract<MdastNodes, MdastParent>} MdastParents\n *\n * @typedef EmbeddedHastFields\n *   hast fields.\n * @property {string | null | undefined} [hName]\n *   Generate a specific element with this tag name instead.\n * @property {HastProperties | null | undefined} [hProperties]\n *   Generate an element with these properties instead.\n * @property {Array<HastElementContent> | null | undefined} [hChildren]\n *   Generate an element with this content instead.\n *\n * @typedef {Record<string, unknown> & EmbeddedHastFields} MdastData\n *   mdast data with embedded hast fields.\n *\n * @typedef {MdastNodes & {data?: MdastData | null | undefined}} MdastNodeWithData\n *   mdast node with embedded hast data.\n *\n * @typedef PointLike\n *   Point-like value.\n * @property {number | null | undefined} [line]\n *   Line.\n * @property {number | null | undefined} [column]\n *   Column.\n * @property {number | null | undefined} [offset]\n *   Offset.\n *\n * @typedef PositionLike\n *   Position-like value.\n * @property {PointLike | null | undefined} [start]\n *   Point-like value.\n * @property {PointLike | null | undefined} [end]\n *   Point-like value.\n *\n * @callback Handler\n *   Handle a node.\n * @param {State} state\n *   Info passed around.\n * @param {any} node\n *   mdast node to handle.\n * @param {MdastParents | null | undefined} parent\n *   Parent of `node`.\n * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n *   hast node.\n *\n * @callback HFunctionProps\n *   Signature of `state` for when props are passed.\n * @param {MdastNodes | PositionLike | null | undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {HastProperties} props\n *   Properties.\n * @param {Array<HastElementContent> | null | undefined} [children]\n *   hast content.\n * @returns {HastElement}\n *   Compiled element.\n *\n * @callback HFunctionNoProps\n *   Signature of `state` for when no props are passed.\n * @param {MdastNodes | PositionLike | null | undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {Array<HastElementContent> | null | undefined} [children]\n *   hast content.\n * @returns {HastElement}\n *   Compiled element.\n *\n * @typedef HFields\n *   Info on `state`.\n * @property {boolean} dangerous\n *   Whether HTML is allowed.\n * @property {string} clobberPrefix\n *   Prefix to use to prevent DOM clobbering.\n * @property {string} footnoteLabel\n *   Label to use to introduce the footnote section.\n * @property {string} footnoteLabelTagName\n *   HTML used for the footnote label.\n * @property {HastProperties} footnoteLabelProperties\n *   Properties on the HTML tag used for the footnote label.\n * @property {string} footnoteBackLabel\n *   Label to use from backreferences back to their footnote call.\n * @property {(identifier: string) => MdastDefinition | null} definition\n *   Definition cache.\n * @property {Record<string, MdastFootnoteDefinition>} footnoteById\n *   Footnote definitions by their identifier.\n * @property {Array<string>} footnoteOrder\n *   Identifiers of order when footnote calls first appear in tree order.\n * @property {Record<string, number>} footnoteCounts\n *   Counts for how often the same footnote was called.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {Handler} unknownHandler\n *   Handler for any none not in `passThrough` or otherwise handled.\n * @property {(from: MdastNodes, node: HastNodes) => void} patch\n *   Copy a node’s positional info.\n * @property {<Type extends HastNodes>(from: MdastNodes, to: Type) => Type | HastElement} applyData\n *   Honor the `data` of `from`, and generate an element instead of `node`.\n * @property {(node: MdastNodes, parent: MdastParents | null | undefined) => HastElementContent | Array<HastElementContent> | null | undefined} one\n *   Transform an mdast node to hast.\n * @property {(node: MdastNodes) => Array<HastElementContent>} all\n *   Transform the children of an mdast parent to hast.\n * @property {<Type extends HastContent>(nodes: Array<Type>, loose?: boolean | null | undefined) => Array<Type | HastText>} wrap\n *   Wrap `nodes` with line endings between each node, adds initial/final line endings when `loose`.\n * @property {(left: MdastNodeWithData | PositionLike | null | undefined, right: HastElementContent) => HastElementContent} augment\n *   Like `state` but lower-level and usable on non-elements.\n *   Deprecated: use `patch` and `applyData`.\n * @property {Array<string>} passThrough\n *   List of node types to pass through untouched (except for their children).\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Whether to persist raw HTML in markdown in the hast tree.\n * @property {string | null | undefined} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` attribute on footnotes to prevent it from\n *   *clobbering*.\n * @property {string | null | undefined} [footnoteBackLabel='Back to content']\n *   Label to use from backreferences back to their footnote call (affects\n *   screen readers).\n * @property {string | null | undefined} [footnoteLabel='Footnotes']\n *   Label to use for the footnotes section (affects screen readers).\n * @property {HastProperties | null | undefined} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label (note that `id: 'footnote-label'`\n *   is always added as footnote calls use it with `aria-describedby` to\n *   provide an accessible label).\n * @property {string | null | undefined} [footnoteLabelTagName='h2']\n *   Tag name to use for the footnote label.\n * @property {Handlers | null | undefined} [handlers]\n *   Extra handlers for nodes.\n * @property {Array<string> | null | undefined} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast (note that\n *   the node itself is passed, but eventual children are transformed).\n * @property {Handler | null | undefined} [unknownHandler]\n *   Handler for all unknown nodes.\n *\n * @typedef {Record<string, Handler>} Handlers\n *   Handle nodes.\n *\n * @typedef {HFunctionProps & HFunctionNoProps & HFields} State\n *   Info passed around.\n */\n\nimport {visit} from 'unist-util-visit'\nimport {position, pointStart, pointEnd} from 'unist-util-position'\nimport {generated} from 'unist-util-generated'\nimport {definitions} from 'mdast-util-definitions'\nimport {handlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Create `state` from an mdast tree.\n *\n * @param {MdastNodes} tree\n *   mdast node to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {State}\n *   `state` function.\n */\nexport function createState(tree, options) {\n  const settings = options || {}\n  const dangerous = settings.allowDangerousHtml || false\n  /** @type {Record<string, MdastFootnoteDefinition>} */\n  const footnoteById = {}\n\n  // To do: next major: add `options` to state, remove:\n  // `dangerous`, `clobberPrefix`, `footnoteLabel`, `footnoteLabelTagName`,\n  // `footnoteLabelProperties`, `footnoteBackLabel`, `passThrough`,\n  // `unknownHandler`.\n\n  // To do: next major: move to `state.options.allowDangerousHtml`.\n  state.dangerous = dangerous\n  // To do: next major: move to `state.options`.\n  state.clobberPrefix =\n    settings.clobberPrefix === undefined || settings.clobberPrefix === null\n      ? 'user-content-'\n      : settings.clobberPrefix\n  // To do: next major: move to `state.options`.\n  state.footnoteLabel = settings.footnoteLabel || 'Footnotes'\n  // To do: next major: move to `state.options`.\n  state.footnoteLabelTagName = settings.footnoteLabelTagName || 'h2'\n  // To do: next major: move to `state.options`.\n  state.footnoteLabelProperties = settings.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  // To do: next major: move to `state.options`.\n  state.footnoteBackLabel = settings.footnoteBackLabel || 'Back to content'\n  // To do: next major: move to `state.options`.\n  state.unknownHandler = settings.unknownHandler\n  // To do: next major: move to `state.options`.\n  state.passThrough = settings.passThrough\n\n  state.handlers = {...handlers, ...settings.handlers}\n\n  // To do: next major: replace utility with `definitionById` object, so we\n  // only walk once (as we need footnotes too).\n  state.definition = definitions(tree)\n  state.footnoteById = footnoteById\n  /** @type {Array<string>} */\n  state.footnoteOrder = []\n  /** @type {Record<string, number>} */\n  state.footnoteCounts = {}\n\n  state.patch = patch\n  state.applyData = applyData\n  state.one = oneBound\n  state.all = allBound\n  state.wrap = wrap\n  // To do: next major: remove `augment`.\n  state.augment = augment\n\n  visit(tree, 'footnoteDefinition', (definition) => {\n    const id = String(definition.identifier).toUpperCase()\n\n    // Mimick CM behavior of link definitions.\n    // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/8290999/index.js#L26>.\n    if (!own.call(footnoteById, id)) {\n      footnoteById[id] = definition\n    }\n  })\n\n  // @ts-expect-error Hush, it’s fine!\n  return state\n\n  /**\n   * Finalise the created `right`, a hast node, from `left`, an mdast node.\n   *\n   * @param {MdastNodeWithData | PositionLike | null | undefined} left\n   * @param {HastElementContent} right\n   * @returns {HastElementContent}\n   */\n  /* c8 ignore start */\n  // To do: next major: remove.\n  function augment(left, right) {\n    // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n    if (left && 'data' in left && left.data) {\n      /** @type {MdastData} */\n      const data = left.data\n\n      if (data.hName) {\n        if (right.type !== 'element') {\n          right = {\n            type: 'element',\n            tagName: '',\n            properties: {},\n            children: []\n          }\n        }\n\n        right.tagName = data.hName\n      }\n\n      if (right.type === 'element' && data.hProperties) {\n        right.properties = {...right.properties, ...data.hProperties}\n      }\n\n      if ('children' in right && right.children && data.hChildren) {\n        right.children = data.hChildren\n      }\n    }\n\n    if (left) {\n      const ctx = 'type' in left ? left : {position: left}\n\n      if (!generated(ctx)) {\n        // @ts-expect-error: fine.\n        right.position = {start: pointStart(ctx), end: pointEnd(ctx)}\n      }\n    }\n\n    return right\n  }\n  /* c8 ignore stop */\n\n  /**\n   * Create an element for `node`.\n   *\n   * @type {HFunctionProps}\n   */\n  /* c8 ignore start */\n  // To do: next major: remove.\n  function state(node, tagName, props, children) {\n    if (Array.isArray(props)) {\n      children = props\n      props = {}\n    }\n\n    // @ts-expect-error augmenting an element yields an element.\n    return augment(node, {\n      type: 'element',\n      tagName,\n      properties: props || {},\n      children: children || []\n    })\n  }\n  /* c8 ignore stop */\n\n  /**\n   * Transform an mdast node into a hast node.\n   *\n   * @param {MdastNodes} node\n   *   mdast node.\n   * @param {MdastParents | null | undefined} [parent]\n   *   Parent of `node`.\n   * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n   *   Resulting hast node.\n   */\n  function oneBound(node, parent) {\n    // @ts-expect-error: that’s a state :)\n    return one(state, node, parent)\n  }\n\n  /**\n   * Transform the children of an mdast node into hast nodes.\n   *\n   * @param {MdastNodes} parent\n   *   mdast node to compile\n   * @returns {Array<HastElementContent>}\n   *   Resulting hast nodes.\n   */\n  function allBound(parent) {\n    // @ts-expect-error: that’s a state :)\n    return all(state, parent)\n  }\n}\n\n/**\n * Copy a node’s positional info.\n *\n * @param {MdastNodes} from\n *   mdast node to copy from.\n * @param {HastNodes} to\n *   hast node to copy into.\n * @returns {void}\n *   Nothing.\n */\nfunction patch(from, to) {\n  if (from.position) to.position = position(from)\n}\n\n/**\n * Honor the `data` of `from` and maybe generate an element instead of `to`.\n *\n * @template {HastNodes} Type\n *   Node type.\n * @param {MdastNodes} from\n *   mdast node to use data from.\n * @param {Type} to\n *   hast node to change.\n * @returns {Type | HastElement}\n *   Nothing.\n */\nfunction applyData(from, to) {\n  /** @type {Type | HastElement} */\n  let result = to\n\n  // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n  if (from && from.data) {\n    const hName = from.data.hName\n    const hChildren = from.data.hChildren\n    const hProperties = from.data.hProperties\n\n    if (typeof hName === 'string') {\n      // Transforming the node resulted in an element with a different name\n      // than wanted:\n      if (result.type === 'element') {\n        result.tagName = hName\n      }\n      // Transforming the node resulted in a non-element, which happens for\n      // raw, text, and root nodes (unless custom handlers are passed).\n      // The intent is likely to keep the content around (otherwise: pass\n      // `hChildren`).\n      else {\n        result = {\n          type: 'element',\n          tagName: hName,\n          properties: {},\n          children: []\n        }\n\n        // To do: next major: take the children from the `root`, or inject the\n        // raw/text/comment or so into the element?\n        // if ('children' in node) {\n        //   // @ts-expect-error: assume `children` are allowed in elements.\n        //   result.children = node.children\n        // } else {\n        //   // @ts-expect-error: assume `node` is allowed in elements.\n        //   result.children.push(node)\n        // }\n      }\n    }\n\n    if (result.type === 'element' && hProperties) {\n      result.properties = {...result.properties, ...hProperties}\n    }\n\n    if (\n      'children' in result &&\n      result.children &&\n      hChildren !== null &&\n      hChildren !== undefined\n    ) {\n      // @ts-expect-error: assume valid children are defined.\n      result.children = hChildren\n    }\n  }\n\n  return result\n}\n\n/**\n * Transform an mdast node into a hast node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   mdast node.\n * @param {MdastParents | null | undefined} [parent]\n *   Parent of `node`.\n * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n *   Resulting hast node.\n */\n// To do: next major: do not expose, keep bound.\nexport function one(state, node, parent) {\n  const type = node && node.type\n\n  // Fail on non-nodes.\n  if (!type) {\n    throw new Error('Expected node, got `' + node + '`')\n  }\n\n  if (own.call(state.handlers, type)) {\n    return state.handlers[type](state, node, parent)\n  }\n\n  if (state.passThrough && state.passThrough.includes(type)) {\n    // To do: next major: deep clone.\n    // @ts-expect-error: types of passed through nodes are expected to be added manually.\n    return 'children' in node ? {...node, children: all(state, node)} : node\n  }\n\n  if (state.unknownHandler) {\n    return state.unknownHandler(state, node, parent)\n  }\n\n  return defaultUnknownHandler(state, node)\n}\n\n/**\n * Transform the children of an mdast node into hast nodes.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} parent\n *   mdast node to compile\n * @returns {Array<HastElementContent>}\n *   Resulting hast nodes.\n */\n// To do: next major: do not expose, keep bound.\nexport function all(state, parent) {\n  /** @type {Array<HastElementContent>} */\n  const values = []\n\n  if ('children' in parent) {\n    const nodes = parent.children\n    let index = -1\n    while (++index < nodes.length) {\n      const result = one(state, nodes[index], parent)\n\n      // To do: see if we van clean this? Can we merge texts?\n      if (result) {\n        if (index && nodes[index - 1].type === 'break') {\n          if (!Array.isArray(result) && result.type === 'text') {\n            result.value = result.value.replace(/^\\s+/, '')\n          }\n\n          if (!Array.isArray(result) && result.type === 'element') {\n            const head = result.children[0]\n\n            if (head && head.type === 'text') {\n              head.value = head.value.replace(/^\\s+/, '')\n            }\n          }\n        }\n\n        if (Array.isArray(result)) {\n          values.push(...result)\n        } else {\n          values.push(result)\n        }\n      }\n    }\n  }\n\n  return values\n}\n\n/**\n * Transform an unknown node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   Unknown mdast node.\n * @returns {HastText | HastElement}\n *   Resulting hast node.\n */\nfunction defaultUnknownHandler(state, node) {\n  const data = node.data || {}\n  /** @type {HastText | HastElement} */\n  const result =\n    'value' in node &&\n    !(own.call(data, 'hProperties') || own.call(data, 'hChildren'))\n      ? {type: 'text', value: node.value}\n      : {\n          type: 'element',\n          tagName: 'div',\n          properties: {},\n          children: all(state, node)\n        }\n\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * Wrap `nodes` with line endings between each node.\n *\n * @template {HastContent} Type\n *   Node type.\n * @param {Array<Type>} nodes\n *   List of nodes to wrap.\n * @param {boolean | null | undefined} [loose=false]\n *   Whether to add line endings at start and end.\n * @returns {Array<Type | HastText>}\n *   Wrapped nodes.\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<Type | HastText>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push({type: 'text', value: '\\n'})\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  return result\n}\n","/**\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef NodeLike\n * @property {PositionLike | null | undefined} [position]\n */\n\n/**\n * Check if `node` is generated.\n *\n * @param {NodeLike | null | undefined} [node]\n *   Node to check.\n * @returns {boolean}\n *   Whether `node` is generated (does not have positional info).\n */\nexport function generated(node) {\n  return (\n    !node ||\n    !node.position ||\n    !node.position.start ||\n    !node.position.start.line ||\n    !node.position.start.column ||\n    !node.position.end ||\n    !node.position.end.line ||\n    !node.position.end.column\n  )\n}\n","/**\n * @typedef {import('hast').Content} HastContent\n * @typedef {import('hast').Root} HastRoot\n *\n * @typedef {import('mdast').Content} MdastContent\n * @typedef {import('mdast').Root} MdastRoot\n *\n * @typedef {import('./state.js').Options} Options\n */\n\n/**\n * @typedef {HastRoot | HastContent} HastNodes\n * @typedef {MdastRoot | MdastContent} MdastNodes\n */\n\nimport {footer} from './footer.js'\nimport {createState} from './state.js'\n\n/**\n * Transform mdast to hast.\n *\n * ##### Notes\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most utilities ignore `raw` nodes but two notable ones don’t:\n *\n * *   `hast-util-to-html` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful\n *     if you completely trust authors\n * *   `hast-util-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only\n *     way to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `mdast-util-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * Example: headings (DOM clobbering) in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @param {MdastNodes} tree\n *   mdast tree.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {HastNodes | null | undefined}\n *   hast tree.\n */\n// To do: next major: always return a single `root`.\nexport function toHast(tree, options) {\n  const state = createState(tree, options)\n  const node = state.one(tree, null)\n  const foot = footer(state)\n\n  if (foot) {\n    // @ts-expect-error If there’s a footer, there were definitions, meaning block\n    // content.\n    // So assume `node` is a parent node.\n    node.children.push({type: 'text', value: '\\n'}, foot)\n  }\n\n  // To do: next major: always return root?\n  return Array.isArray(node) ? {type: 'root', children: node} : node\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('./state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Generate a hast footer for called footnote definitions.\n *\n * @param {State} state\n *   Info passed around.\n * @returns {Element | undefined}\n *   `section` element or `undefined`.\n */\nexport function footer(state) {\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n  let index = -1\n\n  while (++index < state.footnoteOrder.length) {\n    const def = state.footnoteById[state.footnoteOrder[index]]\n\n    if (!def) {\n      continue\n    }\n\n    const content = state.all(def)\n    const id = String(def.identifier).toUpperCase()\n    const safeId = normalizeUri(id.toLowerCase())\n    let referenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n\n    while (++referenceIndex <= state.footnoteCounts[id]) {\n      /** @type {Element} */\n      const backReference = {\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            state.clobberPrefix +\n            'fnref-' +\n            safeId +\n            (referenceIndex > 1 ? '-' + referenceIndex : ''),\n          dataFootnoteBackref: true,\n          className: ['data-footnote-backref'],\n          ariaLabel: state.footnoteBackLabel\n        },\n        children: [{type: 'text', value: '↩'}]\n      }\n\n      if (referenceIndex > 1) {\n        backReference.children.push({\n          type: 'element',\n          tagName: 'sup',\n          children: [{type: 'text', value: String(referenceIndex)}]\n        })\n      }\n\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      backReferences.push(backReference)\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: state.clobberPrefix + 'fn-' + safeId},\n      children: state.wrap(content, true)\n    }\n\n    state.patch(def, listItem)\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: state.footnoteLabelTagName,\n        properties: {\n          // To do: use structured clone.\n          ...JSON.parse(JSON.stringify(state.footnoteLabelProperties)),\n          id: 'footnote-label'\n        },\n        children: [{type: 'text', value: state.footnoteLabel}]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: state.wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} Options\n * @typedef {import('unified').Processor<any, any, any, any>} Processor\n *\n * @typedef {import('mdast-util-to-hast')} DoNotTouchAsThisImportIncludesRawInTree\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n// Note: the `<MdastRoot, HastRoot>` overload doesn’t seem to work :'(\n\n/**\n * Plugin that turns markdown into HTML to support rehype.\n *\n * *   If a destination processor is given, that processor runs with a new HTML\n *     (hast) tree (bridge-mode).\n *     As the given processor runs with a hast tree, and rehype plugins support\n *     hast, that means rehype plugins can be used with the given processor.\n *     The hast tree is discarded in the end.\n *     It’s highly unlikely that you want to do this.\n * *   The common case is to not pass a destination processor, in which case the\n *     current processor continues running with a new HTML (hast) tree\n *     (mutate-mode).\n *     As the current processor continues with a hast tree, and rehype plugins\n *     support hast, that means rehype plugins can be used after\n *     `remark-rehype`.\n *     It’s likely that this is what you want to do.\n *\n * @param destination\n *   Optional unified processor.\n * @param options\n *   Options passed to `mdast-util-to-hast`.\n */\nconst remarkRehype =\n  /** @type {(import('unified').Plugin<[Processor, Options?]|[null|undefined, Options?]|[Options]|[], MdastRoot>)} */\n  (\n    function (destination, options) {\n      return destination && 'run' in destination\n        ? bridge(destination, options)\n        : mutate(destination || options)\n    }\n  )\n\nexport default remarkRehype\n\n/**\n * Bridge-mode.\n * Runs the destination with the new hast tree.\n *\n * @type {import('unified').Plugin<[Processor, Options?], MdastRoot>}\n */\nfunction bridge(destination, options) {\n  return (node, file, next) => {\n    destination.run(toHast(node, options), file, (error) => {\n      next(error)\n    })\n  }\n}\n\n/**\n * Mutate-mode.\n * Further plugins run on the hast tree.\n *\n * @type {import('unified').Plugin<[Options?]|void[], MdastRoot, HastRoot>}\n */\nfunction mutate(options) {\n  // @ts-expect-error: assume a corresponding node is returned by `toHast`.\n  return (node) => toHast(node, options)\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * `hast` is close to `React`, but differs in a couple of cases.\n *\n * To get a React property from a hast property, check if it is in\n * `hastToReact`, if it is, then use the corresponding value,\n * otherwise, use the hast property.\n *\n * @type {Record<string, string>}\n */\nexport const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","import StyleToObject from './index.js';\n\nexport default StyleToObject;\n","/**\n * Map of web namespaces.\n *\n * @type {Record<string, string>}\n */\nexport const webNamespaces = {\n  html: 'http://www.w3.org/1999/xhtml',\n  mathml: 'http://www.w3.org/1998/Math/MathML',\n  svg: 'http://www.w3.org/2000/svg',\n  xlink: 'http://www.w3.org/1999/xlink',\n  xml: 'http://www.w3.org/XML/1998/namespace',\n  xmlns: 'http://www.w3.org/2000/xmlns/'\n}\n","/**\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('hast').Content} Content\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Root} Root\n */\n\n/**\n * @typedef {Root | Content} Node\n *\n * @callback CreateElementLike\n *   Function that works somewhat like `React.createElement`.\n * @param {string} name\n *   Element name.\n * @param {any} attributes\n *   Properties.\n * @param {Array<any>} [children]\n *   Children.\n * @returns {any}\n *   Something.\n *\n * @typedef State\n *   Info passed around.\n * @property {Schema} schema\n *   Current schema.\n * @property {string | undefined} prefix\n *   Prefix to use.\n * @property {number} key\n *   Current key.\n * @property {boolean} react\n *   Looks like React.\n * @property {boolean} vue\n *   Looks like Vue.\n * @property {boolean} vdom\n *   Looks like vdom.\n * @property {boolean} hyperscript\n *   Looks like `hyperscript`.\n *\n * @typedef Options\n *   Configuration.\n * @property {string | null | undefined} [prefix]\n *   Prefix to use as a prefix for keys passed in `props` to `h()`, this\n *   behavior is turned off by passing `false` and turned on by passing a\n *   `string`.\n *   By default, `h-` is used as a prefix if the given `h` is detected as being\n *   `virtual-dom/h` or `React.createElement`\n * @property {'html' | 'svg' | null | undefined} [space]\n *   Whether `node` is in the `'html'` or `'svg'` space.\n *   If an `<svg>` element is found when inside the HTML space, `toH`\n *   automatically switches to the SVG space when entering the element, and\n *   switches back when exiting.\n */\n\nimport {html, svg, find, hastToReact} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport styleToObject from 'style-to-object'\nimport {webNamespaces} from 'web-namespaces'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @template {CreateElementLike} H\n *   Type of hyperscript function.\n * @param {H} h\n *   HyperScript function.\n * @param {Node} tree\n *   Tree to transform.\n * @param {string | boolean | Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {ReturnType<H>}\n *   Return type of the hyperscript function.\n */\n// eslint-disable-next-line complexity\nexport function toH(h, tree, options) {\n  if (typeof h !== 'function') {\n    throw new TypeError('h is not a function')\n  }\n\n  const r = react(h)\n  const v = vue(h)\n  const vd = vdom(h)\n  /** @type {string|boolean|null|undefined} */\n  let prefix\n  /** @type {Element} */\n  let node\n\n  if (typeof options === 'string' || typeof options === 'boolean') {\n    prefix = options\n    options = {}\n  } else {\n    if (!options) options = {}\n    prefix = options.prefix\n  }\n\n  if (tree && tree.type === 'root') {\n    const head = tree.children[0]\n    // @ts-expect-error Allow `doctypes` in there, we’ll filter them out later.\n    node =\n      tree.children.length === 1 && head.type === 'element'\n        ? head\n        : {\n            type: 'element',\n            tagName: 'div',\n            properties: {},\n            children: tree.children\n          }\n  } else if (tree && tree.type === 'element') {\n    node = tree\n  } else {\n    throw new Error(\n      'Expected root or element, not `' + ((tree && tree.type) || tree) + '`'\n    )\n  }\n\n  return transform(h, node, {\n    schema: options.space === 'svg' ? svg : html,\n    prefix:\n      prefix === undefined || prefix === null\n        ? r || v || vd\n          ? 'h-'\n          : undefined\n        : typeof prefix === 'string'\n        ? prefix\n        : prefix\n        ? 'h-'\n        : undefined,\n    key: 0,\n    react: r,\n    vue: v,\n    vdom: vd,\n    hyperscript: hyperscript(h)\n  })\n}\n\n/**\n * Transform a hast node through a hyperscript interface to *anything*!\n *\n * @template {CreateElementLike} H\n *   Type of hyperscript function.\n * @param {H} h\n *   HyperScript function.\n * @param {Element} node\n *   Node to transform.\n * @param {State} state\n *   Info passed around.\n * @returns {ReturnType<H>}\n *   Return type of the hyperscript function.\n */\nfunction transform(h, node, state) {\n  const parentSchema = state.schema\n  let schema = parentSchema\n  let name = node.tagName\n  /** @type {Record<string, unknown>} */\n  const attributes = {}\n  /** @type {Array<ReturnType<H>|string>} */\n  const nodes = []\n  let index = -1\n  /** @type {string} */\n  let key\n\n  if (parentSchema.space === 'html' && name.toLowerCase() === 'svg') {\n    schema = svg\n    state.schema = schema\n  }\n\n  for (key in node.properties) {\n    if (node.properties && own.call(node.properties, key)) {\n      addAttribute(attributes, key, node.properties[key], state, name)\n    }\n  }\n\n  if (state.vdom) {\n    if (schema.space === 'html') {\n      name = name.toUpperCase()\n    } else if (schema.space) {\n      attributes.namespace = webNamespaces[schema.space]\n    }\n  }\n\n  if (state.prefix) {\n    state.key++\n    attributes.key = state.prefix + state.key\n  }\n\n  if (node.children) {\n    while (++index < node.children.length) {\n      const value = node.children[index]\n\n      if (value.type === 'element') {\n        nodes.push(transform(h, value, state))\n      } else if (value.type === 'text') {\n        nodes.push(value.value)\n      }\n    }\n  }\n\n  // Restore parent schema.\n  state.schema = parentSchema\n\n  // Ensure no React warnings are triggered for void elements having children\n  // passed in.\n  return nodes.length > 0\n    ? h.call(node, name, attributes, nodes)\n    : h.call(node, name, attributes)\n}\n\n/**\n * Add an attribute to `props`.\n *\n * @param {Record<string, unknown>} props\n *   Map.\n * @param {string} prop\n *   Key.\n * @param {unknown} value\n *   Value.\n * @param {State} state\n *   Info passed around.\n * @param {string} name\n *   Element name.\n * @returns {void}\n *   Nothing.\n */\n// eslint-disable-next-line complexity, max-params\nfunction addAttribute(props, prop, value, state, name) {\n  const info = find(state.schema, prop)\n  /** @type {string | undefined} */\n  let subprop\n\n  // Ignore nullish and `NaN` values.\n  // Ignore `false` and falsey known booleans for hyperlike DSLs.\n  if (\n    value === undefined ||\n    value === null ||\n    (typeof value === 'number' && Number.isNaN(value)) ||\n    (value === false && (state.vue || state.vdom || state.hyperscript)) ||\n    (!value && info.boolean && (state.vue || state.vdom || state.hyperscript))\n  ) {\n    return\n  }\n\n  if (Array.isArray(value)) {\n    // Accept `array`.\n    // Most props are space-separated.\n    value = info.commaSeparated ? commas(value) : spaces(value)\n  }\n\n  // Treat `true` and truthy known booleans.\n  if (info.boolean && state.hyperscript) {\n    value = ''\n  }\n\n  // VDOM, Vue, and React accept `style` as object.\n  if (\n    info.property === 'style' &&\n    typeof value === 'string' &&\n    (state.react || state.vue || state.vdom)\n  ) {\n    value = parseStyle(value, name)\n  }\n\n  // Vue 3 (used in our tests) doesn’t need this anymore.\n  // Some major in the future we can drop Vue 2 support.\n  /* c8 ignore next 2 */\n  if (state.vue) {\n    if (info.property !== 'style') subprop = 'attrs'\n  } else if (!info.mustUseProperty) {\n    if (state.vdom) {\n      if (info.property !== 'style') subprop = 'attributes'\n    } else if (state.hyperscript) {\n      subprop = 'attrs'\n    }\n  }\n\n  if (subprop) {\n    props[subprop] = Object.assign(props[subprop] || {}, {\n      [info.attribute]: value\n    })\n  } else if (info.space && state.react) {\n    props[hastToReact[info.property] || info.property] = value\n  } else {\n    props[info.attribute] = value\n  }\n}\n\n/**\n * Check if `h` is `react.createElement`.\n *\n * @param {CreateElementLike} h\n *   HyperScript function.\n * @returns {boolean}\n *   Looks like React.\n */\nfunction react(h) {\n  const node = /** @type {unknown} */ (h('div', {}))\n  return Boolean(\n    node &&\n      // @ts-expect-error Looks like a React node.\n      ('_owner' in node || '_store' in node) &&\n      // @ts-expect-error Looks like a React node.\n      (node.key === undefined || node.key === null)\n  )\n}\n\n/**\n * Check if `h` is `hyperscript`.\n *\n * @param {CreateElementLike} h\n *   HyperScript function.\n * @returns {boolean}\n *   Looks like `hyperscript`.\n */\nfunction hyperscript(h) {\n  return 'context' in h && 'cleanup' in h\n}\n\n/**\n * Check if `h` is `virtual-dom/h`.\n *\n * @param {CreateElementLike} h\n *   HyperScript function.\n * @returns {boolean}\n *   Looks like `virtual-dom`\n */\nfunction vdom(h) {\n  const node = /** @type {unknown} */ (h('div', {}))\n  // @ts-expect-error Looks like a vnode.\n  return node.type === 'VirtualNode'\n}\n\n/**\n * Check if `h` is Vue.\n *\n * @param {CreateElementLike} h\n *   HyperScript function.\n * @returns {boolean}\n *   Looks like Vue.\n */\nfunction vue(h) {\n  // Vue 3 (used in our tests) doesn’t need this anymore.\n  // Some major in the future we can drop Vue 2 support.\n  /* c8 ignore next 3 */\n  const node = /** @type {unknown} */ (h('div', {}))\n  // @ts-expect-error Looks like a Vue node.\n  return Boolean(node && node.context && node.context._isVue)\n}\n\n/**\n * Parse a declaration into an object.\n *\n * @param {string} value\n *   CSS declarations.\n * @param {string} tagName\n *   Tag name.\n * @returns {Record<string, string>}\n *   Properties.\n */\nfunction parseStyle(value, tagName) {\n  /** @type {Record<string, string>} */\n  const result = {}\n\n  try {\n    styleToObject(value, (name, value) => {\n      if (name.slice(0, 4) === '-ms-') name = 'ms-' + name.slice(4)\n\n      result[\n        name.replace(\n          /-([a-z])/g,\n          /**\n           * @param {string} _\n           * @param {string} $1\n           * @returns {string}\n           */\n          (_, $1) => $1.toUpperCase()\n        )\n      ] = value\n    })\n  } catch (error_) {\n    const error = /** @type {Error} */ (error_)\n    error.message =\n      tagName + '[style]' + error.message.slice('undefined'.length)\n    throw error\n  }\n\n  return result\n}\n","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('react').ReactElement<unknown>} ReactElement\n *\n * @callback CreateElementLike\n * @param {any} name\n * @param {any} props\n * @param {...ReactNode} children\n * @returns {ReactNode}\n *\n * @typedef SharedOptions\n *   Base configuration (without `components`).\n * @property {CreateElementLike} createElement\n *   How to create elements or components.\n *   You should typically pass `React.createElement`.\n * @property {((props: any) => ReactNode)|undefined} [Fragment]\n *   Create fragments instead of an outer `<div>` if available.\n *   You should typically pass `React.Fragment`.\n * @property {string|undefined} [prefix='h-']\n *   React key prefix.\n *\n * @typedef {SharedOptions & (import('./complex-types').ComponentsWithNodeOptions|import('./complex-types').ComponentsWithoutNodeOptions)} Options\n *   Configuration.\n */\n\nimport {toH} from 'hast-to-hyperscript'\n// @ts-expect-error: hush.\nimport tableCellStyle from '@mapbox/hast-util-table-cell-style'\nimport {whitespace} from 'hast-util-whitespace'\n\nconst own = {}.hasOwnProperty\nconst tableElements = new Set(['table', 'thead', 'tbody', 'tfoot', 'tr'])\n\n/**\n * Compile HTML to React nodes.\n *\n * > 👉 **Note**: this compiler returns a React node where compilers typically\n * > return `string`.\n * > When using `.stringify`, the result is such a React node.\n * > When using `.process` (or `.processSync`), the result is available at\n * > `file.result`.\n *\n * @this {import('unified').Processor}\n * @type {import('unified').Plugin<[Options], Root, ReactElement>}\n */\nexport default function rehypeReact(options) {\n  if (!options || typeof options.createElement !== 'function') {\n    throw new TypeError('createElement is not a function')\n  }\n\n  const createElement = options.createElement\n\n  Object.assign(this, {Compiler: compiler})\n\n  /** @type {import('unified').CompilerFunction<Root, ReactNode>} */\n  function compiler(node) {\n    /** @type {ReactNode} */\n    // @ts-expect-error: assume `name` is a known element.\n    let result = toH(h, tableCellStyle(node), options.prefix)\n\n    if (node.type === 'root') {\n      // Invert <https://github.com/syntax-tree/hast-to-hyperscript/blob/d227372/index.js#L46-L56>.\n      result =\n        result &&\n        typeof result === 'object' &&\n        'type' in result &&\n        'props' in result &&\n        result.type === 'div' &&\n        (node.children.length !== 1 || node.children[0].type !== 'element')\n          ? // `children` does exist.\n            // type-coverage:ignore-next-line\n            result.props.children\n          : [result]\n\n      return createElement(options.Fragment || 'div', {}, result)\n    }\n\n    return result\n  }\n\n  /**\n   * @param {keyof JSX.IntrinsicElements} name\n   * @param {Record<string, unknown>} props\n   * @param {Array<ReactNode>} [children]\n   * @returns {ReactNode}\n   */\n  function h(name, props, children) {\n    // Currently, a warning is triggered by react for *any* white space in\n    // tables.\n    // So we remove the pretty lines for now.\n    // See: <https://github.com/facebook/react/pull/7081>.\n    // See: <https://github.com/facebook/react/pull/7515>.\n    // See: <https://github.com/remarkjs/remark-react/issues/64>.\n    // See: <https://github.com/rehypejs/rehype-react/pull/29>.\n    // See: <https://github.com/rehypejs/rehype-react/pull/32>.\n    // See: <https://github.com/rehypejs/rehype-react/pull/45>.\n    if (children && tableElements.has(name)) {\n      children = children.filter((child) => !whitespace(child))\n    }\n\n    if (options.components && own.call(options.components, name)) {\n      const component = options.components[name]\n\n      if (options.passNode && typeof component === 'function') {\n        // @ts-expect-error: `toH` passes the current node.\n        // type-coverage:ignore-next-line\n        props = Object.assign({node: this}, props)\n      }\n\n      return createElement(component, props, children)\n    }\n\n    return createElement(name, props, children)\n  }\n}\n","/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {unknown} thing\n *   Thing to check (typically `Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`).\n *   If a node is passed it must be a `Text` node, whose `value` field is\n *   checked.\n */\nexport function whitespace(thing) {\n  /** @type {string} */\n  const value =\n    // @ts-expect-error looks like a node.\n    thing && typeof thing === 'object' && thing.type === 'text'\n      ? // @ts-expect-error looks like a text.\n        thing.value || ''\n      : thing\n\n  // HTML whitespace expression.\n  // See <https://infra.spec.whatwg.org/#ascii-whitespace>.\n  return typeof value === 'string' && value.replace(/[ \\t\\n\\f\\r]/g, '') === ''\n}\n","import React, { useEffect } from \"react\"\r\n\r\nconst Comments = () => {\r\n  useEffect(() => {\r\n    const script = document.createElement(\"script\")\r\n    script.src = \"https://cdn.commento.io/js/commento.js\"\r\n    script.async = true\r\n\r\n    const comments = document.getElementById(\"comments-container\")\r\n    if (comments) comments.appendChild(script)\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <div id=\"comments-container\"></div>\r\n      <div id=\"commento\"></div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Comments\r\n","export default function _taggedTemplateLiteralLoose(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n  strings.raw = raw;\n  return strings;\n}","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","function memoize(fn) {\n  var cache = Object.create(null);\n  return function (arg) {\n    if (cache[arg] === undefined) cache[arg] = fn(arg);\n    return cache[arg];\n  };\n}\n\nexport default memoize;\n","import memoize from '@emotion/memoize';\n\nvar reactPropsRegex = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|abbr|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|enterKeyHint|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/; // https://esbench.com/bench/5bfee68a4cd7e6009ef61d23\n\nvar isPropValid = /* #__PURE__ */memoize(function (prop) {\n  return reactPropsRegex.test(prop) || prop.charCodeAt(0) === 111\n  /* o */\n  && prop.charCodeAt(1) === 110\n  /* n */\n  && prop.charCodeAt(2) < 91;\n}\n/* Z+1 */\n);\n\nexport default isPropValid;\n","/*\n\nBased off glamor's StyleSheet, thanks Sunil ❤️\n\nhigh performance StyleSheet for css-in-js systems\n\n- uses multiple style tags behind the scenes for millions of rules\n- uses `insertRule` for appending in production for *much* faster performance\n\n// usage\n\nimport { StyleSheet } from '@emotion/sheet'\n\nlet styleSheet = new StyleSheet({ key: '', container: document.head })\n\nstyleSheet.insert('#box { border: 1px solid red; }')\n- appends a css rule into the stylesheet\n\nstyleSheet.flush()\n- empties the stylesheet of all its contents\n\n*/\n// $FlowFixMe\nfunction sheetForTag(tag) {\n  if (tag.sheet) {\n    // $FlowFixMe\n    return tag.sheet;\n  } // this weirdness brought to you by firefox\n\n  /* istanbul ignore next */\n\n\n  for (var i = 0; i < document.styleSheets.length; i++) {\n    if (document.styleSheets[i].ownerNode === tag) {\n      // $FlowFixMe\n      return document.styleSheets[i];\n    }\n  }\n}\n\nfunction createStyleElement(options) {\n  var tag = document.createElement('style');\n  tag.setAttribute('data-emotion', options.key);\n\n  if (options.nonce !== undefined) {\n    tag.setAttribute('nonce', options.nonce);\n  }\n\n  tag.appendChild(document.createTextNode(''));\n  tag.setAttribute('data-s', '');\n  return tag;\n}\n\nvar StyleSheet = /*#__PURE__*/function () {\n  // Using Node instead of HTMLElement since container may be a ShadowRoot\n  function StyleSheet(options) {\n    var _this = this;\n\n    this._insertTag = function (tag) {\n      var before;\n\n      if (_this.tags.length === 0) {\n        if (_this.insertionPoint) {\n          before = _this.insertionPoint.nextSibling;\n        } else if (_this.prepend) {\n          before = _this.container.firstChild;\n        } else {\n          before = _this.before;\n        }\n      } else {\n        before = _this.tags[_this.tags.length - 1].nextSibling;\n      }\n\n      _this.container.insertBefore(tag, before);\n\n      _this.tags.push(tag);\n    };\n\n    this.isSpeedy = options.speedy === undefined ? process.env.NODE_ENV === 'production' : options.speedy;\n    this.tags = [];\n    this.ctr = 0;\n    this.nonce = options.nonce; // key is the value of the data-emotion attribute, it's used to identify different sheets\n\n    this.key = options.key;\n    this.container = options.container;\n    this.prepend = options.prepend;\n    this.insertionPoint = options.insertionPoint;\n    this.before = null;\n  }\n\n  var _proto = StyleSheet.prototype;\n\n  _proto.hydrate = function hydrate(nodes) {\n    nodes.forEach(this._insertTag);\n  };\n\n  _proto.insert = function insert(rule) {\n    // the max length is how many rules we have per style tag, it's 65000 in speedy mode\n    // it's 1 in dev because we insert source maps that map a single rule to a location\n    // and you can only have one source map per style tag\n    if (this.ctr % (this.isSpeedy ? 65000 : 1) === 0) {\n      this._insertTag(createStyleElement(this));\n    }\n\n    var tag = this.tags[this.tags.length - 1];\n\n    if (process.env.NODE_ENV !== 'production') {\n      var isImportRule = rule.charCodeAt(0) === 64 && rule.charCodeAt(1) === 105;\n\n      if (isImportRule && this._alreadyInsertedOrderInsensitiveRule) {\n        // this would only cause problem in speedy mode\n        // but we don't want enabling speedy to affect the observable behavior\n        // so we report this error at all times\n        console.error(\"You're attempting to insert the following rule:\\n\" + rule + '\\n\\n`@import` rules must be before all other types of rules in a stylesheet but other rules have already been inserted. Please ensure that `@import` rules are before all other rules.');\n      }\n      this._alreadyInsertedOrderInsensitiveRule = this._alreadyInsertedOrderInsensitiveRule || !isImportRule;\n    }\n\n    if (this.isSpeedy) {\n      var sheet = sheetForTag(tag);\n\n      try {\n        // this is the ultrafast version, works across browsers\n        // the big drawback is that the css won't be editable in devtools\n        sheet.insertRule(rule, sheet.cssRules.length);\n      } catch (e) {\n        if (process.env.NODE_ENV !== 'production' && !/:(-moz-placeholder|-moz-focus-inner|-moz-focusring|-ms-input-placeholder|-moz-read-write|-moz-read-only|-ms-clear|-ms-expand|-ms-reveal){/.test(rule)) {\n          console.error(\"There was a problem inserting the following rule: \\\"\" + rule + \"\\\"\", e);\n        }\n      }\n    } else {\n      tag.appendChild(document.createTextNode(rule));\n    }\n\n    this.ctr++;\n  };\n\n  _proto.flush = function flush() {\n    // $FlowFixMe\n    this.tags.forEach(function (tag) {\n      return tag.parentNode && tag.parentNode.removeChild(tag);\n    });\n    this.tags = [];\n    this.ctr = 0;\n\n    if (process.env.NODE_ENV !== 'production') {\n      this._alreadyInsertedOrderInsensitiveRule = false;\n    }\n  };\n\n  return StyleSheet;\n}();\n\nexport { StyleSheet };\n","/**\n * @param {number}\n * @return {number}\n */\nexport var abs = Math.abs\n\n/**\n * @param {number}\n * @return {string}\n */\nexport var from = String.fromCharCode\n\n/**\n * @param {object}\n * @return {object}\n */\nexport var assign = Object.assign\n\n/**\n * @param {string} value\n * @param {number} length\n * @return {number}\n */\nexport function hash (value, length) {\n\treturn charat(value, 0) ^ 45 ? (((((((length << 2) ^ charat(value, 0)) << 2) ^ charat(value, 1)) << 2) ^ charat(value, 2)) << 2) ^ charat(value, 3) : 0\n}\n\n/**\n * @param {string} value\n * @return {string}\n */\nexport function trim (value) {\n\treturn value.trim()\n}\n\n/**\n * @param {string} value\n * @param {RegExp} pattern\n * @return {string?}\n */\nexport function match (value, pattern) {\n\treturn (value = pattern.exec(value)) ? value[0] : value\n}\n\n/**\n * @param {string} value\n * @param {(string|RegExp)} pattern\n * @param {string} replacement\n * @return {string}\n */\nexport function replace (value, pattern, replacement) {\n\treturn value.replace(pattern, replacement)\n}\n\n/**\n * @param {string} value\n * @param {string} search\n * @return {number}\n */\nexport function indexof (value, search) {\n\treturn value.indexOf(search)\n}\n\n/**\n * @param {string} value\n * @param {number} index\n * @return {number}\n */\nexport function charat (value, index) {\n\treturn value.charCodeAt(index) | 0\n}\n\n/**\n * @param {string} value\n * @param {number} begin\n * @param {number} end\n * @return {string}\n */\nexport function substr (value, begin, end) {\n\treturn value.slice(begin, end)\n}\n\n/**\n * @param {string} value\n * @return {number}\n */\nexport function strlen (value) {\n\treturn value.length\n}\n\n/**\n * @param {any[]} value\n * @return {number}\n */\nexport function sizeof (value) {\n\treturn value.length\n}\n\n/**\n * @param {any} value\n * @param {any[]} array\n * @return {any}\n */\nexport function append (value, array) {\n\treturn array.push(value), value\n}\n\n/**\n * @param {string[]} array\n * @param {function} callback\n * @return {string}\n */\nexport function combine (array, callback) {\n\treturn array.map(callback).join('')\n}\n","import {from, trim, charat, strlen, substr, append, assign} from './Utility.js'\n\nexport var line = 1\nexport var column = 1\nexport var length = 0\nexport var position = 0\nexport var character = 0\nexport var characters = ''\n\n/**\n * @param {string} value\n * @param {object | null} root\n * @param {object | null} parent\n * @param {string} type\n * @param {string[] | string} props\n * @param {object[] | string} children\n * @param {number} length\n */\nexport function node (value, root, parent, type, props, children, length) {\n\treturn {value: value, root: root, parent: parent, type: type, props: props, children: children, line: line, column: column, length: length, return: ''}\n}\n\n/**\n * @param {object} root\n * @param {object} props\n * @return {object}\n */\nexport function copy (root, props) {\n\treturn assign(node('', null, null, '', null, null, 0), root, {length: -root.length}, props)\n}\n\n/**\n * @return {number}\n */\nexport function char () {\n\treturn character\n}\n\n/**\n * @return {number}\n */\nexport function prev () {\n\tcharacter = position > 0 ? charat(characters, --position) : 0\n\n\tif (column--, character === 10)\n\t\tcolumn = 1, line--\n\n\treturn character\n}\n\n/**\n * @return {number}\n */\nexport function next () {\n\tcharacter = position < length ? charat(characters, position++) : 0\n\n\tif (column++, character === 10)\n\t\tcolumn = 1, line++\n\n\treturn character\n}\n\n/**\n * @return {number}\n */\nexport function peek () {\n\treturn charat(characters, position)\n}\n\n/**\n * @return {number}\n */\nexport function caret () {\n\treturn position\n}\n\n/**\n * @param {number} begin\n * @param {number} end\n * @return {string}\n */\nexport function slice (begin, end) {\n\treturn substr(characters, begin, end)\n}\n\n/**\n * @param {number} type\n * @return {number}\n */\nexport function token (type) {\n\tswitch (type) {\n\t\t// \\0 \\t \\n \\r \\s whitespace token\n\t\tcase 0: case 9: case 10: case 13: case 32:\n\t\t\treturn 5\n\t\t// ! + , / > @ ~ isolate token\n\t\tcase 33: case 43: case 44: case 47: case 62: case 64: case 126:\n\t\t// ; { } breakpoint token\n\t\tcase 59: case 123: case 125:\n\t\t\treturn 4\n\t\t// : accompanied token\n\t\tcase 58:\n\t\t\treturn 3\n\t\t// \" ' ( [ opening delimit token\n\t\tcase 34: case 39: case 40: case 91:\n\t\t\treturn 2\n\t\t// ) ] closing delimit token\n\t\tcase 41: case 93:\n\t\t\treturn 1\n\t}\n\n\treturn 0\n}\n\n/**\n * @param {string} value\n * @return {any[]}\n */\nexport function alloc (value) {\n\treturn line = column = 1, length = strlen(characters = value), position = 0, []\n}\n\n/**\n * @param {any} value\n * @return {any}\n */\nexport function dealloc (value) {\n\treturn characters = '', value\n}\n\n/**\n * @param {number} type\n * @return {string}\n */\nexport function delimit (type) {\n\treturn trim(slice(position - 1, delimiter(type === 91 ? type + 2 : type === 40 ? type + 1 : type)))\n}\n\n/**\n * @param {string} value\n * @return {string[]}\n */\nexport function tokenize (value) {\n\treturn dealloc(tokenizer(alloc(value)))\n}\n\n/**\n * @param {number} type\n * @return {string}\n */\nexport function whitespace (type) {\n\twhile (character = peek())\n\t\tif (character < 33)\n\t\t\tnext()\n\t\telse\n\t\t\tbreak\n\n\treturn token(type) > 2 || token(character) > 3 ? '' : ' '\n}\n\n/**\n * @param {string[]} children\n * @return {string[]}\n */\nexport function tokenizer (children) {\n\twhile (next())\n\t\tswitch (token(character)) {\n\t\t\tcase 0: append(identifier(position - 1), children)\n\t\t\t\tbreak\n\t\t\tcase 2: append(delimit(character), children)\n\t\t\t\tbreak\n\t\t\tdefault: append(from(character), children)\n\t\t}\n\n\treturn children\n}\n\n/**\n * @param {number} index\n * @param {number} count\n * @return {string}\n */\nexport function escaping (index, count) {\n\twhile (--count && next())\n\t\t// not 0-9 A-F a-f\n\t\tif (character < 48 || character > 102 || (character > 57 && character < 65) || (character > 70 && character < 97))\n\t\t\tbreak\n\n\treturn slice(index, caret() + (count < 6 && peek() == 32 && next() == 32))\n}\n\n/**\n * @param {number} type\n * @return {number}\n */\nexport function delimiter (type) {\n\twhile (next())\n\t\tswitch (character) {\n\t\t\t// ] ) \" '\n\t\t\tcase type:\n\t\t\t\treturn position\n\t\t\t// \" '\n\t\t\tcase 34: case 39:\n\t\t\t\tif (type !== 34 && type !== 39)\n\t\t\t\t\tdelimiter(character)\n\t\t\t\tbreak\n\t\t\t// (\n\t\t\tcase 40:\n\t\t\t\tif (type === 41)\n\t\t\t\t\tdelimiter(type)\n\t\t\t\tbreak\n\t\t\t// \\\n\t\t\tcase 92:\n\t\t\t\tnext()\n\t\t\t\tbreak\n\t\t}\n\n\treturn position\n}\n\n/**\n * @param {number} type\n * @param {number} index\n * @return {number}\n */\nexport function commenter (type, index) {\n\twhile (next())\n\t\t// //\n\t\tif (type + character === 47 + 10)\n\t\t\tbreak\n\t\t// /*\n\t\telse if (type + character === 42 + 42 && peek() === 47)\n\t\t\tbreak\n\n\treturn '/*' + slice(index, position - 1) + '*' + from(type === 47 ? type : next())\n}\n\n/**\n * @param {number} index\n * @return {string}\n */\nexport function identifier (index) {\n\twhile (!token(peek()))\n\t\tnext()\n\n\treturn slice(index, position)\n}\n","export var MS = '-ms-'\nexport var MOZ = '-moz-'\nexport var WEBKIT = '-webkit-'\n\nexport var COMMENT = 'comm'\nexport var RULESET = 'rule'\nexport var DECLARATION = 'decl'\n\nexport var PAGE = '@page'\nexport var MEDIA = '@media'\nexport var IMPORT = '@import'\nexport var CHARSET = '@charset'\nexport var VIEWPORT = '@viewport'\nexport var SUPPORTS = '@supports'\nexport var DOCUMENT = '@document'\nexport var NAMESPACE = '@namespace'\nexport var KEYFRAMES = '@keyframes'\nexport var FONT_FACE = '@font-face'\nexport var COUNTER_STYLE = '@counter-style'\nexport var FONT_FEATURE_VALUES = '@font-feature-values'\n","import {IMPORT, COMMENT, RULESET, DECLARATION, KEYFRAMES} from './Enum.js'\nimport {strlen, sizeof} from './Utility.js'\n\n/**\n * @param {object[]} children\n * @param {function} callback\n * @return {string}\n */\nexport function serialize (children, callback) {\n\tvar output = ''\n\tvar length = sizeof(children)\n\n\tfor (var i = 0; i < length; i++)\n\t\toutput += callback(children[i], i, children, callback) || ''\n\n\treturn output\n}\n\n/**\n * @param {object} element\n * @param {number} index\n * @param {object[]} children\n * @param {function} callback\n * @return {string}\n */\nexport function stringify (element, index, children, callback) {\n\tswitch (element.type) {\n\t\tcase IMPORT: case DECLARATION: return element.return = element.return || element.value\n\t\tcase COMMENT: return ''\n\t\tcase KEYFRAMES: return element.return = element.value + '{' + serialize(element.children, callback) + '}'\n\t\tcase RULESET: element.value = element.props.join(',')\n\t}\n\n\treturn strlen(children = serialize(element.children, callback)) ? element.return = element.value + '{' + children + '}' : ''\n}\n","import {COMMENT, RULESET, DECLARATION} from './Enum.js'\nimport {abs, charat, trim, from, sizeof, strlen, substr, append, replace, indexof} from './Utility.js'\nimport {node, char, prev, next, peek, caret, alloc, dealloc, delimit, whitespace, escaping, identifier, commenter} from './Tokenizer.js'\n\n/**\n * @param {string} value\n * @return {object[]}\n */\nexport function compile (value) {\n\treturn dealloc(parse('', null, null, null, [''], value = alloc(value), 0, [0], value))\n}\n\n/**\n * @param {string} value\n * @param {object} root\n * @param {object?} parent\n * @param {string[]} rule\n * @param {string[]} rules\n * @param {string[]} rulesets\n * @param {number[]} pseudo\n * @param {number[]} points\n * @param {string[]} declarations\n * @return {object}\n */\nexport function parse (value, root, parent, rule, rules, rulesets, pseudo, points, declarations) {\n\tvar index = 0\n\tvar offset = 0\n\tvar length = pseudo\n\tvar atrule = 0\n\tvar property = 0\n\tvar previous = 0\n\tvar variable = 1\n\tvar scanning = 1\n\tvar ampersand = 1\n\tvar character = 0\n\tvar type = ''\n\tvar props = rules\n\tvar children = rulesets\n\tvar reference = rule\n\tvar characters = type\n\n\twhile (scanning)\n\t\tswitch (previous = character, character = next()) {\n\t\t\t// (\n\t\t\tcase 40:\n\t\t\t\tif (previous != 108 && charat(characters, length - 1) == 58) {\n\t\t\t\t\tif (indexof(characters += replace(delimit(character), '&', '&\\f'), '&\\f') != -1)\n\t\t\t\t\t\tampersand = -1\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t// \" ' [\n\t\t\tcase 34: case 39: case 91:\n\t\t\t\tcharacters += delimit(character)\n\t\t\t\tbreak\n\t\t\t// \\t \\n \\r \\s\n\t\t\tcase 9: case 10: case 13: case 32:\n\t\t\t\tcharacters += whitespace(previous)\n\t\t\t\tbreak\n\t\t\t// \\\n\t\t\tcase 92:\n\t\t\t\tcharacters += escaping(caret() - 1, 7)\n\t\t\t\tcontinue\n\t\t\t// /\n\t\t\tcase 47:\n\t\t\t\tswitch (peek()) {\n\t\t\t\t\tcase 42: case 47:\n\t\t\t\t\t\tappend(comment(commenter(next(), caret()), root, parent), declarations)\n\t\t\t\t\t\tbreak\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tcharacters += '/'\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\t// {\n\t\t\tcase 123 * variable:\n\t\t\t\tpoints[index++] = strlen(characters) * ampersand\n\t\t\t// } ; \\0\n\t\t\tcase 125 * variable: case 59: case 0:\n\t\t\t\tswitch (character) {\n\t\t\t\t\t// \\0 }\n\t\t\t\t\tcase 0: case 125: scanning = 0\n\t\t\t\t\t// ;\n\t\t\t\t\tcase 59 + offset:\n\t\t\t\t\t\tif (property > 0 && (strlen(characters) - length))\n\t\t\t\t\t\t\tappend(property > 32 ? declaration(characters + ';', rule, parent, length - 1) : declaration(replace(characters, ' ', '') + ';', rule, parent, length - 2), declarations)\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// @ ;\n\t\t\t\t\tcase 59: characters += ';'\n\t\t\t\t\t// { rule/at-rule\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tappend(reference = ruleset(characters, root, parent, index, offset, rules, points, type, props = [], children = [], length), rulesets)\n\n\t\t\t\t\t\tif (character === 123)\n\t\t\t\t\t\t\tif (offset === 0)\n\t\t\t\t\t\t\t\tparse(characters, root, reference, reference, props, rulesets, length, points, children)\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tswitch (atrule === 99 && charat(characters, 3) === 110 ? 100 : atrule) {\n\t\t\t\t\t\t\t\t\t// d m s\n\t\t\t\t\t\t\t\t\tcase 100: case 109: case 115:\n\t\t\t\t\t\t\t\t\t\tparse(value, reference, reference, rule && append(ruleset(value, reference, reference, 0, 0, rules, points, type, rules, props = [], length), children), rules, children, length, points, rule ? props : children)\n\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\tparse(characters, reference, reference, reference, [''], children, 0, points, children)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tindex = offset = property = 0, variable = ampersand = 1, type = characters = '', length = pseudo\n\t\t\t\tbreak\n\t\t\t// :\n\t\t\tcase 58:\n\t\t\t\tlength = 1 + strlen(characters), property = previous\n\t\t\tdefault:\n\t\t\t\tif (variable < 1)\n\t\t\t\t\tif (character == 123)\n\t\t\t\t\t\t--variable\n\t\t\t\t\telse if (character == 125 && variable++ == 0 && prev() == 125)\n\t\t\t\t\t\tcontinue\n\n\t\t\t\tswitch (characters += from(character), character * variable) {\n\t\t\t\t\t// &\n\t\t\t\t\tcase 38:\n\t\t\t\t\t\tampersand = offset > 0 ? 1 : (characters += '\\f', -1)\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// ,\n\t\t\t\t\tcase 44:\n\t\t\t\t\t\tpoints[index++] = (strlen(characters) - 1) * ampersand, ampersand = 1\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// @\n\t\t\t\t\tcase 64:\n\t\t\t\t\t\t// -\n\t\t\t\t\t\tif (peek() === 45)\n\t\t\t\t\t\t\tcharacters += delimit(next())\n\n\t\t\t\t\t\tatrule = peek(), offset = length = strlen(type = characters += identifier(caret())), character++\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// -\n\t\t\t\t\tcase 45:\n\t\t\t\t\t\tif (previous === 45 && strlen(characters) == 2)\n\t\t\t\t\t\t\tvariable = 0\n\t\t\t\t}\n\t\t}\n\n\treturn rulesets\n}\n\n/**\n * @param {string} value\n * @param {object} root\n * @param {object?} parent\n * @param {number} index\n * @param {number} offset\n * @param {string[]} rules\n * @param {number[]} points\n * @param {string} type\n * @param {string[]} props\n * @param {string[]} children\n * @param {number} length\n * @return {object}\n */\nexport function ruleset (value, root, parent, index, offset, rules, points, type, props, children, length) {\n\tvar post = offset - 1\n\tvar rule = offset === 0 ? rules : ['']\n\tvar size = sizeof(rule)\n\n\tfor (var i = 0, j = 0, k = 0; i < index; ++i)\n\t\tfor (var x = 0, y = substr(value, post + 1, post = abs(j = points[i])), z = value; x < size; ++x)\n\t\t\tif (z = trim(j > 0 ? rule[x] + ' ' + y : replace(y, /&\\f/g, rule[x])))\n\t\t\t\tprops[k++] = z\n\n\treturn node(value, root, parent, offset === 0 ? RULESET : type, props, children, length)\n}\n\n/**\n * @param {number} value\n * @param {object} root\n * @param {object?} parent\n * @return {object}\n */\nexport function comment (value, root, parent) {\n\treturn node(value, root, parent, COMMENT, from(char()), substr(value, 2, -2), 0)\n}\n\n/**\n * @param {string} value\n * @param {object} root\n * @param {object?} parent\n * @param {number} length\n * @return {object}\n */\nexport function declaration (value, root, parent, length) {\n\treturn node(value, root, parent, DECLARATION, substr(value, 0, length), substr(value, length + 1, -1), length)\n}\n","import { StyleSheet } from '@emotion/sheet';\nimport { dealloc, alloc, next, token, from, peek, delimit, slice, position, RULESET, combine, match, serialize, copy, replace, WEBKIT, MOZ, MS, KEYFRAMES, DECLARATION, hash, charat, strlen, indexof, stringify, COMMENT, rulesheet, middleware, compile } from 'stylis';\nimport '@emotion/weak-memoize';\nimport '@emotion/memoize';\n\nvar identifierWithPointTracking = function identifierWithPointTracking(begin, points, index) {\n  var previous = 0;\n  var character = 0;\n\n  while (true) {\n    previous = character;\n    character = peek(); // &\\f\n\n    if (previous === 38 && character === 12) {\n      points[index] = 1;\n    }\n\n    if (token(character)) {\n      break;\n    }\n\n    next();\n  }\n\n  return slice(begin, position);\n};\n\nvar toRules = function toRules(parsed, points) {\n  // pretend we've started with a comma\n  var index = -1;\n  var character = 44;\n\n  do {\n    switch (token(character)) {\n      case 0:\n        // &\\f\n        if (character === 38 && peek() === 12) {\n          // this is not 100% correct, we don't account for literal sequences here - like for example quoted strings\n          // stylis inserts \\f after & to know when & where it should replace this sequence with the context selector\n          // and when it should just concatenate the outer and inner selectors\n          // it's very unlikely for this sequence to actually appear in a different context, so we just leverage this fact here\n          points[index] = 1;\n        }\n\n        parsed[index] += identifierWithPointTracking(position - 1, points, index);\n        break;\n\n      case 2:\n        parsed[index] += delimit(character);\n        break;\n\n      case 4:\n        // comma\n        if (character === 44) {\n          // colon\n          parsed[++index] = peek() === 58 ? '&\\f' : '';\n          points[index] = parsed[index].length;\n          break;\n        }\n\n      // fallthrough\n\n      default:\n        parsed[index] += from(character);\n    }\n  } while (character = next());\n\n  return parsed;\n};\n\nvar getRules = function getRules(value, points) {\n  return dealloc(toRules(alloc(value), points));\n}; // WeakSet would be more appropriate, but only WeakMap is supported in IE11\n\n\nvar fixedElements = /* #__PURE__ */new WeakMap();\nvar compat = function compat(element) {\n  if (element.type !== 'rule' || !element.parent || // positive .length indicates that this rule contains pseudo\n  // negative .length indicates that this rule has been already prefixed\n  element.length < 1) {\n    return;\n  }\n\n  var value = element.value,\n      parent = element.parent;\n  var isImplicitRule = element.column === parent.column && element.line === parent.line;\n\n  while (parent.type !== 'rule') {\n    parent = parent.parent;\n    if (!parent) return;\n  } // short-circuit for the simplest case\n\n\n  if (element.props.length === 1 && value.charCodeAt(0) !== 58\n  /* colon */\n  && !fixedElements.get(parent)) {\n    return;\n  } // if this is an implicitly inserted rule (the one eagerly inserted at the each new nested level)\n  // then the props has already been manipulated beforehand as they that array is shared between it and its \"rule parent\"\n\n\n  if (isImplicitRule) {\n    return;\n  }\n\n  fixedElements.set(element, true);\n  var points = [];\n  var rules = getRules(value, points);\n  var parentRules = parent.props;\n\n  for (var i = 0, k = 0; i < rules.length; i++) {\n    for (var j = 0; j < parentRules.length; j++, k++) {\n      element.props[k] = points[i] ? rules[i].replace(/&\\f/g, parentRules[j]) : parentRules[j] + \" \" + rules[i];\n    }\n  }\n};\nvar removeLabel = function removeLabel(element) {\n  if (element.type === 'decl') {\n    var value = element.value;\n\n    if ( // charcode for l\n    value.charCodeAt(0) === 108 && // charcode for b\n    value.charCodeAt(2) === 98) {\n      // this ignores label\n      element[\"return\"] = '';\n      element.value = '';\n    }\n  }\n};\nvar ignoreFlag = 'emotion-disable-server-rendering-unsafe-selector-warning-please-do-not-use-this-the-warning-exists-for-a-reason';\n\nvar isIgnoringComment = function isIgnoringComment(element) {\n  return element.type === 'comm' && element.children.indexOf(ignoreFlag) > -1;\n};\n\nvar createUnsafeSelectorsAlarm = function createUnsafeSelectorsAlarm(cache) {\n  return function (element, index, children) {\n    if (element.type !== 'rule' || cache.compat) return;\n    var unsafePseudoClasses = element.value.match(/(:first|:nth|:nth-last)-child/g);\n\n    if (unsafePseudoClasses) {\n      var isNested = !!element.parent; // in nested rules comments become children of the \"auto-inserted\" rule and that's always the `element.parent`\n      //\n      // considering this input:\n      // .a {\n      //   .b /* comm */ {}\n      //   color: hotpink;\n      // }\n      // we get output corresponding to this:\n      // .a {\n      //   & {\n      //     /* comm */\n      //     color: hotpink;\n      //   }\n      //   .b {}\n      // }\n\n      var commentContainer = isNested ? element.parent.children : // global rule at the root level\n      children;\n\n      for (var i = commentContainer.length - 1; i >= 0; i--) {\n        var node = commentContainer[i];\n\n        if (node.line < element.line) {\n          break;\n        } // it is quite weird but comments are *usually* put at `column: element.column - 1`\n        // so we seek *from the end* for the node that is earlier than the rule's `element` and check that\n        // this will also match inputs like this:\n        // .a {\n        //   /* comm */\n        //   .b {}\n        // }\n        //\n        // but that is fine\n        //\n        // it would be the easiest to change the placement of the comment to be the first child of the rule:\n        // .a {\n        //   .b { /* comm */ }\n        // }\n        // with such inputs we wouldn't have to search for the comment at all\n        // TODO: consider changing this comment placement in the next major version\n\n\n        if (node.column < element.column) {\n          if (isIgnoringComment(node)) {\n            return;\n          }\n\n          break;\n        }\n      }\n\n      unsafePseudoClasses.forEach(function (unsafePseudoClass) {\n        console.error(\"The pseudo class \\\"\" + unsafePseudoClass + \"\\\" is potentially unsafe when doing server-side rendering. Try changing it to \\\"\" + unsafePseudoClass.split('-child')[0] + \"-of-type\\\".\");\n      });\n    }\n  };\n};\n\nvar isImportRule = function isImportRule(element) {\n  return element.type.charCodeAt(1) === 105 && element.type.charCodeAt(0) === 64;\n};\n\nvar isPrependedWithRegularRules = function isPrependedWithRegularRules(index, children) {\n  for (var i = index - 1; i >= 0; i--) {\n    if (!isImportRule(children[i])) {\n      return true;\n    }\n  }\n\n  return false;\n}; // use this to remove incorrect elements from further processing\n// so they don't get handed to the `sheet` (or anything else)\n// as that could potentially lead to additional logs which in turn could be overhelming to the user\n\n\nvar nullifyElement = function nullifyElement(element) {\n  element.type = '';\n  element.value = '';\n  element[\"return\"] = '';\n  element.children = '';\n  element.props = '';\n};\n\nvar incorrectImportAlarm = function incorrectImportAlarm(element, index, children) {\n  if (!isImportRule(element)) {\n    return;\n  }\n\n  if (element.parent) {\n    console.error(\"`@import` rules can't be nested inside other rules. Please move it to the top level and put it before regular rules. Keep in mind that they can only be used within global styles.\");\n    nullifyElement(element);\n  } else if (isPrependedWithRegularRules(index, children)) {\n    console.error(\"`@import` rules can't be after other rules. Please put your `@import` rules before your other rules.\");\n    nullifyElement(element);\n  }\n};\n\n/* eslint-disable no-fallthrough */\n\nfunction prefix(value, length) {\n  switch (hash(value, length)) {\n    // color-adjust\n    case 5103:\n      return WEBKIT + 'print-' + value + value;\n    // animation, animation-(delay|direction|duration|fill-mode|iteration-count|name|play-state|timing-function)\n\n    case 5737:\n    case 4201:\n    case 3177:\n    case 3433:\n    case 1641:\n    case 4457:\n    case 2921: // text-decoration, filter, clip-path, backface-visibility, column, box-decoration-break\n\n    case 5572:\n    case 6356:\n    case 5844:\n    case 3191:\n    case 6645:\n    case 3005: // mask, mask-image, mask-(mode|clip|size), mask-(repeat|origin), mask-position, mask-composite,\n\n    case 6391:\n    case 5879:\n    case 5623:\n    case 6135:\n    case 4599:\n    case 4855: // background-clip, columns, column-(count|fill|gap|rule|rule-color|rule-style|rule-width|span|width)\n\n    case 4215:\n    case 6389:\n    case 5109:\n    case 5365:\n    case 5621:\n    case 3829:\n      return WEBKIT + value + value;\n    // appearance, user-select, transform, hyphens, text-size-adjust\n\n    case 5349:\n    case 4246:\n    case 4810:\n    case 6968:\n    case 2756:\n      return WEBKIT + value + MOZ + value + MS + value + value;\n    // flex, flex-direction\n\n    case 6828:\n    case 4268:\n      return WEBKIT + value + MS + value + value;\n    // order\n\n    case 6165:\n      return WEBKIT + value + MS + 'flex-' + value + value;\n    // align-items\n\n    case 5187:\n      return WEBKIT + value + replace(value, /(\\w+).+(:[^]+)/, WEBKIT + 'box-$1$2' + MS + 'flex-$1$2') + value;\n    // align-self\n\n    case 5443:\n      return WEBKIT + value + MS + 'flex-item-' + replace(value, /flex-|-self/, '') + value;\n    // align-content\n\n    case 4675:\n      return WEBKIT + value + MS + 'flex-line-pack' + replace(value, /align-content|flex-|-self/, '') + value;\n    // flex-shrink\n\n    case 5548:\n      return WEBKIT + value + MS + replace(value, 'shrink', 'negative') + value;\n    // flex-basis\n\n    case 5292:\n      return WEBKIT + value + MS + replace(value, 'basis', 'preferred-size') + value;\n    // flex-grow\n\n    case 6060:\n      return WEBKIT + 'box-' + replace(value, '-grow', '') + WEBKIT + value + MS + replace(value, 'grow', 'positive') + value;\n    // transition\n\n    case 4554:\n      return WEBKIT + replace(value, /([^-])(transform)/g, '$1' + WEBKIT + '$2') + value;\n    // cursor\n\n    case 6187:\n      return replace(replace(replace(value, /(zoom-|grab)/, WEBKIT + '$1'), /(image-set)/, WEBKIT + '$1'), value, '') + value;\n    // background, background-image\n\n    case 5495:\n    case 3959:\n      return replace(value, /(image-set\\([^]*)/, WEBKIT + '$1' + '$`$1');\n    // justify-content\n\n    case 4968:\n      return replace(replace(value, /(.+:)(flex-)?(.*)/, WEBKIT + 'box-pack:$3' + MS + 'flex-pack:$3'), /s.+-b[^;]+/, 'justify') + WEBKIT + value + value;\n    // (margin|padding)-inline-(start|end)\n\n    case 4095:\n    case 3583:\n    case 4068:\n    case 2532:\n      return replace(value, /(.+)-inline(.+)/, WEBKIT + '$1$2') + value;\n    // (min|max)?(width|height|inline-size|block-size)\n\n    case 8116:\n    case 7059:\n    case 5753:\n    case 5535:\n    case 5445:\n    case 5701:\n    case 4933:\n    case 4677:\n    case 5533:\n    case 5789:\n    case 5021:\n    case 4765:\n      // stretch, max-content, min-content, fill-available\n      if (strlen(value) - 1 - length > 6) switch (charat(value, length + 1)) {\n        // (m)ax-content, (m)in-content\n        case 109:\n          // -\n          if (charat(value, length + 4) !== 45) break;\n        // (f)ill-available, (f)it-content\n\n        case 102:\n          return replace(value, /(.+:)(.+)-([^]+)/, '$1' + WEBKIT + '$2-$3' + '$1' + MOZ + (charat(value, length + 3) == 108 ? '$3' : '$2-$3')) + value;\n        // (s)tretch\n\n        case 115:\n          return ~indexof(value, 'stretch') ? prefix(replace(value, 'stretch', 'fill-available'), length) + value : value;\n      }\n      break;\n    // position: sticky\n\n    case 4949:\n      // (s)ticky?\n      if (charat(value, length + 1) !== 115) break;\n    // display: (flex|inline-flex)\n\n    case 6444:\n      switch (charat(value, strlen(value) - 3 - (~indexof(value, '!important') && 10))) {\n        // stic(k)y\n        case 107:\n          return replace(value, ':', ':' + WEBKIT) + value;\n        // (inline-)?fl(e)x\n\n        case 101:\n          return replace(value, /(.+:)([^;!]+)(;|!.+)?/, '$1' + WEBKIT + (charat(value, 14) === 45 ? 'inline-' : '') + 'box$3' + '$1' + WEBKIT + '$2$3' + '$1' + MS + '$2box$3') + value;\n      }\n\n      break;\n    // writing-mode\n\n    case 5936:\n      switch (charat(value, length + 11)) {\n        // vertical-l(r)\n        case 114:\n          return WEBKIT + value + MS + replace(value, /[svh]\\w+-[tblr]{2}/, 'tb') + value;\n        // vertical-r(l)\n\n        case 108:\n          return WEBKIT + value + MS + replace(value, /[svh]\\w+-[tblr]{2}/, 'tb-rl') + value;\n        // horizontal(-)tb\n\n        case 45:\n          return WEBKIT + value + MS + replace(value, /[svh]\\w+-[tblr]{2}/, 'lr') + value;\n      }\n\n      return WEBKIT + value + MS + value + value;\n  }\n\n  return value;\n}\n\nvar prefixer = function prefixer(element, index, children, callback) {\n  if (element.length > -1) if (!element[\"return\"]) switch (element.type) {\n    case DECLARATION:\n      element[\"return\"] = prefix(element.value, element.length);\n      break;\n\n    case KEYFRAMES:\n      return serialize([copy(element, {\n        value: replace(element.value, '@', '@' + WEBKIT)\n      })], callback);\n\n    case RULESET:\n      if (element.length) return combine(element.props, function (value) {\n        switch (match(value, /(::plac\\w+|:read-\\w+)/)) {\n          // :read-(only|write)\n          case ':read-only':\n          case ':read-write':\n            return serialize([copy(element, {\n              props: [replace(value, /:(read-\\w+)/, ':' + MOZ + '$1')]\n            })], callback);\n          // :placeholder\n\n          case '::placeholder':\n            return serialize([copy(element, {\n              props: [replace(value, /:(plac\\w+)/, ':' + WEBKIT + 'input-$1')]\n            }), copy(element, {\n              props: [replace(value, /:(plac\\w+)/, ':' + MOZ + '$1')]\n            }), copy(element, {\n              props: [replace(value, /:(plac\\w+)/, MS + 'input-$1')]\n            })], callback);\n        }\n\n        return '';\n      });\n  }\n};\n\nvar defaultStylisPlugins = [prefixer];\n\nvar createCache = function createCache(options) {\n  var key = options.key;\n\n  if (process.env.NODE_ENV !== 'production' && !key) {\n    throw new Error(\"You have to configure `key` for your cache. Please make sure it's unique (and not equal to 'css') as it's used for linking styles to your cache.\\n\" + \"If multiple caches share the same key they might \\\"fight\\\" for each other's style elements.\");\n  }\n\n  if ( key === 'css') {\n    var ssrStyles = document.querySelectorAll(\"style[data-emotion]:not([data-s])\"); // get SSRed styles out of the way of React's hydration\n    // document.head is a safe place to move them to(though note document.head is not necessarily the last place they will be)\n    // note this very very intentionally targets all style elements regardless of the key to ensure\n    // that creating a cache works inside of render of a React component\n\n    Array.prototype.forEach.call(ssrStyles, function (node) {\n      // we want to only move elements which have a space in the data-emotion attribute value\n      // because that indicates that it is an Emotion 11 server-side rendered style elements\n      // while we will already ignore Emotion 11 client-side inserted styles because of the :not([data-s]) part in the selector\n      // Emotion 10 client-side inserted styles did not have data-s (but importantly did not have a space in their data-emotion attributes)\n      // so checking for the space ensures that loading Emotion 11 after Emotion 10 has inserted some styles\n      // will not result in the Emotion 10 styles being destroyed\n      var dataEmotionAttribute = node.getAttribute('data-emotion');\n\n      if (dataEmotionAttribute.indexOf(' ') === -1) {\n        return;\n      }\n      document.head.appendChild(node);\n      node.setAttribute('data-s', '');\n    });\n  }\n\n  var stylisPlugins = options.stylisPlugins || defaultStylisPlugins;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // $FlowFixMe\n    if (/[^a-z-]/.test(key)) {\n      throw new Error(\"Emotion key must only contain lower case alphabetical characters and - but \\\"\" + key + \"\\\" was passed\");\n    }\n  }\n\n  var inserted = {};\n  var container;\n  var nodesToHydrate = [];\n\n  {\n    container = options.container || document.head;\n    Array.prototype.forEach.call( // this means we will ignore elements which don't have a space in them which\n    // means that the style elements we're looking at are only Emotion 11 server-rendered style elements\n    document.querySelectorAll(\"style[data-emotion^=\\\"\" + key + \" \\\"]\"), function (node) {\n      var attrib = node.getAttribute(\"data-emotion\").split(' '); // $FlowFixMe\n\n      for (var i = 1; i < attrib.length; i++) {\n        inserted[attrib[i]] = true;\n      }\n\n      nodesToHydrate.push(node);\n    });\n  }\n\n  var _insert;\n\n  var omnipresentPlugins = [compat, removeLabel];\n\n  if (process.env.NODE_ENV !== 'production') {\n    omnipresentPlugins.push(createUnsafeSelectorsAlarm({\n      get compat() {\n        return cache.compat;\n      }\n\n    }), incorrectImportAlarm);\n  }\n\n  {\n    var currentSheet;\n    var finalizingPlugins = [stringify, process.env.NODE_ENV !== 'production' ? function (element) {\n      if (!element.root) {\n        if (element[\"return\"]) {\n          currentSheet.insert(element[\"return\"]);\n        } else if (element.value && element.type !== COMMENT) {\n          // insert empty rule in non-production environments\n          // so @emotion/jest can grab `key` from the (JS)DOM for caches without any rules inserted yet\n          currentSheet.insert(element.value + \"{}\");\n        }\n      }\n    } : rulesheet(function (rule) {\n      currentSheet.insert(rule);\n    })];\n    var serializer = middleware(omnipresentPlugins.concat(stylisPlugins, finalizingPlugins));\n\n    var stylis = function stylis(styles) {\n      return serialize(compile(styles), serializer);\n    };\n\n    _insert = function insert(selector, serialized, sheet, shouldCache) {\n      currentSheet = sheet;\n\n      if (process.env.NODE_ENV !== 'production' && serialized.map !== undefined) {\n        currentSheet = {\n          insert: function insert(rule) {\n            sheet.insert(rule + serialized.map);\n          }\n        };\n      }\n\n      stylis(selector ? selector + \"{\" + serialized.styles + \"}\" : serialized.styles);\n\n      if (shouldCache) {\n        cache.inserted[serialized.name] = true;\n      }\n    };\n  }\n\n  var cache = {\n    key: key,\n    sheet: new StyleSheet({\n      key: key,\n      container: container,\n      nonce: options.nonce,\n      speedy: options.speedy,\n      prepend: options.prepend,\n      insertionPoint: options.insertionPoint\n    }),\n    nonce: options.nonce,\n    inserted: inserted,\n    registered: {},\n    insert: _insert\n  };\n  cache.sheet.hydrate(nodesToHydrate);\n  return cache;\n};\n\nexport default createCache;\n","import {MS, MOZ, WEBKIT, RULESET, KEYFRAMES, DECLARATION} from './Enum.js'\nimport {match, charat, substr, strlen, sizeof, replace, combine} from './Utility.js'\nimport {copy, tokenize} from './Tokenizer.js'\nimport {serialize} from './Serializer.js'\nimport {prefix} from './Prefixer.js'\n\n/**\n * @param {function[]} collection\n * @return {function}\n */\nexport function middleware (collection) {\n\tvar length = sizeof(collection)\n\n\treturn function (element, index, children, callback) {\n\t\tvar output = ''\n\n\t\tfor (var i = 0; i < length; i++)\n\t\t\toutput += collection[i](element, index, children, callback) || ''\n\n\t\treturn output\n\t}\n}\n\n/**\n * @param {function} callback\n * @return {function}\n */\nexport function rulesheet (callback) {\n\treturn function (element) {\n\t\tif (!element.root)\n\t\t\tif (element = element.return)\n\t\t\t\tcallback(element)\n\t}\n}\n\n/**\n * @param {object} element\n * @param {number} index\n * @param {object[]} children\n * @param {function} callback\n */\nexport function prefixer (element, index, children, callback) {\n\tif (element.length > -1)\n\t\tif (!element.return)\n\t\t\tswitch (element.type) {\n\t\t\t\tcase DECLARATION: element.return = prefix(element.value, element.length, children)\n\t\t\t\t\treturn\n\t\t\t\tcase KEYFRAMES:\n\t\t\t\t\treturn serialize([copy(element, {value: replace(element.value, '@', '@' + WEBKIT)})], callback)\n\t\t\t\tcase RULESET:\n\t\t\t\t\tif (element.length)\n\t\t\t\t\t\treturn combine(element.props, function (value) {\n\t\t\t\t\t\t\tswitch (match(value, /(::plac\\w+|:read-\\w+)/)) {\n\t\t\t\t\t\t\t\t// :read-(only|write)\n\t\t\t\t\t\t\t\tcase ':read-only': case ':read-write':\n\t\t\t\t\t\t\t\t\treturn serialize([copy(element, {props: [replace(value, /:(read-\\w+)/, ':' + MOZ + '$1')]})], callback)\n\t\t\t\t\t\t\t\t// :placeholder\n\t\t\t\t\t\t\t\tcase '::placeholder':\n\t\t\t\t\t\t\t\t\treturn serialize([\n\t\t\t\t\t\t\t\t\t\tcopy(element, {props: [replace(value, /:(plac\\w+)/, ':' + WEBKIT + 'input-$1')]}),\n\t\t\t\t\t\t\t\t\t\tcopy(element, {props: [replace(value, /:(plac\\w+)/, ':' + MOZ + '$1')]}),\n\t\t\t\t\t\t\t\t\t\tcopy(element, {props: [replace(value, /:(plac\\w+)/, MS + 'input-$1')]})\n\t\t\t\t\t\t\t\t\t], callback)\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn ''\n\t\t\t\t\t\t})\n\t\t\t}\n}\n\n/**\n * @param {object} element\n * @param {number} index\n * @param {object[]} children\n */\nexport function namespace (element) {\n\tswitch (element.type) {\n\t\tcase RULESET:\n\t\t\telement.props = element.props.map(function (value) {\n\t\t\t\treturn combine(tokenize(value), function (value, index, children) {\n\t\t\t\t\tswitch (charat(value, 0)) {\n\t\t\t\t\t\t// \\f\n\t\t\t\t\t\tcase 12:\n\t\t\t\t\t\t\treturn substr(value, 1, strlen(value))\n\t\t\t\t\t\t// \\0 ( + > ~\n\t\t\t\t\t\tcase 0: case 40: case 43: case 62: case 126:\n\t\t\t\t\t\t\treturn value\n\t\t\t\t\t\t// :\n\t\t\t\t\t\tcase 58:\n\t\t\t\t\t\t\tif (children[++index] === 'global')\n\t\t\t\t\t\t\t\tchildren[index] = '', children[++index] = '\\f' + substr(children[index], index = 1, -1)\n\t\t\t\t\t\t// \\s\n\t\t\t\t\t\tcase 32:\n\t\t\t\t\t\t\treturn index === 1 ? '' : value\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tswitch (index) {\n\t\t\t\t\t\t\t\tcase 0: element = value\n\t\t\t\t\t\t\t\t\treturn sizeof(children) > 1 ? '' : value\n\t\t\t\t\t\t\t\tcase index = sizeof(children) - 1: case 2:\n\t\t\t\t\t\t\t\t\treturn index === 2 ? value + element + element : value + element\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\treturn value\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t})\n\t}\n}\n","/* eslint-disable */\n// Inspired by https://github.com/garycourt/murmurhash-js\n// Ported from https://github.com/aappleby/smhasher/blob/61a0530f28277f2e850bfc39600ce61d02b518de/src/MurmurHash2.cpp#L37-L86\nfunction murmur2(str) {\n  // 'm' and 'r' are mixing constants generated offline.\n  // They're not really 'magic', they just happen to work well.\n  // const m = 0x5bd1e995;\n  // const r = 24;\n  // Initialize the hash\n  var h = 0; // Mix 4 bytes at a time into the hash\n\n  var k,\n      i = 0,\n      len = str.length;\n\n  for (; len >= 4; ++i, len -= 4) {\n    k = str.charCodeAt(i) & 0xff | (str.charCodeAt(++i) & 0xff) << 8 | (str.charCodeAt(++i) & 0xff) << 16 | (str.charCodeAt(++i) & 0xff) << 24;\n    k =\n    /* Math.imul(k, m): */\n    (k & 0xffff) * 0x5bd1e995 + ((k >>> 16) * 0xe995 << 16);\n    k ^=\n    /* k >>> r: */\n    k >>> 24;\n    h =\n    /* Math.imul(k, m): */\n    (k & 0xffff) * 0x5bd1e995 + ((k >>> 16) * 0xe995 << 16) ^\n    /* Math.imul(h, m): */\n    (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  } // Handle the last few bytes of the input array\n\n\n  switch (len) {\n    case 3:\n      h ^= (str.charCodeAt(i + 2) & 0xff) << 16;\n\n    case 2:\n      h ^= (str.charCodeAt(i + 1) & 0xff) << 8;\n\n    case 1:\n      h ^= str.charCodeAt(i) & 0xff;\n      h =\n      /* Math.imul(h, m): */\n      (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  } // Do a few final mixes of the hash to ensure the last few\n  // bytes are well-incorporated.\n\n\n  h ^= h >>> 13;\n  h =\n  /* Math.imul(h, m): */\n  (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  return ((h ^ h >>> 15) >>> 0).toString(36);\n}\n\nexport default murmur2;\n","var unitlessKeys = {\n  animationIterationCount: 1,\n  borderImageOutset: 1,\n  borderImageSlice: 1,\n  borderImageWidth: 1,\n  boxFlex: 1,\n  boxFlexGroup: 1,\n  boxOrdinalGroup: 1,\n  columnCount: 1,\n  columns: 1,\n  flex: 1,\n  flexGrow: 1,\n  flexPositive: 1,\n  flexShrink: 1,\n  flexNegative: 1,\n  flexOrder: 1,\n  gridRow: 1,\n  gridRowEnd: 1,\n  gridRowSpan: 1,\n  gridRowStart: 1,\n  gridColumn: 1,\n  gridColumnEnd: 1,\n  gridColumnSpan: 1,\n  gridColumnStart: 1,\n  msGridRow: 1,\n  msGridRowSpan: 1,\n  msGridColumn: 1,\n  msGridColumnSpan: 1,\n  fontWeight: 1,\n  lineHeight: 1,\n  opacity: 1,\n  order: 1,\n  orphans: 1,\n  tabSize: 1,\n  widows: 1,\n  zIndex: 1,\n  zoom: 1,\n  WebkitLineClamp: 1,\n  // SVG-related properties\n  fillOpacity: 1,\n  floodOpacity: 1,\n  stopOpacity: 1,\n  strokeDasharray: 1,\n  strokeDashoffset: 1,\n  strokeMiterlimit: 1,\n  strokeOpacity: 1,\n  strokeWidth: 1\n};\n\nexport default unitlessKeys;\n","import hashString from '@emotion/hash';\nimport unitless from '@emotion/unitless';\nimport memoize from '@emotion/memoize';\n\nvar ILLEGAL_ESCAPE_SEQUENCE_ERROR = \"You have illegal escape sequence in your template literal, most likely inside content's property value.\\nBecause you write your CSS inside a JavaScript string you actually have to do double escaping, so for example \\\"content: '\\\\00d7';\\\" should become \\\"content: '\\\\\\\\00d7';\\\".\\nYou can read more about this here:\\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#ES2018_revision_of_illegal_escape_sequences\";\nvar UNDEFINED_AS_OBJECT_KEY_ERROR = \"You have passed in falsy value as style object's key (can happen when in example you pass unexported component as computed key).\";\nvar hyphenateRegex = /[A-Z]|^ms/g;\nvar animationRegex = /_EMO_([^_]+?)_([^]*?)_EMO_/g;\n\nvar isCustomProperty = function isCustomProperty(property) {\n  return property.charCodeAt(1) === 45;\n};\n\nvar isProcessableValue = function isProcessableValue(value) {\n  return value != null && typeof value !== 'boolean';\n};\n\nvar processStyleName = /* #__PURE__ */memoize(function (styleName) {\n  return isCustomProperty(styleName) ? styleName : styleName.replace(hyphenateRegex, '-$&').toLowerCase();\n});\n\nvar processStyleValue = function processStyleValue(key, value) {\n  switch (key) {\n    case 'animation':\n    case 'animationName':\n      {\n        if (typeof value === 'string') {\n          return value.replace(animationRegex, function (match, p1, p2) {\n            cursor = {\n              name: p1,\n              styles: p2,\n              next: cursor\n            };\n            return p1;\n          });\n        }\n      }\n  }\n\n  if (unitless[key] !== 1 && !isCustomProperty(key) && typeof value === 'number' && value !== 0) {\n    return value + 'px';\n  }\n\n  return value;\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  var contentValuePattern = /(var|attr|counters?|url|element|(((repeating-)?(linear|radial))|conic)-gradient)\\(|(no-)?(open|close)-quote/;\n  var contentValues = ['normal', 'none', 'initial', 'inherit', 'unset'];\n  var oldProcessStyleValue = processStyleValue;\n  var msPattern = /^-ms-/;\n  var hyphenPattern = /-(.)/g;\n  var hyphenatedCache = {};\n\n  processStyleValue = function processStyleValue(key, value) {\n    if (key === 'content') {\n      if (typeof value !== 'string' || contentValues.indexOf(value) === -1 && !contentValuePattern.test(value) && (value.charAt(0) !== value.charAt(value.length - 1) || value.charAt(0) !== '\"' && value.charAt(0) !== \"'\")) {\n        throw new Error(\"You seem to be using a value for 'content' without quotes, try replacing it with `content: '\\\"\" + value + \"\\\"'`\");\n      }\n    }\n\n    var processed = oldProcessStyleValue(key, value);\n\n    if (processed !== '' && !isCustomProperty(key) && key.indexOf('-') !== -1 && hyphenatedCache[key] === undefined) {\n      hyphenatedCache[key] = true;\n      console.error(\"Using kebab-case for css properties in objects is not supported. Did you mean \" + key.replace(msPattern, 'ms-').replace(hyphenPattern, function (str, _char) {\n        return _char.toUpperCase();\n      }) + \"?\");\n    }\n\n    return processed;\n  };\n}\n\nvar noComponentSelectorMessage = 'Component selectors can only be used in conjunction with ' + '@emotion/babel-plugin, the swc Emotion plugin, or another Emotion-aware ' + 'compiler transform.';\n\nfunction handleInterpolation(mergedProps, registered, interpolation) {\n  if (interpolation == null) {\n    return '';\n  }\n\n  if (interpolation.__emotion_styles !== undefined) {\n    if (process.env.NODE_ENV !== 'production' && interpolation.toString() === 'NO_COMPONENT_SELECTOR') {\n      throw new Error(noComponentSelectorMessage);\n    }\n\n    return interpolation;\n  }\n\n  switch (typeof interpolation) {\n    case 'boolean':\n      {\n        return '';\n      }\n\n    case 'object':\n      {\n        if (interpolation.anim === 1) {\n          cursor = {\n            name: interpolation.name,\n            styles: interpolation.styles,\n            next: cursor\n          };\n          return interpolation.name;\n        }\n\n        if (interpolation.styles !== undefined) {\n          var next = interpolation.next;\n\n          if (next !== undefined) {\n            // not the most efficient thing ever but this is a pretty rare case\n            // and there will be very few iterations of this generally\n            while (next !== undefined) {\n              cursor = {\n                name: next.name,\n                styles: next.styles,\n                next: cursor\n              };\n              next = next.next;\n            }\n          }\n\n          var styles = interpolation.styles + \";\";\n\n          if (process.env.NODE_ENV !== 'production' && interpolation.map !== undefined) {\n            styles += interpolation.map;\n          }\n\n          return styles;\n        }\n\n        return createStringFromObject(mergedProps, registered, interpolation);\n      }\n\n    case 'function':\n      {\n        if (mergedProps !== undefined) {\n          var previousCursor = cursor;\n          var result = interpolation(mergedProps);\n          cursor = previousCursor;\n          return handleInterpolation(mergedProps, registered, result);\n        } else if (process.env.NODE_ENV !== 'production') {\n          console.error('Functions that are interpolated in css calls will be stringified.\\n' + 'If you want to have a css call based on props, create a function that returns a css call like this\\n' + 'let dynamicStyle = (props) => css`color: ${props.color}`\\n' + 'It can be called directly with props or interpolated in a styled call like this\\n' + \"let SomeComponent = styled('div')`${dynamicStyle}`\");\n        }\n\n        break;\n      }\n\n    case 'string':\n      if (process.env.NODE_ENV !== 'production') {\n        var matched = [];\n        var replaced = interpolation.replace(animationRegex, function (match, p1, p2) {\n          var fakeVarName = \"animation\" + matched.length;\n          matched.push(\"const \" + fakeVarName + \" = keyframes`\" + p2.replace(/^@keyframes animation-\\w+/, '') + \"`\");\n          return \"${\" + fakeVarName + \"}\";\n        });\n\n        if (matched.length) {\n          console.error('`keyframes` output got interpolated into plain string, please wrap it with `css`.\\n\\n' + 'Instead of doing this:\\n\\n' + [].concat(matched, [\"`\" + replaced + \"`\"]).join('\\n') + '\\n\\nYou should wrap it with `css` like this:\\n\\n' + (\"css`\" + replaced + \"`\"));\n        }\n      }\n\n      break;\n  } // finalize string values (regular strings and functions interpolated into css calls)\n\n\n  if (registered == null) {\n    return interpolation;\n  }\n\n  var cached = registered[interpolation];\n  return cached !== undefined ? cached : interpolation;\n}\n\nfunction createStringFromObject(mergedProps, registered, obj) {\n  var string = '';\n\n  if (Array.isArray(obj)) {\n    for (var i = 0; i < obj.length; i++) {\n      string += handleInterpolation(mergedProps, registered, obj[i]) + \";\";\n    }\n  } else {\n    for (var _key in obj) {\n      var value = obj[_key];\n\n      if (typeof value !== 'object') {\n        if (registered != null && registered[value] !== undefined) {\n          string += _key + \"{\" + registered[value] + \"}\";\n        } else if (isProcessableValue(value)) {\n          string += processStyleName(_key) + \":\" + processStyleValue(_key, value) + \";\";\n        }\n      } else {\n        if (_key === 'NO_COMPONENT_SELECTOR' && process.env.NODE_ENV !== 'production') {\n          throw new Error(noComponentSelectorMessage);\n        }\n\n        if (Array.isArray(value) && typeof value[0] === 'string' && (registered == null || registered[value[0]] === undefined)) {\n          for (var _i = 0; _i < value.length; _i++) {\n            if (isProcessableValue(value[_i])) {\n              string += processStyleName(_key) + \":\" + processStyleValue(_key, value[_i]) + \";\";\n            }\n          }\n        } else {\n          var interpolated = handleInterpolation(mergedProps, registered, value);\n\n          switch (_key) {\n            case 'animation':\n            case 'animationName':\n              {\n                string += processStyleName(_key) + \":\" + interpolated + \";\";\n                break;\n              }\n\n            default:\n              {\n                if (process.env.NODE_ENV !== 'production' && _key === 'undefined') {\n                  console.error(UNDEFINED_AS_OBJECT_KEY_ERROR);\n                }\n\n                string += _key + \"{\" + interpolated + \"}\";\n              }\n          }\n        }\n      }\n    }\n  }\n\n  return string;\n}\n\nvar labelPattern = /label:\\s*([^\\s;\\n{]+)\\s*(;|$)/g;\nvar sourceMapPattern;\n\nif (process.env.NODE_ENV !== 'production') {\n  sourceMapPattern = /\\/\\*#\\ssourceMappingURL=data:application\\/json;\\S+\\s+\\*\\//g;\n} // this is the cursor for keyframes\n// keyframes are stored on the SerializedStyles object as a linked list\n\n\nvar cursor;\nvar serializeStyles = function serializeStyles(args, registered, mergedProps) {\n  if (args.length === 1 && typeof args[0] === 'object' && args[0] !== null && args[0].styles !== undefined) {\n    return args[0];\n  }\n\n  var stringMode = true;\n  var styles = '';\n  cursor = undefined;\n  var strings = args[0];\n\n  if (strings == null || strings.raw === undefined) {\n    stringMode = false;\n    styles += handleInterpolation(mergedProps, registered, strings);\n  } else {\n    if (process.env.NODE_ENV !== 'production' && strings[0] === undefined) {\n      console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);\n    }\n\n    styles += strings[0];\n  } // we start at 1 since we've already handled the first arg\n\n\n  for (var i = 1; i < args.length; i++) {\n    styles += handleInterpolation(mergedProps, registered, args[i]);\n\n    if (stringMode) {\n      if (process.env.NODE_ENV !== 'production' && strings[i] === undefined) {\n        console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);\n      }\n\n      styles += strings[i];\n    }\n  }\n\n  var sourceMap;\n\n  if (process.env.NODE_ENV !== 'production') {\n    styles = styles.replace(sourceMapPattern, function (match) {\n      sourceMap = match;\n      return '';\n    });\n  } // using a global regex with .exec is stateful so lastIndex has to be reset each time\n\n\n  labelPattern.lastIndex = 0;\n  var identifierName = '';\n  var match; // https://esbench.com/bench/5b809c2cf2949800a0f61fb5\n\n  while ((match = labelPattern.exec(styles)) !== null) {\n    identifierName += '-' + // $FlowFixMe we know it's not null\n    match[1];\n  }\n\n  var name = hashString(styles) + identifierName;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // $FlowFixMe SerializedStyles type doesn't have toString property (and we don't want to add it)\n    return {\n      name: name,\n      styles: styles,\n      map: sourceMap,\n      next: cursor,\n      toString: function toString() {\n        return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";\n      }\n    };\n  }\n\n  return {\n    name: name,\n    styles: styles,\n    next: cursor\n  };\n};\n\nexport { serializeStyles };\n","import * as React from 'react';\nimport { useLayoutEffect } from 'react';\n\nvar syncFallback = function syncFallback(create) {\n  return create();\n};\n\nvar useInsertionEffect = React['useInsertion' + 'Effect'] ? React['useInsertion' + 'Effect'] : false;\nvar useInsertionEffectAlwaysWithSyncFallback =  useInsertionEffect || syncFallback;\nvar useInsertionEffectWithLayoutFallback = useInsertionEffect || useLayoutEffect;\n\nexport { useInsertionEffectAlwaysWithSyncFallback, useInsertionEffectWithLayoutFallback };\n","import { createContext, useContext, forwardRef, createElement, Fragment } from 'react';\nimport createCache from '@emotion/cache';\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport weakMemoize from '@emotion/weak-memoize';\nimport hoistNonReactStatics from '../_isolated-hnrs/dist/emotion-react-_isolated-hnrs.browser.esm.js';\nimport { getRegisteredStyles, registerStyles, insertStyles } from '@emotion/utils';\nimport { serializeStyles } from '@emotion/serialize';\nimport { useInsertionEffectAlwaysWithSyncFallback } from '@emotion/use-insertion-effect-with-fallbacks';\n\nvar hasOwnProperty = {}.hasOwnProperty;\n\nvar EmotionCacheContext = /* #__PURE__ */createContext( // we're doing this to avoid preconstruct's dead code elimination in this one case\n// because this module is primarily intended for the browser and node\n// but it's also required in react native and similar environments sometimes\n// and we could have a special build just for that\n// but this is much easier and the native packages\n// might use a different theme context in the future anyway\ntypeof HTMLElement !== 'undefined' ? /* #__PURE__ */createCache({\n  key: 'css'\n}) : null);\n\nif (process.env.NODE_ENV !== 'production') {\n  EmotionCacheContext.displayName = 'EmotionCacheContext';\n}\n\nvar CacheProvider = EmotionCacheContext.Provider;\nvar __unsafe_useEmotionCache = function useEmotionCache() {\n  return useContext(EmotionCacheContext);\n};\n\nvar withEmotionCache = function withEmotionCache(func) {\n  // $FlowFixMe\n  return /*#__PURE__*/forwardRef(function (props, ref) {\n    // the cache will never be null in the browser\n    var cache = useContext(EmotionCacheContext);\n    return func(props, cache, ref);\n  });\n};\n\nvar ThemeContext = /* #__PURE__ */createContext({});\n\nif (process.env.NODE_ENV !== 'production') {\n  ThemeContext.displayName = 'EmotionThemeContext';\n}\n\nvar useTheme = function useTheme() {\n  return useContext(ThemeContext);\n};\n\nvar getTheme = function getTheme(outerTheme, theme) {\n  if (typeof theme === 'function') {\n    var mergedTheme = theme(outerTheme);\n\n    if (process.env.NODE_ENV !== 'production' && (mergedTheme == null || typeof mergedTheme !== 'object' || Array.isArray(mergedTheme))) {\n      throw new Error('[ThemeProvider] Please return an object from your theme function, i.e. theme={() => ({})}!');\n    }\n\n    return mergedTheme;\n  }\n\n  if (process.env.NODE_ENV !== 'production' && (theme == null || typeof theme !== 'object' || Array.isArray(theme))) {\n    throw new Error('[ThemeProvider] Please make your theme prop a plain object');\n  }\n\n  return _extends({}, outerTheme, theme);\n};\n\nvar createCacheWithTheme = /* #__PURE__ */weakMemoize(function (outerTheme) {\n  return weakMemoize(function (theme) {\n    return getTheme(outerTheme, theme);\n  });\n});\nvar ThemeProvider = function ThemeProvider(props) {\n  var theme = useContext(ThemeContext);\n\n  if (props.theme !== theme) {\n    theme = createCacheWithTheme(theme)(props.theme);\n  }\n\n  return /*#__PURE__*/createElement(ThemeContext.Provider, {\n    value: theme\n  }, props.children);\n};\nfunction withTheme(Component) {\n  var componentName = Component.displayName || Component.name || 'Component';\n\n  var render = function render(props, ref) {\n    var theme = useContext(ThemeContext);\n    return /*#__PURE__*/createElement(Component, _extends({\n      theme: theme,\n      ref: ref\n    }, props));\n  }; // $FlowFixMe\n\n\n  var WithTheme = /*#__PURE__*/forwardRef(render);\n  WithTheme.displayName = \"WithTheme(\" + componentName + \")\";\n  return hoistNonReactStatics(WithTheme, Component);\n}\n\nvar getLastPart = function getLastPart(functionName) {\n  // The match may be something like 'Object.createEmotionProps' or\n  // 'Loader.prototype.render'\n  var parts = functionName.split('.');\n  return parts[parts.length - 1];\n};\n\nvar getFunctionNameFromStackTraceLine = function getFunctionNameFromStackTraceLine(line) {\n  // V8\n  var match = /^\\s+at\\s+([A-Za-z0-9$.]+)\\s/.exec(line);\n  if (match) return getLastPart(match[1]); // Safari / Firefox\n\n  match = /^([A-Za-z0-9$.]+)@/.exec(line);\n  if (match) return getLastPart(match[1]);\n  return undefined;\n};\n\nvar internalReactFunctionNames = /* #__PURE__ */new Set(['renderWithHooks', 'processChild', 'finishClassComponent', 'renderToString']); // These identifiers come from error stacks, so they have to be valid JS\n// identifiers, thus we only need to replace what is a valid character for JS,\n// but not for CSS.\n\nvar sanitizeIdentifier = function sanitizeIdentifier(identifier) {\n  return identifier.replace(/\\$/g, '-');\n};\n\nvar getLabelFromStackTrace = function getLabelFromStackTrace(stackTrace) {\n  if (!stackTrace) return undefined;\n  var lines = stackTrace.split('\\n');\n\n  for (var i = 0; i < lines.length; i++) {\n    var functionName = getFunctionNameFromStackTraceLine(lines[i]); // The first line of V8 stack traces is just \"Error\"\n\n    if (!functionName) continue; // If we reach one of these, we have gone too far and should quit\n\n    if (internalReactFunctionNames.has(functionName)) break; // The component name is the first function in the stack that starts with an\n    // uppercase letter\n\n    if (/^[A-Z]/.test(functionName)) return sanitizeIdentifier(functionName);\n  }\n\n  return undefined;\n};\n\nvar typePropName = '__EMOTION_TYPE_PLEASE_DO_NOT_USE__';\nvar labelPropName = '__EMOTION_LABEL_PLEASE_DO_NOT_USE__';\nvar createEmotionProps = function createEmotionProps(type, props) {\n  if (process.env.NODE_ENV !== 'production' && typeof props.css === 'string' && // check if there is a css declaration\n  props.css.indexOf(':') !== -1) {\n    throw new Error(\"Strings are not allowed as css prop values, please wrap it in a css template literal from '@emotion/react' like this: css`\" + props.css + \"`\");\n  }\n\n  var newProps = {};\n\n  for (var key in props) {\n    if (hasOwnProperty.call(props, key)) {\n      newProps[key] = props[key];\n    }\n  }\n\n  newProps[typePropName] = type; // For performance, only call getLabelFromStackTrace in development and when\n  // the label hasn't already been computed\n\n  if (process.env.NODE_ENV !== 'production' && !!props.css && (typeof props.css !== 'object' || typeof props.css.name !== 'string' || props.css.name.indexOf('-') === -1)) {\n    var label = getLabelFromStackTrace(new Error().stack);\n    if (label) newProps[labelPropName] = label;\n  }\n\n  return newProps;\n};\n\nvar Insertion = function Insertion(_ref) {\n  var cache = _ref.cache,\n      serialized = _ref.serialized,\n      isStringTag = _ref.isStringTag;\n  registerStyles(cache, serialized, isStringTag);\n  var rules = useInsertionEffectAlwaysWithSyncFallback(function () {\n    return insertStyles(cache, serialized, isStringTag);\n  });\n\n  return null;\n};\n\nvar Emotion = /* #__PURE__ */withEmotionCache(function (props, cache, ref) {\n  var cssProp = props.css; // so that using `css` from `emotion` and passing the result to the css prop works\n  // not passing the registered cache to serializeStyles because it would\n  // make certain babel optimisations not possible\n\n  if (typeof cssProp === 'string' && cache.registered[cssProp] !== undefined) {\n    cssProp = cache.registered[cssProp];\n  }\n\n  var WrappedComponent = props[typePropName];\n  var registeredStyles = [cssProp];\n  var className = '';\n\n  if (typeof props.className === 'string') {\n    className = getRegisteredStyles(cache.registered, registeredStyles, props.className);\n  } else if (props.className != null) {\n    className = props.className + \" \";\n  }\n\n  var serialized = serializeStyles(registeredStyles, undefined, useContext(ThemeContext));\n\n  if (process.env.NODE_ENV !== 'production' && serialized.name.indexOf('-') === -1) {\n    var labelFromStack = props[labelPropName];\n\n    if (labelFromStack) {\n      serialized = serializeStyles([serialized, 'label:' + labelFromStack + ';']);\n    }\n  }\n\n  className += cache.key + \"-\" + serialized.name;\n  var newProps = {};\n\n  for (var key in props) {\n    if (hasOwnProperty.call(props, key) && key !== 'css' && key !== typePropName && (process.env.NODE_ENV === 'production' || key !== labelPropName)) {\n      newProps[key] = props[key];\n    }\n  }\n\n  newProps.ref = ref;\n  newProps.className = className;\n  return /*#__PURE__*/createElement(Fragment, null, /*#__PURE__*/createElement(Insertion, {\n    cache: cache,\n    serialized: serialized,\n    isStringTag: typeof WrappedComponent === 'string'\n  }), /*#__PURE__*/createElement(WrappedComponent, newProps));\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  Emotion.displayName = 'EmotionCssPropInternal';\n}\n\nexport { CacheProvider as C, Emotion as E, ThemeContext as T, __unsafe_useEmotionCache as _, ThemeProvider as a, withTheme as b, createEmotionProps as c, hasOwnProperty as h, useTheme as u, withEmotionCache as w };\n","var isBrowser = \"object\" !== 'undefined';\nfunction getRegisteredStyles(registered, registeredStyles, classNames) {\n  var rawClassName = '';\n  classNames.split(' ').forEach(function (className) {\n    if (registered[className] !== undefined) {\n      registeredStyles.push(registered[className] + \";\");\n    } else {\n      rawClassName += className + \" \";\n    }\n  });\n  return rawClassName;\n}\nvar registerStyles = function registerStyles(cache, serialized, isStringTag) {\n  var className = cache.key + \"-\" + serialized.name;\n\n  if ( // we only need to add the styles to the registered cache if the\n  // class name could be used further down\n  // the tree but if it's a string tag, we know it won't\n  // so we don't have to add it to registered cache.\n  // this improves memory usage since we can avoid storing the whole style string\n  (isStringTag === false || // we need to always store it if we're in compat mode and\n  // in node since emotion-server relies on whether a style is in\n  // the registered cache to know whether a style is global or not\n  // also, note that this check will be dead code eliminated in the browser\n  isBrowser === false ) && cache.registered[className] === undefined) {\n    cache.registered[className] = serialized.styles;\n  }\n};\nvar insertStyles = function insertStyles(cache, serialized, isStringTag) {\n  registerStyles(cache, serialized, isStringTag);\n  var className = cache.key + \"-\" + serialized.name;\n\n  if (cache.inserted[serialized.name] === undefined) {\n    var current = serialized;\n\n    do {\n      var maybeStyles = cache.insert(serialized === current ? \".\" + className : '', current, cache.sheet, true);\n\n      current = current.next;\n    } while (current !== undefined);\n  }\n};\n\nexport { getRegisteredStyles, insertStyles, registerStyles };\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport { useContext, createElement, Fragment } from 'react';\nimport isPropValid from '@emotion/is-prop-valid';\nimport { withEmotionCache, ThemeContext } from '@emotion/react';\nimport { getRegisteredStyles, registerStyles, insertStyles } from '@emotion/utils';\nimport { serializeStyles } from '@emotion/serialize';\nimport { useInsertionEffectAlwaysWithSyncFallback } from '@emotion/use-insertion-effect-with-fallbacks';\n\nvar testOmitPropsOnStringTag = isPropValid;\n\nvar testOmitPropsOnComponent = function testOmitPropsOnComponent(key) {\n  return key !== 'theme';\n};\n\nvar getDefaultShouldForwardProp = function getDefaultShouldForwardProp(tag) {\n  return typeof tag === 'string' && // 96 is one less than the char code\n  // for \"a\" so this is checking that\n  // it's a lowercase character\n  tag.charCodeAt(0) > 96 ? testOmitPropsOnStringTag : testOmitPropsOnComponent;\n};\nvar composeShouldForwardProps = function composeShouldForwardProps(tag, options, isReal) {\n  var shouldForwardProp;\n\n  if (options) {\n    var optionsShouldForwardProp = options.shouldForwardProp;\n    shouldForwardProp = tag.__emotion_forwardProp && optionsShouldForwardProp ? function (propName) {\n      return tag.__emotion_forwardProp(propName) && optionsShouldForwardProp(propName);\n    } : optionsShouldForwardProp;\n  }\n\n  if (typeof shouldForwardProp !== 'function' && isReal) {\n    shouldForwardProp = tag.__emotion_forwardProp;\n  }\n\n  return shouldForwardProp;\n};\n\nvar ILLEGAL_ESCAPE_SEQUENCE_ERROR = \"You have illegal escape sequence in your template literal, most likely inside content's property value.\\nBecause you write your CSS inside a JavaScript string you actually have to do double escaping, so for example \\\"content: '\\\\00d7';\\\" should become \\\"content: '\\\\\\\\00d7';\\\".\\nYou can read more about this here:\\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#ES2018_revision_of_illegal_escape_sequences\";\n\nvar Insertion = function Insertion(_ref) {\n  var cache = _ref.cache,\n      serialized = _ref.serialized,\n      isStringTag = _ref.isStringTag;\n  registerStyles(cache, serialized, isStringTag);\n  var rules = useInsertionEffectAlwaysWithSyncFallback(function () {\n    return insertStyles(cache, serialized, isStringTag);\n  });\n\n  return null;\n};\n\nvar createStyled = function createStyled(tag, options) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (tag === undefined) {\n      throw new Error('You are trying to create a styled element with an undefined component.\\nYou may have forgotten to import it.');\n    }\n  }\n\n  var isReal = tag.__emotion_real === tag;\n  var baseTag = isReal && tag.__emotion_base || tag;\n  var identifierName;\n  var targetClassName;\n\n  if (options !== undefined) {\n    identifierName = options.label;\n    targetClassName = options.target;\n  }\n\n  var shouldForwardProp = composeShouldForwardProps(tag, options, isReal);\n  var defaultShouldForwardProp = shouldForwardProp || getDefaultShouldForwardProp(baseTag);\n  var shouldUseAs = !defaultShouldForwardProp('as');\n  return function () {\n    var args = arguments;\n    var styles = isReal && tag.__emotion_styles !== undefined ? tag.__emotion_styles.slice(0) : [];\n\n    if (identifierName !== undefined) {\n      styles.push(\"label:\" + identifierName + \";\");\n    }\n\n    if (args[0] == null || args[0].raw === undefined) {\n      styles.push.apply(styles, args);\n    } else {\n      if (process.env.NODE_ENV !== 'production' && args[0][0] === undefined) {\n        console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);\n      }\n\n      styles.push(args[0][0]);\n      var len = args.length;\n      var i = 1;\n\n      for (; i < len; i++) {\n        if (process.env.NODE_ENV !== 'production' && args[0][i] === undefined) {\n          console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);\n        }\n\n        styles.push(args[i], args[0][i]);\n      }\n    } // $FlowFixMe: we need to cast StatelessFunctionalComponent to our PrivateStyledComponent class\n\n\n    var Styled = withEmotionCache(function (props, cache, ref) {\n      var FinalTag = shouldUseAs && props.as || baseTag;\n      var className = '';\n      var classInterpolations = [];\n      var mergedProps = props;\n\n      if (props.theme == null) {\n        mergedProps = {};\n\n        for (var key in props) {\n          mergedProps[key] = props[key];\n        }\n\n        mergedProps.theme = useContext(ThemeContext);\n      }\n\n      if (typeof props.className === 'string') {\n        className = getRegisteredStyles(cache.registered, classInterpolations, props.className);\n      } else if (props.className != null) {\n        className = props.className + \" \";\n      }\n\n      var serialized = serializeStyles(styles.concat(classInterpolations), cache.registered, mergedProps);\n      className += cache.key + \"-\" + serialized.name;\n\n      if (targetClassName !== undefined) {\n        className += \" \" + targetClassName;\n      }\n\n      var finalShouldForwardProp = shouldUseAs && shouldForwardProp === undefined ? getDefaultShouldForwardProp(FinalTag) : defaultShouldForwardProp;\n      var newProps = {};\n\n      for (var _key in props) {\n        if (shouldUseAs && _key === 'as') continue;\n\n        if ( // $FlowFixMe\n        finalShouldForwardProp(_key)) {\n          newProps[_key] = props[_key];\n        }\n      }\n\n      newProps.className = className;\n      newProps.ref = ref;\n      return /*#__PURE__*/createElement(Fragment, null, /*#__PURE__*/createElement(Insertion, {\n        cache: cache,\n        serialized: serialized,\n        isStringTag: typeof FinalTag === 'string'\n      }), /*#__PURE__*/createElement(FinalTag, newProps));\n    });\n    Styled.displayName = identifierName !== undefined ? identifierName : \"Styled(\" + (typeof baseTag === 'string' ? baseTag : baseTag.displayName || baseTag.name || 'Component') + \")\";\n    Styled.defaultProps = tag.defaultProps;\n    Styled.__emotion_real = Styled;\n    Styled.__emotion_base = baseTag;\n    Styled.__emotion_styles = styles;\n    Styled.__emotion_forwardProp = shouldForwardProp;\n    Object.defineProperty(Styled, 'toString', {\n      value: function value() {\n        if (targetClassName === undefined && process.env.NODE_ENV !== 'production') {\n          return 'NO_COMPONENT_SELECTOR';\n        } // $FlowFixMe: coerce undefined to string\n\n\n        return \".\" + targetClassName;\n      }\n    });\n\n    Styled.withComponent = function (nextTag, nextOptions) {\n      return createStyled(nextTag, _extends({}, options, nextOptions, {\n        shouldForwardProp: composeShouldForwardProps(Styled, nextOptions, true)\n      })).apply(void 0, styles);\n    };\n\n    return Styled;\n  };\n};\n\nexport default createStyled;\n","import '@babel/runtime/helpers/extends';\nimport 'react';\nimport '@emotion/is-prop-valid';\nimport createStyled from '../base/dist/emotion-styled-base.browser.esm.js';\nimport '@emotion/react';\nimport '@emotion/utils';\nimport '@emotion/serialize';\nimport '@emotion/use-insertion-effect-with-fallbacks';\n\nvar tags = ['a', 'abbr', 'address', 'area', 'article', 'aside', 'audio', 'b', 'base', 'bdi', 'bdo', 'big', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'cite', 'code', 'col', 'colgroup', 'data', 'datalist', 'dd', 'del', 'details', 'dfn', 'dialog', 'div', 'dl', 'dt', 'em', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'iframe', 'img', 'input', 'ins', 'kbd', 'keygen', 'label', 'legend', 'li', 'link', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meta', 'meter', 'nav', 'noscript', 'object', 'ol', 'optgroup', 'option', 'output', 'p', 'param', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'script', 'section', 'select', 'small', 'source', 'span', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'textarea', 'tfoot', 'th', 'thead', 'time', 'title', 'tr', 'track', 'u', 'ul', 'var', 'video', 'wbr', // SVG\n'circle', 'clipPath', 'defs', 'ellipse', 'foreignObject', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'svg', 'text', 'tspan'];\n\nvar newStyled = createStyled.bind();\ntags.forEach(function (tagName) {\n  // $FlowFixMe: we can ignore this because its exposed type is defined by the CreateStyled type\n  newStyled[tagName] = newStyled(tagName);\n});\n\nexport default newStyled;\n","import * as React from \"react\"\r\nimport styled from \"@emotion/styled\"\r\n\r\nfunction Qna({ texts }) {\r\n  return (\r\n    <div>\r\n      <div>test</div>\r\n      {texts.map((text, idx) => {\r\n        if (idx % 2 === 0) {\r\n          return <Question key={`answer-${idx}`}>{text}</Question>\r\n        } else {\r\n          return <Answer key={`question-${idx}`}>{text}</Answer>\r\n        }\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Qna\r\n\r\nconst Question = styled.div``\r\n\r\nconst Answer = styled.div``\r\n","import * as React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\nimport { MDXProvider } from \"@mdx-js/react\"\r\nimport { unified } from \"unified\"\r\nimport remarkParse from \"remark-parse\"\r\nimport remarkMdx from \"remark-mdx\"\r\nimport remarkReact from \"remark-react\"\r\nimport remarkRehype from \"remark-rehype\"\r\nimport rehypeReact from \"rehype-react\"\r\nimport rehypeStringify from \"rehype-stringify\"\r\n// import { MDXRenderer } from \"gatsby-plugin-mdx\"\r\n\r\nimport Bio from \"../components/bio\"\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\nimport Comments from \"../components/comments\"\r\nimport Qna from \"../components/qna\"\r\n\r\nconst BlogPostTemplate = ({\r\n  data: { previous, next, site, mdx: post },\r\n  location,\r\n}) => {\r\n  const siteTitle = site.siteMetadata?.title || `Title`\r\n  console.log(post.body)\r\n\r\n  const components = {\r\n    Test: props => (\r\n      <h1 className=\"test\" style={{ color: \"red\" }}>\r\n        {props.children}\r\n      </h1>\r\n    ),\r\n    MyComponent: () => <div>My Component</div>,\r\n    \"my-component\": () => <div>here</div>,\r\n  }\r\n  // const processor = unified()\r\n  //   .use(remarkParse)\r\n  //   .use(remarkMdx)\r\n  //   .use(remarkReact, {\r\n  //     createElement: React.createElement,\r\n  //     remarkReactComponents: {\r\n  //       Test: props => <p style={{ color: \"blue\" }}>{props.children}</p>,\r\n  //       p: props => <p style={{ color: \"black\" }}>{props.children}</p>,\r\n  //     },\r\n  //   })\r\n\r\n  //   const jsx = processor.processSync(`\r\n  //   # gpt와의 응답입니다.\r\n\r\n  //   <Test>하이</Test>\r\n  //   <h1>하이</h1>\r\n  //   <p>test</p>\r\n\r\n  //   ## gp\r\n  // `).result\r\n\r\n  //   const file = processor.parse(`\r\n  //   # gpt와의 응답입니다.\r\n\r\n  //   <Test>하이</Test>\r\n  //   <h1>하이</h1>\r\n  //   <p>test</p>\r\n\r\n  //   ## gp\r\n  // `)\r\n  //   console.log(\"AST:\", file)\r\n\r\n  //   processor.run(file, function (error, node, parent) {\r\n  //     console.log(\"Node:\", node)\r\n  //   })\r\n\r\n  //   const jsx2 = processor.stringify(file)\r\n  //   console.log(\"Result:\", jsx2)\r\n\r\n  //   // console.log(jsx)\r\n\r\n  const processor = unified()\r\n    // Markdown 및 MDX 파싱\r\n    .use(remarkParse)\r\n    .use(remarkMdx)\r\n    // Markdown 또는 MDX를 HAST로 변환\r\n    .use(remarkRehype)\r\n    // HAST를 React 컴포넌트로 변환\r\n    .use(rehypeReact, {\r\n      // createElement: React.createElement,\r\n      createElement: React.createElement,\r\n      components,\r\n    })\r\n\r\n  const mdx = `\r\n# Hello, world!\r\n\r\nThis is an **MDX** document.\r\n\r\n<MyComponent />\r\n\r\n- Item 1\r\n- Item 2\r\n- Item 3\r\n`\r\n\r\n  const hast = processor.parse(mdx)\r\n  const html = processor.stringify(hast)\r\n\r\n  console.log(\"hast:\", hast)\r\n  console.log(\"html:\", html)\r\n\r\n  const jsx = processor.processSync(mdx).result\r\n\r\n  console.log(\"mdx:\", mdx)\r\n  console.log(\"jsx:\", jsx)\r\n\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <article\r\n        className=\"blog-post\"\r\n        itemScope\r\n        itemType=\"http://schema.org/Article\"\r\n      >\r\n        <header>\r\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\r\n          <p>{post.frontmatter.date}</p>\r\n        </header>\r\n        <MDXProvider components={components}>{jsx}</MDXProvider>\r\n\r\n        {/* <div\r\n          dangerouslySetInnerHTML={{ __html: post.body }}\r\n          itemProp=\"articleBody\"\r\n        /> */}\r\n\r\n        <hr />\r\n        <footer>\r\n          <Bio />\r\n        </footer>\r\n      </article>\r\n\r\n      <Comments></Comments>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const Head = ({ data: { mdx: post } }) => {\r\n  return (\r\n    <Seo\r\n      title={post.frontmatter.title}\r\n      description={post.frontmatter.description || post.excerpt}\r\n    />\r\n  )\r\n}\r\n\r\nexport default BlogPostTemplate\r\n\r\nexport const pageQuery = graphql`\r\n  query BlogPostBySlug(\r\n    $id: String!\r\n    $previousPostId: String\r\n    $nextPostId: String\r\n  ) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    mdx(id: { eq: $id }) {\r\n      id\r\n      excerpt(pruneLength: 160)\r\n      body\r\n      frontmatter {\r\n        title\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n        description\r\n      }\r\n    }\r\n    previous: mdx(id: { eq: $previousPostId }) {\r\n      fields {\r\n        slug\r\n      }\r\n      frontmatter {\r\n        title\r\n      }\r\n    }\r\n    next: mdx(id: { eq: $nextPostId }) {\r\n      fields {\r\n        slug\r\n      }\r\n      frontmatter {\r\n        title\r\n      }\r\n    }\r\n  }\r\n`\r\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function(style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function(node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","var parse = require('inline-style-parser');\n\n/**\n * Parses inline style to object.\n *\n * @example\n * // returns { 'line-height': '42' }\n * StyleToObject('line-height: 42;');\n *\n * @param  {String}      style      - The inline style.\n * @param  {Function}    [iterator] - The iterator function.\n * @return {null|Object}\n */\nfunction StyleToObject(style, iterator) {\n  var output = null;\n  if (!style || typeof style !== 'string') {\n    return output;\n  }\n\n  var declaration;\n  var declarations = parse(style);\n  var hasIterator = typeof iterator === 'function';\n  var property;\n  var value;\n\n  for (var i = 0, len = declarations.length; i < len; i++) {\n    declaration = declarations[i];\n    property = declaration.property;\n    value = declaration.value;\n\n    if (hasIterator) {\n      iterator(property, value, declaration);\n    } else if (value) {\n      output || (output = {});\n      output[property] = value;\n    }\n  }\n\n  return output;\n}\n\nmodule.exports = StyleToObject;\nmodule.exports.default = StyleToObject; // ESM support\n","function _extends() {\n  module.exports = _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _extends.apply(this, arguments);\n}\nmodule.exports = _extends, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"names":["visit","hasOwnProperty","Object","prototype","hastCssPropertyMap","align","valign","height","width","visitor","node","hastName","tagName","call","undefined","properties","appendStyle","property","value","prevStyle","style","trim","test","nextStyle","module","exports","convert","type","Boolean","typeFactory","ok","anyFactory","matchesFactory","Error","key","tests","checks","results","length","index","convertAll","apply","this","arguments","visitParents","SKIP","EXIT","tree","reverse","is","one","parents","subresult","result","toResult","children","min","step","all","concat","CONTINUE","parent","indexOf","XHTMLEntities","hexNumber","decimalNumber","acornJsxMap","WeakMap","getJsxTokens","acorn","Parser","acornJsx","get","tt","tokTypes","TokContext","TokenType","tc_oTag","tc_cTag","tc_expr","tokContexts","jsxName","jsxText","beforeExpr","jsxTagStart","startsExpr","jsxTagEnd","updateContext","context","push","exprAllowed","prevType","out","pop","slash","curContext","set","getQualifiedJSXName","object","name","namespace","options","tok","isNewLine","isIdentifierStart","isIdentifierChar","jsx_readToken","chunkStart","pos","input","raise","start","ch","charCodeAt","finishToken","getTokenFromCode","slice","jsx_readEntity","jsx_readNewLine","normalizeCRLF","String","fromCharCode","locations","curLine","lineStart","jsx_readString","quote","string","entity","str","count","startPos","substr","parseInt","jsx_readWord","jsx_parseIdentifier","startNode","keyword","unexpected","next","finishNode","jsx_parseNamespacedName","startLoc","allowNamespaces","eat","colon","startNodeAt","jsx_parseElementName","dot","allowNamespacedObjects","newNode","jsx_parseAttributeValue","braceL","jsx_parseExpressionContainer","expression","parseExprAtom","jsx_parseEmptyExpression","lastTokEnd","lastTokEndLoc","finishNodeAt","braceR","parseExpression","expect","jsx_parseAttribute","ellipsis","argument","parseMaybeAssign","eq","jsx_parseOpeningElementAt","attributes","nodeName","selfClosing","jsx_parseClosingElementAt","jsx_parseElementAt","openingElement","closingElement","contents","fragmentOrElement","relational","jsx_parseText","parseLiteral","jsx_parseElement","refShortHandDefaultPos","super","readToken","code","b_expr","b_tmpl","plugin","defineProperty","configurable","enumerable","quot","amp","apos","lt","gt","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","tilde","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","prop","infin","ang","and","or","cap","cup","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","hasOwn","toStr","toString","gOPD","getOwnPropertyDescriptor","isArray","arr","Array","isPlainObject","obj","hasOwnConstructor","hasIsPrototypeOf","constructor","setProperty","target","newValue","writable","getProperty","extend","src","copyIsArray","clone","i","deep","description","title","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","content","social","twitter","MDXContext","useMDXComponents","components","contextComponents","emptyObject","MDXProvider","disableParentContext","allComponents","Provider","bail","error","getPrototypeOf","Symbol","toStringTag","iterator","trough","fns","pipeline","run","values","middlewareIndex","callback","TypeError","output","fn","middleware","called","wrapped","parameters","fnExpectsCallback","done","exception","Promise","then","wrap","use","middelware","stringifyPosition","position","point","line","column","end","VFileMessage","reason","place","origin","parts","message","stack","fatal","source","ruleId","file","actual","expected","url","note","path","basename","ext","assertPath","seenNonSlash","firstNonSlashEnd","extIndex","dirname","unmatchedSlash","extname","startPart","startDot","preDotState","join","segments","joined","absolute","allowAboveRoot","lastSlashIndex","lastSegmentLength","lastSlash","dots","lastIndexOf","normalizeString","normalize","sep","JSON","stringify","proc","cwd","isUrl","fileUrlOrPath","href","urlToPath","URL","protocol","hostname","pathname","third","decodeURIComponent","getPathFromURLPosix","order","VFile","buffer","data","messages","history","stored","map","includes","assertNonEmpty","assertPart","stem","encoding","info","fail","unified","base","transformers","attachers","frozen","freezeIndex","processor","Compiler","freeze","attacher","transformer","Number","POSITIVE_INFINITY","parse","doc","vfile","assertParser","newable","assertCompiler","assertNode","compile","executor","resolve","reject","runSync","complete","assertDone","process","processSync","destination","assertUnfrozen","own","settings","addPlugin","addList","addPreset","assign","add","plugins","entry","keys","asyncName","looksLikeAVFile","emptyOptions","includeImageAlt","includeHtml","alt","splice","list","remove","items","from","unshift","combineExtensions","extensions","syntaxExtension","extension","hook","left","right","constructs","existing","before","asciiAlpha","regexCheck","asciiDigit","asciiHexDigit","asciiAlphanumeric","asciiPunctuation","asciiAtext","asciiControl","markdownLineEndingOrSpace","markdownLineEnding","markdownSpace","unicodeWhitespace","unicodePunctuation","regex","factorySpace","effects","max","limit","size","enter","prefix","consume","exit","tokenize","contentStart","attempt","parser","contentInitial","previous","token","contentType","self","childFlow","childToken","lineStartOffset","continued","item","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","events","indexBeforeFlow","exitContainers","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","check","containerConstruct","thereIsANewContainer","thereIsNoNewContainer","lazy","now","offset","containerContinue","flow","_tokenizer","flowContinue","writeToChild","eof","stream","sliceStream","defineSkip","write","seen","nok","document","disable","null","blankLine","partial","subtokenize","jumps","event","lineIndex","otherIndex","otherEvent","subevents","more","_isInFirstContentOfListItem","subcontent","_container","eventIndex","startPosition","startPositions","tokenizer","childEvents","gaps","current","adjust","breaks","_gfmTasklistFirstContentOfListItem","contentEnd","continuationConstruct","contentContinue","prefixed","tail","sliceSerialize","initial","flowInitial","afterConstruct","resolver","resolveAll","createResolver","initializeFactory","field","text","notText","atBreak","resolveAllLineSuffixes","extraResolver","chunks","tabs","bufferIndex","chunk","_index","_bufferIndex","createTokenizer","initialize","columnStart","resolveAllConstructs","consumed","accountForPotentialSkip","fields","constructFactory","construct","addResult","onsuccessfulcheck","expandTabs","atTab","serializeChunks","main","expectedCode","state","startIndex","startBufferIndex","endIndex","endBufferIndex","view","sliceChunks","chunkIndex","go","_","restore","onreturn","returnState","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","def","handleMapOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","create","resolveTo","thematicBreak","marker","sequence","initialSize","kind","atMarker","inside","onBlank","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","initialBlankLine","notBlank","furtherBlankLines","notInCurrentItem","indentConstruct","blockQuote","open","after","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","destinationEnclosedBefore","destinationRaw","destinationEnclosed","destinationEnclosedEscape","destinationRawEscape","factoryLabel","markerType","label","labelEscape","factoryTitle","atFirstTitleBreak","atTitleBreak","titleEscape","factoryWhitespace","normalizeIdentifier","replace","toLowerCase","toUpperCase","definition","identifier","labelAfter","titleConstruct","defined","codeIndented","afterStartPrefix","afterPrefix","indentedContent","headingAtx","fenceOpenInside","headingBreak","setextUnderline","paragraph","closingSequence","closingSequenceEnd","heading","htmlBlockNames","htmlRawNames","htmlFlow","startTag","declarationStart","tagCloseStart","continuationDeclarationInside","commentOpenInside","cdataOpenInside","basicSelfClosing","completeAttributeNameBefore","completeClosingTagAfter","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCharacterDataInside","continuationAtLineEnding","nextBlankConstruct","htmlContinueStart","htmlLineEnd","continuationRawEndTag","codeFenced","closingFenceConstruct","closingSequenceStart","sizeOpen","nonLazyLine","initialPrefix","sequenceOpen","infoOpen","openAfter","infoAfter","meta","createElement","decodeNamedCharacterReference","characterReference","innerHTML","char","textContent","numeric","characterEscape","lineEnding","labelEnd","labelStart","_balanced","_inactive","balanced","afterLabelEnd","resourceConstruct","fullReferenceConstruct","collapsedReferenceConstruct","close","media","group","insideSpan","destinationAfter","between","afterLabel","labelStartImage","classifyCharacter","attention","attentionMarkers","_open","_close","openingSequence","nextEvents","movePoint","autolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","htmlText","declarationOpen","instruction","tagOpen","commentOpen","cdataOpen","declaration","commentStart","commentStartDash","comment","commentClose","atLineEnding","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","labelStartLink","hardBreakEscape","codeText","gap","tailExitIndex","headEnterIndex","search","decodeNumericCharacterReference","characterEscapeOrReference","decode","$0","$1","$2","head","hex","fromMarkdown","config","transforms","canContainEols","opener","link","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreak","hardBreakTrailing","html","htmlFlowData","htmlTextData","listItem","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","reference","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","resource","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","configure","mdastExtensions","tokenStack","resume","setData","getData","listStack","prepareList","handler","defaultOnError","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","_spread","errorHandler","onExitError","depth","referenceType","ancestor","decodeString","fragment","ordered","spread","checked","compiler","postprocess","atCarriageReturn","match","endPosition","lastIndex","exec","Math","ceil","preprocess","d","combined","positionFromEstree","nodeLike","loc","range","startColumn","numberOrUndefined","endColumn","nodelike","eventsToAcorn","suffix","acornOptions","comments","tokens","onComment","onToken","lines","estree","startLine","swallow","acornConfig","preserveParens","setPoint","isEmptyExpression","indices","toPoint","toOffset","isNaN","allowEmpty","parseOffsetToUnistPoint","parseExpressionAt","error_","raisedAt","body","sourceType","leave","build","displayName","cKey","grandparents","nodes","cIndex","subvalue","esnode","fixPosition","nodeOrToken","pointStart","pointEnd","acornOffset","sourceOffset","pointInSource","factoryMdxExpression","chunkType","allowLazy","eventStart","prefixExpressionIndent","lastCrash","atClosingBrace","prefixTagIndent","indent","mdxExpression","options_","ecmaVersion","cont","character","lazyLineEnd","factoryTag","tagType","tagMarkerType","tagClosingMarkerType","tagSelfClosingMarker","tagNameType","tagNamePrimaryType","tagNameMemberMarkerType","tagNameMemberType","tagNamePrefixMarkerType","tagNameLocalType","tagExpressionAttributeType","tagExpressionAttributeMarkerType","tagExpressionAttributeValueType","tagAttributeType","tagAttributeNameType","tagAttributeNamePrimaryType","tagAttributeNamePrefixMarkerType","tagAttributeNameLocalType","tagAttributeInitializerMarkerType","tagAttributeValueLiteralType","tagAttributeValueLiteralMarkerType","tagAttributeValueLiteralValueType","tagAttributeValueExpressionType","tagAttributeValueExpressionMarkerType","tagAttributeValueExpressionValueType","afterStart","beforeName","optionalEsWhitespace","beforeClosingTagName","tagEnd","primaryName","crash","afterPrimaryName","beforeMemberName","beforeLocalName","beforeAttribute","memberName","afterMemberName","localName","afterLocalName","afterAttributeExpression","attributePrimaryName","afterAttributePrimaryName","beforeAttributeLocalName","beforeAttributeValue","attributeLocalName","afterAttributeLocalName","attributeValueQuotedStart","afterAttributeValueExpression","attributeValueQuoted","crashEol","optionalEsWhitespaceContinue","at","padStart","serializeCharCode","jsxFlow","mdxJsx","mdxMd","allowedAcornTypes","Set","mdxjsEsm","exportImportConstruct","definedModuleSpecifiers","rest","atEndOfData","atEol","atEnd","shift","has","specifiers","local","mdxExpressionFromMarkdown","mdxFlowExpression","mdxTextExpression","exitMdxExpression","mdxFlowExpressionChunk","exitMdxExpressionData","mdxTextExpressionChunk","mdxExpressionToMarkdown","handlers","handleMdxExpression","unsafe","inConstruct","ccount","characterEntitiesLegacy","characterReferenceInvalid","isDecimal","isHexadecimal","isAlphanumerical","isAlphabetical","prohibited","disallowed","subset","groups","RegExp","charactersToExpression","basic","escapeOnly","pair","format","formatBasic","stringifyEntitiesLight","repeat","eol","indentLines","mdxJsxFromMarkdown","mdxJsxFlowTag","enterMdxJsxTag","mdxJsxFlowTagClosingMarker","enterMdxJsxTagClosingMarker","mdxJsxFlowTagAttribute","enterMdxJsxTagAttribute","mdxJsxFlowTagExpressionAttribute","enterMdxJsxTagExpressionAttribute","mdxJsxFlowTagAttributeValueLiteral","mdxJsxFlowTagAttributeValueExpression","mdxJsxFlowTagSelfClosingMarker","enterMdxJsxTagSelfClosingMarker","mdxJsxTextTag","mdxJsxTextTagClosingMarker","mdxJsxTextTagAttribute","mdxJsxTextTagExpressionAttribute","mdxJsxTextTagAttributeValueLiteral","mdxJsxTextTagAttributeValueExpression","mdxJsxTextTagSelfClosingMarker","exitMdxJsxTagClosingMarker","mdxJsxFlowTagNamePrimary","exitMdxJsxTagNamePrimary","mdxJsxFlowTagNameMember","exitMdxJsxTagNameMember","mdxJsxFlowTagNameLocal","exitMdxJsxTagNameLocal","exitMdxJsxTagExpressionAttribute","mdxJsxFlowTagExpressionAttributeValue","mdxJsxFlowTagAttributeNamePrimary","exitMdxJsxTagAttributeNamePrimary","mdxJsxFlowTagAttributeNameLocal","exitMdxJsxTagAttributeNameLocal","exitMdxJsxTagAttributeValueLiteral","mdxJsxFlowTagAttributeValueLiteralValue","exitMdxJsxTagAttributeValueExpression","mdxJsxFlowTagAttributeValueExpressionValue","exitMdxJsxTagSelfClosingMarker","exitMdxJsxTag","mdxJsxTextTagNamePrimary","mdxJsxTextTagNameMember","mdxJsxTextTagNameLocal","mdxJsxTextTagExpressionAttributeValue","mdxJsxTextTagAttributeNamePrimary","mdxJsxTextTagAttributeNameLocal","mdxJsxTextTagAttributeValueLiteralValue","mdxJsxTextTagAttributeValueExpressionValue","tag","enterMdxJsxTagAnyAttribute","additional","queue","following","begin","characterReferenceCharacters","characters","terminated","namedReference","diff","nonTerminated","warning","attribute","referenceCode","flush","referenceContext","warningContext","textContext","parseEntities","serializeAbbreviatedTag","onErrorRightIsTag","onErrorLeftIsTag","closing","a","b","mdxJsxToMarkdown","quoteSmart","tightSelfClosing","printWidth","alternative","mdxElement","peek","mdxJsxFlowElement","mdxJsxTextElement","fences","resourceLink","safeOptions","tracker","lineShift","move","split","track","serializedAttributes","appliedQuote","attributesOnTheirOwnLine","attributesOnOneLine","indexStack","createTracker","child","handle","bulletLastUsed","containerFlow","charAt","containerPhrasing","blank","mdxjsEsmFromMarkdown","mdxjsEsmData","mdxjsEsmToMarkdown","remarkMdx","mdxjs","mdxToMarkdown","normalizeUri","skip","encodeURIComponent","castFactory","any","propsFactory","factory","clean","footnoteReference","id","safeId","footnoteOrder","counter","footnoteCounts","reuseCounter","clobberPrefix","dataFootnoteRef","ariaDescribedBy","patch","applyData","revert","subtype","listItemLoose","trimLines","last","trimLine","codePointAt","blockquote","break","className","delete","footnote","footnoteById","no","dangerous","imageReference","inlineCode","linkReference","loose","listLoose","disabled","root","table","rows","firstRow","tableContent","tableCell","tableRow","siblings","cellIndex","cells","cell","alignValue","toml","ignore","yaml","footnoteDefinition","createState","allowDangerousHtml","footnoteLabel","footnoteLabelTagName","footnoteLabelProperties","footnoteBackLabel","unknownHandler","passThrough","cache","definitions","augment","hName","hProperties","hChildren","ctx","generated","props","to","defaultUnknownHandler","toHast","foot","listItems","referenceIndex","backReferences","backReference","dataFootnoteBackref","ariaLabel","tailTail","dataFootnotes","footer","bridge","mutate","Schema","normal","space","merge","Info","boolean","booleanish","overloadedBoolean","number","commaSeparated","spaceSeparated","commaOrSpaceSeparated","mustUseProperty","powers","increment","DefinedInfo","mask","mark","transform","xlink","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlns","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","action","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","as","async","autoCapitalize","autoComplete","autoFocus","autoPlay","capture","charSet","cite","cols","colSpan","contentEditable","controls","controlsList","coords","crossOrigin","dateTime","decoding","default","defer","dir","dirName","download","draggable","encType","enterKeyHint","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","hidden","high","hrefLang","htmlFor","httpEquiv","imageSizes","imageSrcSet","inputMode","integrity","isMap","itemId","itemProp","itemRef","itemScope","itemType","language","loading","loop","low","manifest","maxLength","method","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforeMatch","onBeforePrint","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onScrollEnd","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","optimum","pattern","ping","placeholder","playsInline","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rowSpan","sandbox","scope","scoped","seamless","selected","shape","sizes","slot","span","spellCheck","srcDoc","srcLang","srcSet","tabIndex","translate","typeMustMatch","useMap","aLink","archive","axis","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","charOff","classId","clear","codeBase","codeType","color","compact","declare","face","frame","frameBorder","hSpace","leftMargin","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","profile","prompt","rev","rightMargin","rules","scheme","scrolling","standby","summary","topMargin","valueType","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","typeOf","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","defaultAction","descent","diffuseConstant","direction","display","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","fill","filter","filterRes","filterUnits","focusable","focusHighlight","fr","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","mode","numOctaves","observer","opacity","operator","orient","orientation","overflow","overlay","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","r","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","restart","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","u1","u2","unicode","viewBox","viewTarget","visibility","widths","x","x1","x2","xChannelSelector","y","y1","y2","yChannelSelector","z","zoomAndPan","valid","dash","kebab","camelcase","hastToReact","webNamespaces","mathml","toH","h","v","_isVue","vue","vd","vdom","schema","react","hyperscript","parentSchema","addAttribute","Type","dashes","find","subprop","padRight","padLeft","parseStyle","tableElements","rehypeReact","thing","whitespace","component","passNode","Fragment","useEffect","script","getElementById","appendChild","_taggedTemplateLiteralLoose","strings","raw","bind","arg","reactPropsRegex","StyleSheet","_this","_insertTag","tags","insertionPoint","nextSibling","prepend","container","firstChild","insertBefore","isSpeedy","speedy","ctr","_proto","hydrate","forEach","insert","rule","setAttribute","createTextNode","createStyleElement","sheet","styleSheets","ownerNode","sheetForTag","insertRule","cssRules","e","parentNode","removeChild","abs","replacement","indexof","array","return","prev","caret","alloc","dealloc","delimit","delimiter","escaping","commenter","COMMENT","element","rulesets","pseudo","declarations","atrule","variable","scanning","ampersand","ruleset","post","j","identifierWithPointTracking","getRules","parsed","toRules","fixedElements","compat","isImplicitRule","parentRules","removeLabel","hash","defaultStylisPlugins","ssrStyles","querySelectorAll","getAttribute","stylisPlugins","_insert","inserted","nodesToHydrate","attrib","currentSheet","collection","finalizingPlugins","serializer","selector","serialized","shouldCache","styles","registered","len","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","msGridRow","msGridRowSpan","msGridColumn","msGridColumnSpan","lineHeight","orphans","tabSize","widows","zIndex","zoom","WebkitLineClamp","strokeDasharray","strokeDashoffset","strokeMiterlimit","hyphenateRegex","animationRegex","isCustomProperty","isProcessableValue","processStyleName","styleName","processStyleValue","p1","p2","handleInterpolation","mergedProps","interpolation","__emotion_styles","anim","_key","interpolated","_i","createStringFromObject","previousCursor","cached","labelPattern","args","stringMode","identifierName","useInsertionEffect","EmotionCacheContext","useLayoutEffect","createContext","HTMLElement","withEmotionCache","func","forwardRef","ref","useContext","ThemeContext","registeredStyles","classNames","rawClassName","isStringTag","testOmitPropsOnStringTag","testOmitPropsOnComponent","getDefaultShouldForwardProp","composeShouldForwardProps","isReal","shouldForwardProp","optionsShouldForwardProp","__emotion_forwardProp","propName","_ref","createStyled","targetClassName","__emotion_real","baseTag","__emotion_base","defaultShouldForwardProp","shouldUseAs","Styled","FinalTag","classInterpolations","theme","finalShouldForwardProp","newProps","defaultProps","withComponent","nextTag","nextOptions","newStyled","styled","Head","mdx","frontmatter","excerpt","location","siteTitle","console","log","Test","MyComponent","remarkParse","remarkRehype","React","hast","jsx","date","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","EMPTY_STRING","lineno","updatePosition","Position","errorsList","msg","err","filename","silent","re","m","c","val","ret","decl","decls","isBuffer","StyleToObject","hasIterator","_extends","__esModule"],"sourceRoot":""}