{"version":3,"file":"component---src-pages-category-js-2551a9a3a1f4ca92f14b.js","mappings":"uLAgDA,MA5CiB,KACf,MAAMA,GAAOC,EAAAA,EAAAA,gBAAe,cAgBtBC,EAAaF,EAAKG,kBAAkBC,MACpCC,EAAaL,EAAKG,kBAAkBG,WAE1C,OACE,0BACE,gBAAC,EAAAC,KAAI,CAACC,GAAG,KAAI,UAAQH,EAAW,KAC/BH,EAAWO,KAAI,CAACC,EAAUC,IACzB,uBAAKC,IAAKD,GACR,gBAAC,EAAAJ,KAAI,CAACC,GAAE,aAAeE,EAASG,YAC7BH,EAASG,WAAW,KAAGH,EAASJ,WAAW,KAE9C,0BACGI,EAASI,cAAcL,KAAI,CAACM,EAAaJ,IACxC,gBAAC,EAAAJ,KAAI,CACHC,GAAE,aAAeE,EAASG,WAAU,IAAIE,EAAYF,WAAU,IAC9DD,IAAKD,GAEJI,EAAYF,WAAW,KAAGE,EAAYT,WAAW,WAMzD,ECPT,MAjCe,IAAoC,IAAnC,SAAEU,EAAQ,MAAEC,EAAK,SAAEC,GAAU,EAC3C,MACMC,EAD6B,MAChBH,EAASI,SAC5B,IAAIC,EAgBJ,OAbEA,EADEF,EAEA,sBAAIG,UAAU,gBACZ,gBAAC,EAAAf,KAAI,CAACC,GAAG,KAAKS,IAKhB,gBAAC,EAAAV,KAAI,CAACe,UAAU,mBAAmBd,GAAG,KACnCS,GAML,uBAAKK,UAAU,iBAAiB,oBAAmBH,GACjD,0BAAQG,UAAU,iBAAiBD,GACnC,gBAAC,EAAQ,MACT,4BAAOH,GACP,8BAAQ,MACH,IAAIK,MAAOC,cAAc,eAC5B,IACA,qBAAGC,KAAK,4BAA2B,WAEjC,C,gEClBV,UAViB,IAA4B,IAA3B,KAAEzB,EAAI,YAAE0B,GAAa,EAOrC,OAAO,gBAAC,IAAM,KAA6C,C","sources":["webpack://gatsby-starter-blog/./src/templates/category.js","webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/pages/category.js"],"sourcesContent":["import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst Category = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      allMarkdownRemark {\r\n        totalCount\r\n        group(field: frontmatter___main) {\r\n          totalCount\r\n          fieldValue\r\n          subcategories: group(field: frontmatter___sub) {\r\n            totalCount\r\n            fieldValue\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  const categories = data.allMarkdownRemark.group\r\n  const totalPosts = data.allMarkdownRemark.totalCount\r\n\r\n  return (\r\n    <ul>\r\n      <Link to=\"/\">전체 보기 ({totalPosts})</Link>\r\n      {categories.map((category, index) => (\r\n        <div key={index}>\r\n          <Link to={`/category/${category.fieldValue}`}>\r\n            {category.fieldValue} ({category.totalCount})\r\n          </Link>\r\n          <ul>\r\n            {category.subcategories.map((subcategory, index) => (\r\n              <Link\r\n                to={`/category/${category.fieldValue}/${subcategory.fieldValue}/`}\r\n                key={index}\r\n              >\r\n                {subcategory.fieldValue} ({subcategory.totalCount})\r\n              </Link>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      ))}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default Category\r\n","import * as React from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport Category from \"../templates/category\"\r\n\r\nconst Layout = ({ location, title, children }) => {\r\n  const rootPath = `${__PATH_PREFIX__}/`\r\n  const isRootPath = location.pathname === rootPath\r\n  let header\r\n\r\n  if (isRootPath) {\r\n    header = (\r\n      <h1 className=\"main-heading\">\r\n        <Link to=\"/\">{title}</Link>\r\n      </h1>\r\n    )\r\n  } else {\r\n    header = (\r\n      <Link className=\"header-link-home\" to=\"/\">\r\n        {title}\r\n      </Link>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\r\n      <header className=\"global-header\">{header}</header>\r\n      <Category></Category>\r\n      <main>{children}</main>\r\n      <footer>\r\n        © {new Date().getFullYear()}, Built with\r\n        {` `}\r\n        <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\r\n      </footer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","import React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\nimport Layout from \"../components/layout\"\r\n// import BlogIndex from \".\"\r\n\r\nconst Category = ({ data, pageContext }) => {\r\n  //   const { category, subcategory } = pageContext\r\n  //   const posts = data.allMarkdownRemark.nodes.filter(\r\n  //     node =>\r\n  //       node.frontmatter.main === category && node.frontmatter.sub === subcategory\r\n  //   )\r\n\r\n  return <Layout>{/* <BlogIndex posts={posts} /> */}</Layout>\r\n}\r\n\r\nexport default Category\r\n\r\n// export const query = graphql`\r\n//   query ($category: String!, $subcategory: String!) {\r\n//     allMarkdownRemark(\r\n//       sort: { fields: [frontmatter___date], order: DESC }\r\n//       filter: {\r\n//         frontmatter: { main: { eq: $category }, sub: { eq: $subcategory } }\r\n//       }\r\n//     ) {\r\n//       nodes {\r\n//         excerpt\r\n//         fields {\r\n//           slug\r\n//         }\r\n//         frontmatter {\r\n//           date(formatString: \"MMMM DD, YYYY\")\r\n//           title\r\n//           description\r\n//           main\r\n//           sub\r\n//         }\r\n//       }\r\n//     }\r\n//   }\r\n// `\r\n"],"names":["data","useStaticQuery","categories","allMarkdownRemark","group","totalPosts","totalCount","Link","to","map","category","index","key","fieldValue","subcategories","subcategory","location","title","children","isRootPath","pathname","header","className","Date","getFullYear","href","pageContext"],"sourceRoot":""}