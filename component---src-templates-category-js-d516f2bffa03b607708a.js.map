{"version":3,"file":"component---src-templates-category-js-d516f2bffa03b607708a.js","mappings":"uJAmCA,IAhCe,IAAoC,IAAnC,SAAEA,EAAQ,MAAEC,EAAK,SAAEC,GAAU,EAC3C,MACMC,EAD6B,MAChBH,EAASI,SAC5B,IAAIC,EAgBJ,OAbEA,EADEF,EAEA,sBAAIG,UAAU,gBACZ,gBAAC,EAAAC,KAAI,CAACC,GAAG,KAAKP,IAKhB,gBAAC,EAAAM,KAAI,CAACD,UAAU,mBAAmBE,GAAG,KACnCP,GAML,uBAAKK,UAAU,iBAAiB,oBAAmBH,GACjD,0BAAQG,UAAU,iBAAiBD,GACnC,4BAAOH,GACP,8BAAQ,MACH,IAAIO,MAAOC,cAAc,eAC5B,IACA,qBAAGC,KAAK,4BAA2B,WAEjC,C,sDCFV,UAzBiB,IAA4B,IAA3B,YAAEC,EAAW,KAAEC,GAAM,EACrC,MAAM,SAAEC,GAAaF,GACf,MAAEG,EAAK,WAAEC,GAAeH,EAAKI,kBAC7BC,EAAoBF,EAAU,SACnB,IAAfA,EAAmB,IAAM,KAAG,cAChBF,EAAQ,IAEtB,OACE,gBAAC,IAAM,KACL,0BAAKI,GACL,0BACGH,EAAMI,KAAI,IAAe,IAAd,KAAEC,GAAM,EAClB,MAAM,KAAEC,GAASD,EAAKE,QAChB,MAAErB,GAAUmB,EAAKG,WACvB,OACE,sBAAIC,IAAKH,GACP,qBAAGV,KAAI,IAAMU,GAASpB,GACnB,KAIJ,C","sources":["webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/templates/category.js"],"sourcesContent":["import * as React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nconst Layout = ({ location, title, children }) => {\r\n  const rootPath = `${__PATH_PREFIX__}/`\r\n  const isRootPath = location.pathname === rootPath\r\n  let header\r\n\r\n  if (isRootPath) {\r\n    header = (\r\n      <h1 className=\"main-heading\">\r\n        <Link to=\"/\">{title}</Link>\r\n      </h1>\r\n    )\r\n  } else {\r\n    header = (\r\n      <Link className=\"header-link-home\" to=\"/\">\r\n        {title}\r\n      </Link>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\r\n      <header className=\"global-header\">{header}</header>\r\n      <main>{children}</main>\r\n      <footer>\r\n        Â© {new Date().getFullYear()}, Built with\r\n        {` `}\r\n        <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\r\n      </footer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","import React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\nimport Layout from \"../components/layout\"\r\n\r\nconst Category = ({ pageContext, data }) => {\r\n  const { category } = pageContext\r\n  const { edges, totalCount } = data.allMarkdownRemark\r\n  const categoryHeader = `${totalCount} post${\r\n    totalCount === 1 ? \" \" : \"s\"\r\n  } category \"${category}\"`\r\n\r\n  return (\r\n    <Layout>\r\n      <h1>{categoryHeader}</h1>\r\n      <ul>\r\n        {edges.map(({ node }) => {\r\n          const { slug } = node.fields\r\n          const { title } = node.formattter\r\n          return (\r\n            <li key={slug}>\r\n              <a href={`/${slug}`}>{title}</a>\r\n            </li>\r\n          )\r\n        })}\r\n      </ul>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Category\r\n\r\nexport const pageQuery = graphql`\r\n  query ($category: String!) {\r\n    allMarkdownRemark(\r\n      limit: 1000\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      filter: { frontmatter: { category: { in: [$category] } } }\r\n    ) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n            title\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["location","title","children","isRootPath","pathname","header","className","Link","to","Date","getFullYear","href","pageContext","data","category","edges","totalCount","allMarkdownRemark","categoryHeader","map","node","slug","fields","formattter","key"],"sourceRoot":""}